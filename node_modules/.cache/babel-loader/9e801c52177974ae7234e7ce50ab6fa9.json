{"ast":null,"code":"import getOpenTransactionBalance from \"./getOpenTransactionBalance\";\nexport default function findFormer(wallet, amount) {\n  const transactions = wallet.transactions;\n  let rest = amount;\n  let former = {};\n\n  for (let t in Object.keys(transactions)) {\n    const openTransactionBalance = getOpenTransactionBalances(wallet, t);\n\n    if (openTransactionBalance > 0) {\n      let val = min(amount, openTransactionBalance);\n      former[t] = rest -= val;\n    }\n\n    if (rest <= 0) {\n      return former;\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/services/wallet/findFormer.js"],"names":["getOpenTransactionBalance","findFormer","wallet","amount","transactions","rest","former","t","Object","keys","openTransactionBalance","getOpenTransactionBalances","val","min"],"mappings":"AAAA,OAAOA,yBAAP,MAAsC,6BAAtC;AAEA,eAAe,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoC;AACjD,QAAMC,YAAY,GAAGF,MAAM,CAACE,YAA5B;AACA,MAAIC,IAAI,GAAGF,MAAX;AACA,MAAIG,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAT,IAAcC,MAAM,CAACC,IAAP,CAAYL,YAAZ,CAAd,EAAyC;AACvC,UAAMM,sBAAsB,GAAGC,0BAA0B,CAACT,MAAD,EAASK,CAAT,CAAzD;;AACA,QAAIG,sBAAsB,GAAG,CAA7B,EAAgC;AAC9B,UAAIE,GAAG,GAAGC,GAAG,CAACV,MAAD,EAASO,sBAAT,CAAb;AACAJ,MAAAA,MAAM,CAACC,CAAD,CAAN,GAAYF,IAAI,IAAIO,GAApB;AACD;;AACD,QAAIP,IAAI,IAAI,CAAZ,EAAe;AACb,aAAOC,MAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD","sourcesContent":["import getOpenTransactionBalance from \"./getOpenTransactionBalance\";\n\nexport default function findFormer(wallet, amount) {\n  const transactions = wallet.transactions;\n  let rest = amount;\n  let former = {};\n  for (let t in Object.keys(transactions)) {\n    const openTransactionBalance = getOpenTransactionBalances(wallet, t);\n    if (openTransactionBalance > 0) {\n      let val = min(amount, openTransactionBalance);\n      former[t] = rest -= val;\n    }\n    if (rest <= 0) {\n      return former;\n    }\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}