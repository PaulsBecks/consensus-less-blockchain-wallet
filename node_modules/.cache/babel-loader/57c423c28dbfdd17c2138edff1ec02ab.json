{"ast":null,"code":"\"use strict\";\n/**\n * asn1rsa.js\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar asn1_js_1 = __importDefault(require(\"asn1.js\"));\n\nvar js_encoding_utils_1 = __importDefault(require(\"js-encoding-utils\"));\n\nvar buffer_1 = __importDefault(require(\"buffer\"));\n\nvar Buffer = buffer_1.default.Buffer;\n\nvar params = __importStar(require(\"./params\"));\n\nvar util_1 = require(\"./util\");\n/**\n * Encode RSA JWK key to ASN.1 DER or PEM of SPKI/OneAsymmetricKey.\n * @param {JsonWebKey} jwk - A key object in JWK format to be encoded.\n * @param {PublicOrPrivate} type - 'public' or 'private'.\n * @returns {DecodedAsn1Key} - Parsed object of ASN.1 encoded key object.\n */\n\n\nexports.fromJwk = function (jwk, type) {\n  var publicKeyAlgorithmOid = params.publicKeyAlgorithms['RSA'].oid; // Parameters is always null Ox0500 in ASN.1 as shown in the Section 2.3.1 https://tools.ietf.org/html/rfc3279\n\n  var parameters = Buffer.from([0x05, 0x00]);\n  var algorithm = {\n    algorithm: publicKeyAlgorithmOid,\n    parameters: parameters\n  }; // to append leading zeros (pruned when making JWK) in order to make binary of intended bit length\n  // https://tools.ietf.org/html/rfc7518#section-6.3\n\n  var modulusBytes = js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.n);\n  var nLen = modulusBytes.length;\n  var modulusLength = nLen % 128 === 0 ? nLen : nLen + (128 - nLen % 128);\n  var modulus = new asn1_js_1.default.bignum(util_1.appendLeadingZeros(modulusBytes, modulusLength)); // JWA RFC\n\n  var publicExponent = new asn1_js_1.default.bignum(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.e));\n  var decoded = {};\n\n  if (type === 'public') {\n    // SPKI\n    decoded.subjectPublicKey = {\n      unused: 0,\n      data: RSAPublicKey.encode({\n        modulus: modulus,\n        publicExponent: publicExponent\n      }, 'der')\n    };\n    decoded.algorithm = algorithm;\n  } else if (type === 'private') {\n    // PKCS8\n    decoded.version = 0; // no public key presents for v2 (0)\n\n    decoded.privateKeyAlgorithm = algorithm;\n    decoded.privateKey = RSAPrivateKey.encode({\n      version: 0,\n      modulus: modulus,\n      publicExponent: publicExponent,\n      privateExponent: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.d), modulusLength)),\n      prime1: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.p), modulusLength)),\n      prime2: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.q), modulusLength)),\n      exponent1: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.dp), modulusLength)),\n      exponent2: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.dq), modulusLength)),\n      coefficient: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.qi), modulusLength))\n    }, 'der');\n  }\n\n  return decoded;\n};\n/**\n * Convert RSA spki/pkcs8 public/private keys to JWK\n * @param {Object} decoded - Parsed object of RSA key to be encoded.\n * @param {PublicOrPrivate} type - 'public' or 'private'\n * @return {JsonWebKey} - Encoded RSA key object in JWK format.\n */\n\n\nexports.toJwk = function (decoded, type) {\n  if (type === 'public') {\n    // SPKI\n    // algorithm.algorithm.parameters is always null Ox0500 in ASN.1\n    // as shown in the Section 2.3.1 https://tools.ietf.org/html/rfc3279\n    // overwrite nested binary object as parsed object\n    decoded.subjectPublicKey.data = RSAPublicKey.decode(decoded.subjectPublicKey.data, 'der');\n    var modulus = decoded.subjectPublicKey.data.modulus;\n    var publicExponent = decoded.subjectPublicKey.data.publicExponent; // convert n and e from BN\n    // modulus n\n\n    var nLen = modulus.byteLength();\n    var len = nLen % 128 === 0 ? nLen : nLen + (128 - nLen % 128);\n    modulus = new Uint8Array(modulus.toArray('be', len)); // // publicExponent e;\n\n    publicExponent = new Uint8Array(publicExponent.toArray('be', publicExponent.byteLength()));\n    return {\n      kty: 'RSA',\n      n: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(modulus)),\n      e: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(publicExponent))\n    };\n  } else {\n    // type === 'private', PKCS8\n    // privateKeyAlgorithm.algorithm.parameters is always null Ox0500 in ASN.1\n    // as shown in the Section 2.3.1 https://tools.ietf.org/html/rfc3279\n    // overwrite nested binary object as parsed object\n    decoded.privateKey = RSAPrivateKey.decode(decoded.privateKey, 'der');\n    var privateKeyElems_1 = {}; // work around\n\n    privateKeyElems_1.modulus = decoded.privateKey.modulus; // calculate key length from modulus n\n\n    var nLen = privateKeyElems_1.modulus.byteLength();\n    var len_1 = nLen % 128 === 0 ? nLen : nLen + (128 - nLen % 128); // this is actual key length, e.g., 256 bytes\n    // convert BN to Uint8Array\n\n    privateKeyElems_1.modulus = new Uint8Array(privateKeyElems_1.modulus.toArray('be', len_1)); // n of length len\n\n    privateKeyElems_1.publicExponent = new Uint8Array(decoded.privateKey.publicExponent.toArray('be', decoded.privateKey.publicExponent.byteLength())); // e of arbitrary small length\n\n    privateKeyElems_1.privateExponent = new Uint8Array(decoded.privateKey.privateExponent.toArray('be', len_1)); // d of length len\n\n    var keys = ['prime1', 'prime2', 'exponent1', 'exponent2', 'coefficient']; // elements of length len/2\n\n    keys.forEach(function (key) {\n      privateKeyElems_1[key] = new Uint8Array(decoded.privateKey[key].toArray('be', len_1 >> 1));\n    }); // prune leading zeros JWW RSA private key: https://tools.ietf.org/html/rfc7517\n\n    return {\n      kty: 'RSA',\n      n: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.modulus)),\n      e: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.publicExponent)),\n      d: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.privateExponent)),\n      p: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.prime1)),\n      q: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.prime2)),\n      dp: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.exponent1)),\n      dq: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.exponent2)),\n      qi: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.coefficient))\n    };\n  }\n}; ///////////\n// https://tools.ietf.org/html/rfc3447\n\n\nvar RSAPublicKey = asn1_js_1.default.define('RSAPublicKey', function () {\n  // @ts-ignore\n  this.seq().obj( // @ts-ignore\n  this.key('modulus').int(), // n\n  // @ts-ignore\n  this.key('publicExponent').int() // e\n  );\n});\nvar RSAPrivateKey = asn1_js_1.default.define('RSAPrivateKey', function () {\n  // @ts-ignore\n  this.seq().obj( // @ts-ignore\n  this.key('version').int(), // 0\n  // @ts-ignore\n  this.key('modulus').int(), // n\n  // @ts-ignore\n  this.key('publicExponent').int(), // e\n  // @ts-ignore\n  this.key('privateExponent').int(), // d\n  // @ts-ignore\n  this.key('prime1').int(), // p\n  // @ts-ignore\n  this.key('prime2').int(), // q\n  // @ts-ignore\n  this.key('exponent1').int(), // d mod (p-1)\n  // @ts-ignore\n  this.key('exponent2').int(), // d mod (q-1)\n  // @ts-ignore\n  this.key('coefficient').int(), // (inverse of q) mod p\n  // @ts-ignore\n  this.key('otherPrimeInfos').optional().use(OtherPrimeInfos));\n});\nvar OtherPrimeInfos = asn1_js_1.default.define('OtherPrimeInfos', function () {\n  // @ts-ignore\n  this.seqof(OtherPrimeInfo);\n});\nvar OtherPrimeInfo = asn1_js_1.default.define('OtherPrimeInfo', function () {\n  // @ts-ignore\n  this.seq().obj( // @ts-ignore\n  this.key('prime').int(), // @ts-ignore\n  this.key('exponent').int(), // @ts-ignore\n  this.key('coefficient').int());\n});","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/node_modules/js-crypto-key-utils/dist/asn1rsa.js"],"names":["__importDefault","mod","__esModule","__importStar","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","asn1_js_1","require","js_encoding_utils_1","buffer_1","Buffer","default","params","util_1","fromJwk","jwk","type","publicKeyAlgorithmOid","publicKeyAlgorithms","oid","parameters","from","algorithm","modulusBytes","encoder","decodeBase64Url","n","nLen","length","modulusLength","modulus","bignum","appendLeadingZeros","publicExponent","e","decoded","subjectPublicKey","unused","data","RSAPublicKey","encode","version","privateKeyAlgorithm","privateKey","RSAPrivateKey","privateExponent","d","prime1","p","prime2","q","exponent1","dp","exponent2","dq","coefficient","qi","toJwk","decode","byteLength","len","Uint8Array","toArray","kty","encodeBase64Url","pruneLeadingZeros","privateKeyElems_1","len_1","keys","forEach","key","define","seq","obj","int","optional","use","OtherPrimeInfos","seqof","OtherPrimeInfo"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * asn1rsa.js\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar asn1_js_1 = __importDefault(require(\"asn1.js\"));\nvar js_encoding_utils_1 = __importDefault(require(\"js-encoding-utils\"));\nvar buffer_1 = __importDefault(require(\"buffer\"));\nvar Buffer = buffer_1.default.Buffer;\nvar params = __importStar(require(\"./params\"));\nvar util_1 = require(\"./util\");\n/**\n * Encode RSA JWK key to ASN.1 DER or PEM of SPKI/OneAsymmetricKey.\n * @param {JsonWebKey} jwk - A key object in JWK format to be encoded.\n * @param {PublicOrPrivate} type - 'public' or 'private'.\n * @returns {DecodedAsn1Key} - Parsed object of ASN.1 encoded key object.\n */\nexports.fromJwk = function (jwk, type) {\n    var publicKeyAlgorithmOid = params.publicKeyAlgorithms['RSA'].oid;\n    // Parameters is always null Ox0500 in ASN.1 as shown in the Section 2.3.1 https://tools.ietf.org/html/rfc3279\n    var parameters = Buffer.from([0x05, 0x00]);\n    var algorithm = { algorithm: publicKeyAlgorithmOid, parameters: parameters };\n    // to append leading zeros (pruned when making JWK) in order to make binary of intended bit length\n    // https://tools.ietf.org/html/rfc7518#section-6.3\n    var modulusBytes = js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.n);\n    var nLen = modulusBytes.length;\n    var modulusLength = (nLen % 128 === 0) ? nLen : nLen + (128 - (nLen % 128));\n    var modulus = new asn1_js_1.default.bignum(util_1.appendLeadingZeros(modulusBytes, modulusLength)); // JWA RFC\n    var publicExponent = new asn1_js_1.default.bignum(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.e));\n    var decoded = {};\n    if (type === 'public') { // SPKI\n        decoded.subjectPublicKey = {\n            unused: 0,\n            data: RSAPublicKey.encode({ modulus: modulus, publicExponent: publicExponent }, 'der')\n        };\n        decoded.algorithm = algorithm;\n    }\n    else if (type === 'private') { // PKCS8\n        decoded.version = 0; // no public key presents for v2 (0)\n        decoded.privateKeyAlgorithm = algorithm;\n        decoded.privateKey = RSAPrivateKey.encode({\n            version: 0,\n            modulus: modulus,\n            publicExponent: publicExponent,\n            privateExponent: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.d), modulusLength)),\n            prime1: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.p), modulusLength)),\n            prime2: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.q), modulusLength)),\n            exponent1: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.dp), modulusLength)),\n            exponent2: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.dq), modulusLength)),\n            coefficient: new asn1_js_1.default.bignum(util_1.appendLeadingZeros(js_encoding_utils_1.default.encoder.decodeBase64Url(jwk.qi), modulusLength))\n        }, 'der');\n    }\n    return decoded;\n};\n/**\n * Convert RSA spki/pkcs8 public/private keys to JWK\n * @param {Object} decoded - Parsed object of RSA key to be encoded.\n * @param {PublicOrPrivate} type - 'public' or 'private'\n * @return {JsonWebKey} - Encoded RSA key object in JWK format.\n */\nexports.toJwk = function (decoded, type) {\n    if (type === 'public') { // SPKI\n        // algorithm.algorithm.parameters is always null Ox0500 in ASN.1\n        // as shown in the Section 2.3.1 https://tools.ietf.org/html/rfc3279\n        // overwrite nested binary object as parsed object\n        decoded.subjectPublicKey.data = RSAPublicKey.decode(decoded.subjectPublicKey.data, 'der');\n        var modulus = decoded.subjectPublicKey.data.modulus;\n        var publicExponent = decoded.subjectPublicKey.data.publicExponent;\n        // convert n and e from BN\n        // modulus n\n        var nLen = modulus.byteLength();\n        var len = (nLen % 128 === 0) ? nLen : nLen + (128 - (nLen % 128));\n        modulus = new Uint8Array(modulus.toArray('be', len));\n        // // publicExponent e;\n        publicExponent = new Uint8Array(publicExponent.toArray('be', publicExponent.byteLength()));\n        return {\n            kty: 'RSA',\n            n: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(modulus)),\n            e: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(publicExponent))\n        };\n    }\n    else { // type === 'private', PKCS8\n        // privateKeyAlgorithm.algorithm.parameters is always null Ox0500 in ASN.1\n        // as shown in the Section 2.3.1 https://tools.ietf.org/html/rfc3279\n        // overwrite nested binary object as parsed object\n        decoded.privateKey = RSAPrivateKey.decode(decoded.privateKey, 'der');\n        var privateKeyElems_1 = {}; // work around\n        privateKeyElems_1.modulus = decoded.privateKey.modulus;\n        // calculate key length from modulus n\n        var nLen = privateKeyElems_1.modulus.byteLength();\n        var len_1 = (nLen % 128 === 0) ? nLen : nLen + (128 - (nLen % 128)); // this is actual key length, e.g., 256 bytes\n        // convert BN to Uint8Array\n        privateKeyElems_1.modulus = new Uint8Array(privateKeyElems_1.modulus.toArray('be', len_1)); // n of length len\n        privateKeyElems_1.publicExponent = new Uint8Array(decoded.privateKey.publicExponent.toArray('be', decoded.privateKey.publicExponent.byteLength())); // e of arbitrary small length\n        privateKeyElems_1.privateExponent = new Uint8Array(decoded.privateKey.privateExponent.toArray('be', len_1)); // d of length len\n        var keys = ['prime1', 'prime2', 'exponent1', 'exponent2', 'coefficient']; // elements of length len/2\n        keys.forEach(function (key) {\n            privateKeyElems_1[key] = new Uint8Array(decoded.privateKey[key].toArray('be', (len_1 >> 1)));\n        });\n        // prune leading zeros JWW RSA private key: https://tools.ietf.org/html/rfc7517\n        return {\n            kty: 'RSA',\n            n: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.modulus)),\n            e: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.publicExponent)),\n            d: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.privateExponent)),\n            p: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.prime1)),\n            q: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.prime2)),\n            dp: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.exponent1)),\n            dq: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.exponent2)),\n            qi: js_encoding_utils_1.default.encoder.encodeBase64Url(util_1.pruneLeadingZeros(privateKeyElems_1.coefficient))\n        };\n    }\n};\n///////////\n// https://tools.ietf.org/html/rfc3447\nvar RSAPublicKey = asn1_js_1.default.define('RSAPublicKey', function () {\n    // @ts-ignore\n    this.seq().obj(\n    // @ts-ignore\n    this.key('modulus').int(), // n\n    // @ts-ignore\n    this.key('publicExponent').int() // e\n    );\n});\nvar RSAPrivateKey = asn1_js_1.default.define('RSAPrivateKey', function () {\n    // @ts-ignore\n    this.seq().obj(\n    // @ts-ignore\n    this.key('version').int(), // 0\n    // @ts-ignore\n    this.key('modulus').int(), // n\n    // @ts-ignore\n    this.key('publicExponent').int(), // e\n    // @ts-ignore\n    this.key('privateExponent').int(), // d\n    // @ts-ignore\n    this.key('prime1').int(), // p\n    // @ts-ignore\n    this.key('prime2').int(), // q\n    // @ts-ignore\n    this.key('exponent1').int(), // d mod (p-1)\n    // @ts-ignore\n    this.key('exponent2').int(), // d mod (q-1)\n    // @ts-ignore\n    this.key('coefficient').int(), // (inverse of q) mod p\n    // @ts-ignore\n    this.key('otherPrimeInfos').optional().use(OtherPrimeInfos));\n});\nvar OtherPrimeInfos = asn1_js_1.default.define('OtherPrimeInfos', function () {\n    // @ts-ignore\n    this.seqof(OtherPrimeInfo);\n});\nvar OtherPrimeInfo = asn1_js_1.default.define('OtherPrimeInfo', function () {\n    // @ts-ignore\n    this.seq().obj(\n    // @ts-ignore\n    this.key('prime').int(), \n    // @ts-ignore\n    this.key('exponent').int(), \n    // @ts-ignore\n    this.key('coefficient').int());\n});\n//# sourceMappingURL=asn1rsa.js.map"]},"metadata":{},"sourceType":"script"}