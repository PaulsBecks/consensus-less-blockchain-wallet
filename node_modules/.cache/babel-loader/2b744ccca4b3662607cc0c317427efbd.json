{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * oaep.js\n */\n\nvar params = __importStar(require(\"./params\"));\n\nvar js_crypto_hash_1 = __importDefault(require(\"js-crypto-hash\"));\n\nvar js_crypto_random_1 = __importDefault(require(\"js-crypto-random\"));\n/**\n * Check OAEP length\n * @param {String} mode - 'encrypt' or 'decrypt'\n * @param {Number} k - Octet length of modulus length, i.e., n.\n * @param {Uint8Array} label - OAEP label.\n * @param {String} hash - Name of hash function.\n * @param {Number} mLen - Octet length of message to be encrypted.\n * @param {Number} cLen - the length of ciphertext\n * @throws {Error} - Throws if LabelTooLong, MessageTooLong, DecryptionError or InvalidMode.\n */\n\n\nexports.checkLength = function (mode, _a) {\n  var k = _a.k,\n      label = _a.label,\n      hash = _a.hash,\n      mLen = _a.mLen,\n      cLen = _a.cLen;\n\n  if (mode === 'encrypt') {\n    if (label.length > (1 << params.hashes[hash].maxInput) - 1) throw new Error('LabelTooLong');\n    if (mLen > k - 2 * params.hashes[hash].hashSize - 2) throw new Error('MessageTooLong');\n  } else if (mode === 'decrypt') {\n    if (label.length > (1 << params.hashes[hash].maxInput) - 1) throw new Error('DecryptionError');\n    if (cLen !== k || k < 2 * params.hashes[hash].hashSize + 2) throw new Error('DecryptionError');\n  } else throw new Error('InvalidMode');\n};\n/*\n      a. If the label L is not provided, let L be the empty string. Let\n         lHash = Hash(L), an octet string of length hLen (see the note\n         below).\n\n      b. Generate an octet string PS consisting of k - mLen - 2hLen - 2\n         zero octets.  The length of PS may be zero.\n\n      c. Concatenate lHash, PS, a single octet with hexadecimal value\n         0x01, and the message M to form a data block DB of length k -\n         hLen - 1 octets as\n\n            DB = lHash || PS || 0x01 || M.\n\n      d. Generate a random octet string seed of length hLen.\n\n      e. Let dbMask = MGF(seed, k - hLen - 1).\n\n      f. Let maskedDB = DB \\xor dbMask.\n\n      g. Let seedMask = MGF(maskedDB, hLen).\n\n      h. Let maskedSeed = seed \\xor seedMask.\n\n      i. Concatenate a single octet with hexadecimal value 0x00,\n         maskedSeed, and maskedDB to form an encoded message EM of\n         length k octets as\n\n            EM = 0x00 || maskedSeed || maskedDB.\n */\n\n/**\n * OAEP Encoder\n * @param {Uint8Array} msg - Message.\n * @param {Uint8Array} label - Label.\n * @param {Number} k - Octet length of modulus length, i.e., n.\n * @param {String} hash - Name of hash function.\n * @return {Promise<Uint8Array>} - OAEP encoded message.\n */\n\n\nexports.emeOaepEncode = function (msg, label, k, hash) {\n  if (hash === void 0) {\n    hash = 'SHA-256';\n  }\n\n  return __awaiter(void 0, void 0, void 0, function () {\n    var hashSize, ps, lHash, db, seed, dbMask, maskedDb, seedMask, maskedSeed, em;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          hashSize = params.hashes[hash].hashSize;\n          ps = new Uint8Array(k - msg.length - 2 * hashSize - 2);\n          ps = ps.map(function () {\n            return 0x00;\n          });\n          return [4\n          /*yield*/\n          , js_crypto_hash_1.default.compute(label, hash)];\n\n        case 1:\n          lHash = _a.sent();\n          db = new Uint8Array(k - hashSize - 1);\n          db.set(lHash);\n          db.set(ps, hashSize);\n          db.set(new Uint8Array([0x01]), k - msg.length - hashSize - 2);\n          db.set(msg, k - msg.length - hashSize - 1);\n          return [4\n          /*yield*/\n          , js_crypto_random_1.default.getRandomBytes(hashSize)];\n\n        case 2:\n          seed = _a.sent();\n          return [4\n          /*yield*/\n          , mgf1(seed, k - hashSize - 1, hash)];\n\n        case 3:\n          dbMask = _a.sent();\n          maskedDb = db.map(function (elem, idx) {\n            return 0xFF & (elem ^ dbMask[idx]);\n          });\n          return [4\n          /*yield*/\n          , mgf1(maskedDb, hashSize, hash)];\n\n        case 4:\n          seedMask = _a.sent();\n          maskedSeed = seed.map(function (elem, idx) {\n            return 0xFF & (elem ^ seedMask[idx]);\n          });\n          em = new Uint8Array(k);\n          em.set(new Uint8Array([0x00]));\n          em.set(maskedSeed, 1);\n          em.set(maskedDb, hashSize + 1);\n          return [2\n          /*return*/\n          , em];\n      }\n    });\n  });\n};\n/*\n      a. If the label L is not provided, let L be the empty string. Let\n         lHash = Hash(L), an octet string of length hLen (see the note\n         in Section 7.1.1).\n\n      b. Separate the encoded message EM into a single octet Y, an octet\n         string maskedSeed of length hLen, and an octet string maskedDB\n         of length k - hLen - 1 as\n\n            EM = Y || maskedSeed || maskedDB.\n\n      c. Let seedMask = MGF(maskedDB, hLen).\n\n      d. Let seed = maskedSeed \\xor seedMask.\n\n      e. Let dbMask = MGF(seed, k - hLen - 1).\n\n      f. Let DB = maskedDB \\xor dbMask.\n\n      g. Separate DB into an octet string lHash' of length hLen, a\n         (possibly empty) padding string PS consisting of octets with\n         hexadecimal value 0x00, and a message M as\n\n            DB = lHash' || PS || 0x01 || M.\n\n         If there is no octet with hexadecimal value 0x01 to separate PS\n         from M, if lHash does not equal lHash', or if Y is nonzero,\n         output \"decryption error\" and stop.  (See the note below.)\n */\n\n/**\n * OAEP Decoder\n * @param {Uint8Array} em - OAEP encoded message.\n * @param {Uint8Array} label - Label.\n * @param {Number} k - Octet length of modulus length, i.e., n.\n * @param {String} hash - Name of hash function.\n * @return {Promise<Uint8Array>} - OAEP decoded message.\n * @throws {Error} - Throws if DecryptionError.\n */\n\n\nexports.emeOaepDecode = function (em, label, k, hash) {\n  if (hash === void 0) {\n    hash = 'SHA-256';\n  }\n\n  return __awaiter(void 0, void 0, void 0, function () {\n    var hashSize, lHash, y, maskedSeed, maskedDb, seedMask, seed, dbMask, db, lHashPrime, offset, i, separator;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          hashSize = params.hashes[hash].hashSize;\n          return [4\n          /*yield*/\n          , js_crypto_hash_1.default.compute(label, hash)];\n\n        case 1:\n          lHash = _a.sent();\n          y = em[0];\n          if (y !== 0x00) throw new Error('DecryptionError');\n          maskedSeed = em.slice(1, hashSize + 1);\n          maskedDb = em.slice(hashSize + 1, em.length);\n          return [4\n          /*yield*/\n          , mgf1(maskedDb, hashSize, hash)];\n\n        case 2:\n          seedMask = _a.sent();\n          seed = maskedSeed.map(function (elem, idx) {\n            return 0xFF & (elem ^ seedMask[idx]);\n          });\n          return [4\n          /*yield*/\n          , mgf1(seed, k - hashSize - 1, hash)];\n\n        case 3:\n          dbMask = _a.sent();\n          db = maskedDb.map(function (elem, idx) {\n            return 0xFF & (elem ^ dbMask[idx]);\n          });\n          lHashPrime = db.slice(0, hashSize);\n          if (lHashPrime.toString() !== lHash.toString()) throw new Error('DecryptionError');\n          offset = 0;\n\n          for (i = hashSize; i < db.length; i++) {\n            if (db[i] !== 0x00) {\n              offset = i;\n              break;\n            }\n          }\n\n          separator = db[offset];\n          if (separator !== 0x01) throw new Error('DecryptionError');\n          return [2\n          /*return*/\n          , db.slice(offset + 1, db.length)];\n      }\n    });\n  });\n};\n/**\n * Mask generation function 1 (MGF1)\n * @param {Uint8Array} seed - Seed.\n * @param {Number} len - Length of mask.\n * @param {String} [hash='SHA-256'] - Name of hash algorithm.\n * @return {Promise<Uint8Array>}: Generated mask.\n */\n\n\nvar mgf1 = function (seed, len, hash) {\n  if (hash === void 0) {\n    hash = 'SHA-256';\n  }\n\n  return __awaiter(void 0, void 0, void 0, function () {\n    var hashSize, blockLen, t, i, c, x, y;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          hashSize = params.hashes[hash].hashSize;\n          blockLen = Math.ceil(len / hashSize);\n          t = new Uint8Array(blockLen * hashSize);\n          i = 0;\n          _a.label = 1;\n\n        case 1:\n          if (!(i < blockLen)) return [3\n          /*break*/\n          , 4];\n          c = i2osp(i, 4);\n          x = new Uint8Array(seed.length + 4);\n          x.set(seed);\n          x.set(c, seed.length);\n          return [4\n          /*yield*/\n          , js_crypto_hash_1.default.compute(x, hash)];\n\n        case 2:\n          y = _a.sent();\n          t.set(y, i * hashSize);\n          _a.label = 3;\n\n        case 3:\n          i++;\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          return [2\n          /*return*/\n          , t.slice(0, len)];\n      }\n    });\n  });\n};\n/**\n * I2OSP function\n * @param {Number} x - Number to be encoded to byte array in network byte order.\n * @param {Number} len - Length of byte array\n * @return {Uint8Array} - Encoded number.\n */\n\n\nvar i2osp = function (x, len) {\n  var r = new Uint8Array(len); // @ts-ignore\n\n  r.forEach(function (elem, idx) {\n    var y = 0xFF & x >> idx * 8;\n    r[len - idx - 1] = y;\n  });\n  return r;\n};","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/node_modules/js-crypto-rsa/dist/oaep.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importStar","mod","__esModule","k","Object","hasOwnProperty","__importDefault","defineProperty","exports","params","require","js_crypto_hash_1","js_crypto_random_1","checkLength","mode","_a","hash","mLen","cLen","hashes","maxInput","Error","hashSize","emeOaepEncode","msg","ps","lHash","db","seed","dbMask","maskedDb","seedMask","maskedSeed","em","Uint8Array","map","default","compute","set","getRandomBytes","mgf1","elem","idx","emeOaepDecode","lHashPrime","offset","i","separator","slice","toString","len","blockLen","c","x","Math","ceil","i2osp","r","forEach"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * oaep.js\n */\nvar params = __importStar(require(\"./params\"));\nvar js_crypto_hash_1 = __importDefault(require(\"js-crypto-hash\"));\nvar js_crypto_random_1 = __importDefault(require(\"js-crypto-random\"));\n/**\n * Check OAEP length\n * @param {String} mode - 'encrypt' or 'decrypt'\n * @param {Number} k - Octet length of modulus length, i.e., n.\n * @param {Uint8Array} label - OAEP label.\n * @param {String} hash - Name of hash function.\n * @param {Number} mLen - Octet length of message to be encrypted.\n * @param {Number} cLen - the length of ciphertext\n * @throws {Error} - Throws if LabelTooLong, MessageTooLong, DecryptionError or InvalidMode.\n */\nexports.checkLength = function (mode, _a) {\n    var k = _a.k, label = _a.label, hash = _a.hash, mLen = _a.mLen, cLen = _a.cLen;\n    if (mode === 'encrypt') {\n        if (label.length > (1 << params.hashes[hash].maxInput) - 1)\n            throw new Error('LabelTooLong');\n        if (mLen > k - 2 * params.hashes[hash].hashSize - 2)\n            throw new Error('MessageTooLong');\n    }\n    else if (mode === 'decrypt') {\n        if (label.length > (1 << params.hashes[hash].maxInput) - 1)\n            throw new Error('DecryptionError');\n        if (cLen !== k || k < 2 * params.hashes[hash].hashSize + 2)\n            throw new Error('DecryptionError');\n    }\n    else\n        throw new Error('InvalidMode');\n};\n/*\n      a. If the label L is not provided, let L be the empty string. Let\n         lHash = Hash(L), an octet string of length hLen (see the note\n         below).\n\n      b. Generate an octet string PS consisting of k - mLen - 2hLen - 2\n         zero octets.  The length of PS may be zero.\n\n      c. Concatenate lHash, PS, a single octet with hexadecimal value\n         0x01, and the message M to form a data block DB of length k -\n         hLen - 1 octets as\n\n            DB = lHash || PS || 0x01 || M.\n\n      d. Generate a random octet string seed of length hLen.\n\n      e. Let dbMask = MGF(seed, k - hLen - 1).\n\n      f. Let maskedDB = DB \\xor dbMask.\n\n      g. Let seedMask = MGF(maskedDB, hLen).\n\n      h. Let maskedSeed = seed \\xor seedMask.\n\n      i. Concatenate a single octet with hexadecimal value 0x00,\n         maskedSeed, and maskedDB to form an encoded message EM of\n         length k octets as\n\n            EM = 0x00 || maskedSeed || maskedDB.\n */\n/**\n * OAEP Encoder\n * @param {Uint8Array} msg - Message.\n * @param {Uint8Array} label - Label.\n * @param {Number} k - Octet length of modulus length, i.e., n.\n * @param {String} hash - Name of hash function.\n * @return {Promise<Uint8Array>} - OAEP encoded message.\n */\nexports.emeOaepEncode = function (msg, label, k, hash) {\n    if (hash === void 0) { hash = 'SHA-256'; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var hashSize, ps, lHash, db, seed, dbMask, maskedDb, seedMask, maskedSeed, em;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    hashSize = params.hashes[hash].hashSize;\n                    ps = new Uint8Array(k - msg.length - (2 * hashSize) - 2);\n                    ps = ps.map(function () { return 0x00; });\n                    return [4 /*yield*/, js_crypto_hash_1.default.compute(label, hash)];\n                case 1:\n                    lHash = _a.sent();\n                    db = new Uint8Array(k - hashSize - 1);\n                    db.set(lHash);\n                    db.set(ps, hashSize);\n                    db.set(new Uint8Array([0x01]), k - msg.length - hashSize - 2);\n                    db.set(msg, k - msg.length - hashSize - 1);\n                    return [4 /*yield*/, js_crypto_random_1.default.getRandomBytes(hashSize)];\n                case 2:\n                    seed = _a.sent();\n                    return [4 /*yield*/, mgf1(seed, k - hashSize - 1, hash)];\n                case 3:\n                    dbMask = _a.sent();\n                    maskedDb = db.map(function (elem, idx) { return 0xFF & (elem ^ dbMask[idx]); });\n                    return [4 /*yield*/, mgf1(maskedDb, hashSize, hash)];\n                case 4:\n                    seedMask = _a.sent();\n                    maskedSeed = seed.map(function (elem, idx) { return 0xFF & (elem ^ seedMask[idx]); });\n                    em = new Uint8Array(k);\n                    em.set(new Uint8Array([0x00]));\n                    em.set(maskedSeed, 1);\n                    em.set(maskedDb, hashSize + 1);\n                    return [2 /*return*/, em];\n            }\n        });\n    });\n};\n/*\n      a. If the label L is not provided, let L be the empty string. Let\n         lHash = Hash(L), an octet string of length hLen (see the note\n         in Section 7.1.1).\n\n      b. Separate the encoded message EM into a single octet Y, an octet\n         string maskedSeed of length hLen, and an octet string maskedDB\n         of length k - hLen - 1 as\n\n            EM = Y || maskedSeed || maskedDB.\n\n      c. Let seedMask = MGF(maskedDB, hLen).\n\n      d. Let seed = maskedSeed \\xor seedMask.\n\n      e. Let dbMask = MGF(seed, k - hLen - 1).\n\n      f. Let DB = maskedDB \\xor dbMask.\n\n      g. Separate DB into an octet string lHash' of length hLen, a\n         (possibly empty) padding string PS consisting of octets with\n         hexadecimal value 0x00, and a message M as\n\n            DB = lHash' || PS || 0x01 || M.\n\n         If there is no octet with hexadecimal value 0x01 to separate PS\n         from M, if lHash does not equal lHash', or if Y is nonzero,\n         output \"decryption error\" and stop.  (See the note below.)\n */\n/**\n * OAEP Decoder\n * @param {Uint8Array} em - OAEP encoded message.\n * @param {Uint8Array} label - Label.\n * @param {Number} k - Octet length of modulus length, i.e., n.\n * @param {String} hash - Name of hash function.\n * @return {Promise<Uint8Array>} - OAEP decoded message.\n * @throws {Error} - Throws if DecryptionError.\n */\nexports.emeOaepDecode = function (em, label, k, hash) {\n    if (hash === void 0) { hash = 'SHA-256'; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var hashSize, lHash, y, maskedSeed, maskedDb, seedMask, seed, dbMask, db, lHashPrime, offset, i, separator;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    hashSize = params.hashes[hash].hashSize;\n                    return [4 /*yield*/, js_crypto_hash_1.default.compute(label, hash)];\n                case 1:\n                    lHash = _a.sent();\n                    y = em[0];\n                    if (y !== 0x00)\n                        throw new Error('DecryptionError');\n                    maskedSeed = em.slice(1, hashSize + 1);\n                    maskedDb = em.slice(hashSize + 1, em.length);\n                    return [4 /*yield*/, mgf1(maskedDb, hashSize, hash)];\n                case 2:\n                    seedMask = _a.sent();\n                    seed = maskedSeed.map(function (elem, idx) { return 0xFF & (elem ^ seedMask[idx]); });\n                    return [4 /*yield*/, mgf1(seed, k - hashSize - 1, hash)];\n                case 3:\n                    dbMask = _a.sent();\n                    db = maskedDb.map(function (elem, idx) { return 0xFF & (elem ^ dbMask[idx]); });\n                    lHashPrime = db.slice(0, hashSize);\n                    if (lHashPrime.toString() !== lHash.toString())\n                        throw new Error('DecryptionError');\n                    offset = 0;\n                    for (i = hashSize; i < db.length; i++) {\n                        if (db[i] !== 0x00) {\n                            offset = i;\n                            break;\n                        }\n                    }\n                    separator = db[offset];\n                    if (separator !== 0x01)\n                        throw new Error('DecryptionError');\n                    return [2 /*return*/, db.slice(offset + 1, db.length)];\n            }\n        });\n    });\n};\n/**\n * Mask generation function 1 (MGF1)\n * @param {Uint8Array} seed - Seed.\n * @param {Number} len - Length of mask.\n * @param {String} [hash='SHA-256'] - Name of hash algorithm.\n * @return {Promise<Uint8Array>}: Generated mask.\n */\nvar mgf1 = function (seed, len, hash) {\n    if (hash === void 0) { hash = 'SHA-256'; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var hashSize, blockLen, t, i, c, x, y;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    hashSize = params.hashes[hash].hashSize;\n                    blockLen = Math.ceil(len / hashSize);\n                    t = new Uint8Array(blockLen * hashSize);\n                    i = 0;\n                    _a.label = 1;\n                case 1:\n                    if (!(i < blockLen)) return [3 /*break*/, 4];\n                    c = i2osp(i, 4);\n                    x = new Uint8Array(seed.length + 4);\n                    x.set(seed);\n                    x.set(c, seed.length);\n                    return [4 /*yield*/, js_crypto_hash_1.default.compute(x, hash)];\n                case 2:\n                    y = _a.sent();\n                    t.set(y, i * hashSize);\n                    _a.label = 3;\n                case 3:\n                    i++;\n                    return [3 /*break*/, 1];\n                case 4: return [2 /*return*/, t.slice(0, len)];\n            }\n        });\n    });\n};\n/**\n * I2OSP function\n * @param {Number} x - Number to be encoded to byte array in network byte order.\n * @param {Number} len - Length of byte array\n * @return {Uint8Array} - Encoded number.\n */\nvar i2osp = function (x, len) {\n    var r = new Uint8Array(len);\n    // @ts-ignore\n    r.forEach(function (elem, idx) {\n        var y = 0xFF & (x >> (idx * 8));\n        r[len - idx - 1] = y;\n    });\n    return r;\n};\n//# sourceMappingURL=oaep.js.map"]},"metadata":{},"sourceType":"script"}