{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * key.js\n */\n\nvar converter_1 = require(\"./converter\");\n\nvar thumbprint_1 = require(\"./thumbprint\");\n\nvar lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\n\nvar js_encoding_utils_1 = __importDefault(require(\"js-encoding-utils\"));\n\nvar util_1 = require(\"./util\");\n/**\n * Key class to abstract public and private key objects in string or binary.\n *   This class provides functions to interchangeably convert key formats,\n *   and key objects will be used for the root package, js-crypto-utils, as inputs to exposed APIs.\n */\n\n\nvar Key =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   * @param {KeyFormat} format - Key format: 'jwk', 'der', 'pem' or 'oct' (only for ECC key).\n   * @param {JsonWebKey|PEM|DER|OctetEC} key - Key object in the specified format.\n   * @param {Object} [options={}] - Required if format='oct', and then it is {namedCurve: String}.\n   * @throws {Error} - Throws if the input format and key are incompatible to the constructor.\n   */\n  function Key(format, key, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var localKey = lodash_clonedeep_1.default(key);\n    var localOpt = lodash_clonedeep_1.default(options);\n    this._type = null;\n    this._jwk = null;\n    this._der = null;\n    this._oct = {}; // only for EC keys\n\n    this._isEncrypted = false;\n    this._current = {\n      jwk: false,\n      der: false,\n      oct: false\n    };\n\n    if (format === 'jwk') {\n      this._setJwk(localKey);\n    } else if (format === 'der' || format === 'pem') {\n      if (format === 'der' && !(localKey instanceof Uint8Array)) throw new Error('DerKeyMustBeUint8Array');\n      if (format === 'pem' && typeof localKey !== 'string') throw new Error('PemKeyMustBeString');\n\n      this._setAsn1(localKey, format);\n    } else if (format === 'oct') {\n      if (typeof localOpt.namedCurve !== 'string') throw new Error('namedCurveMustBeSpecified');\n      if (!(localKey instanceof Uint8Array)) throw new Error('OctetKeyMustBeUint8Array');\n\n      this._setSec1(localKey, localOpt.namedCurve);\n    } else throw new Error('UnsupportedType');\n  } ///////////////////////////////////////////////////////////\n  // private method handling instance variables\n  // all instance variables must be set via these methods\n\n  /**\n   * Set a key in JWK to the Key object.\n   * @param {JsonWebKey} jwkey - The Json Web Key.\n   * @private\n   */\n\n\n  Key.prototype._setJwk = function (jwkey) {\n    this._type = util_1.getJwkType(jwkey); // this also check key format\n\n    this._jwk = jwkey;\n    if (this._isEncrypted) this._der = null;\n    this._isEncrypted = false;\n\n    this._setCurrentStatus();\n  };\n  /**\n   * Set a key in DER or PEM to the Key object.\n   * @param {DER|PEM} asn1key - The DER key byte array or PEM key string.\n   * @param {String} format - 'der' or 'pem' specifying the format.\n   * @private\n   */\n\n\n  Key.prototype._setAsn1 = function (asn1key, format) {\n    this._type = util_1.isAsn1Public(asn1key, format) ? 'public' : 'private'; // this also check key format\n\n    this._isEncrypted = util_1.isAsn1Encrypted(asn1key, format);\n    this._der = format === 'pem' ? js_encoding_utils_1.default.formatter.pemToBin(asn1key) : asn1key;\n\n    if (this._isEncrypted) {\n      this._jwk = null;\n      this._oct = {};\n    }\n\n    this._setCurrentStatus();\n  };\n  /**\n   * Set a key in SEC1 = Octet format to the Key Object.\n   * @param {OctetEC} sec1key - The Octet SEC1 key byte array.\n   * @param {CurveTypes} namedCurve - Name of curve like 'P-256'.\n   * @private\n   */\n\n\n  Key.prototype._setSec1 = function (sec1key, namedCurve) {\n    this._type = util_1.getSec1KeyType(sec1key, namedCurve); // this also check key format\n\n    this._oct = {\n      namedCurve: namedCurve,\n      key: sec1key\n    };\n    if (this._isEncrypted) this._der = null;\n    this._isEncrypted = false;\n\n    this._setCurrentStatus();\n  };\n  /**\n   * Set the current internal status. In particular, manage what the object is based on.\n   * @private\n   */\n\n\n  Key.prototype._setCurrentStatus = function () {\n    this._current.jwk = this._jwk !== null && (this._jwk.kty === 'RSA' || this._jwk.kty === 'EC');\n    this._current.der = this._der !== null && this._der.length > 0;\n    this._current.oct = typeof this._oct.key !== 'undefined' && typeof this._oct.namedCurve !== 'undefined' && this._oct.key.length > 0;\n  }; ///////////////////////////////////////////////////////////\n  // (pseudo) public methods allowed to be accessed from outside\n\n  /**\n   * Convert the stored key and export the key in desired format.\n   * Imported key must be basically decrypted except the case where the key is exported as-is.\n   * @param {String} format - Intended format of exported key. 'jwk', 'pem', 'der' or 'oct'\n   * @param {KeyExportOptions} [options={}] - Optional arguments.\n   * @return {Promise<JsonWebKey|PEM|DER|OctetEC>} - Exported key object.\n   */\n\n\n  Key.prototype.export = function (format, options) {\n    if (format === void 0) {\n      format = 'jwk';\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var jwkey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // return 'as is' without passphrase when nothing is given as 'options'\n            // only for the case to export der key from der key (considering encrypted key). expect to be called from getter\n            if (this._isEncrypted && this._type === 'private') {\n              if ((format === 'der' || format === 'pem') && Object.keys(options).length === 0 && this._current.der) {\n                return [2\n                /*return*/\n                , format === 'pem' ? js_encoding_utils_1.default.formatter.binToPem(this._der, 'encryptedPrivate') : this._der];\n              } else throw new Error('DecryptionRequired');\n            }\n\n            if (!this._current.jwk) return [3\n            /*break*/\n            , 1];\n            jwkey = this._jwk;\n            return [3\n            /*break*/\n            , 6];\n\n          case 1:\n            if (!this._current.oct) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , converter_1.toJwkFrom('oct', this._oct.key, {\n              namedCurve: this._oct.namedCurve\n            })];\n\n          case 2:\n            jwkey = _a.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 3:\n            if (!this._current.der) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , converter_1.toJwkFrom('der', this._der)];\n\n          case 4:\n            jwkey = _a.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            throw new Error('InvalidStatus');\n\n          case 6:\n            this._setJwk(jwkey); // store jwk if the exiting private key is not encrypted\n\n\n            if (!(format === 'der' || format === 'pem')) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , converter_1.fromJwkTo(format, jwkey, {\n              outputPublic: options.outputPublic,\n              compact: options.compact,\n              //passphrase: options.encryptParams.passphrase,\n              encryptParams: options.encryptParams\n            })];\n\n          case 7:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 8:\n            if (!(format === 'oct')) return [3\n            /*break*/\n            , 10];\n            return [4\n            /*yield*/\n            , converter_1.fromJwkTo(format, jwkey, {\n              outputPublic: options.outputPublic,\n              output: options.output,\n              compact: options.compact\n            })];\n\n          case 9:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 10:\n            return [2\n            /*return*/\n            , jwkey];\n        }\n      });\n    });\n  };\n  /**\n   * Encrypt stored key and set the encrypted key to this instance.\n   * @param {String} passphrase - String passphrase.\n   * @return {Promise<boolean>} - Always true otherwise thrown.\n   * @throws {Error} - Throws if AlreadyEncrypted.\n   */\n\n\n  Key.prototype.encrypt = function (passphrase) {\n    return __awaiter(this, void 0, void 0, function () {\n      var options, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (this._isEncrypted) throw new Error('AlreadyEncrypted');\n            options = {\n              encryptParams: {\n                passphrase: passphrase\n              }\n            };\n            _a = this._setAsn1;\n            return [4\n            /*yield*/\n            , this.export('der', options)];\n\n          case 1:\n            _a.apply(this, [_b.sent(), 'der']);\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n  /**\n   * Decrypted stored key and set the decrypted key in JWK to this instance.\n   * @param {String} passphrase - String passphrase.\n   * @return {Promise<boolean>} - Always true otherwise thrown.\n   * @throws {Error} - Throws if NotEncrypted or FailedToDecrypt.\n   */\n\n\n  Key.prototype.decrypt = function (passphrase) {\n    return __awaiter(this, void 0, void 0, function () {\n      var jwkey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._isEncrypted) throw new Error('NotEncrypted');\n            if (!this._current.der) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , converter_1.toJwkFrom('der', this._der, {\n              passphrase: passphrase\n            })];\n\n          case 1:\n            jwkey = _a.sent(); // type is not specified here to import jwk\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            throw new Error('FailedToDecrypt');\n\n          case 3:\n            this._setJwk(jwkey);\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n  /**\n   * Conpute JWK thumbprint specified in RFC7638 {@link https://tools.ietf.org/html/rfc7638}.\n   * @param {HashTypes} [alg='SHA-256'] - Name of hash algorithm for thumbprint computation like 'SHA-256'.\n   * @param {JwkThumbpirntFormat} [output='binary'] - Output format of JWK thumbprint. 'binary', 'hex' or 'base64'.\n   * @return {Promise<Uint8Array|String>} - Computed thumbprint.\n   * @throws {Error} - Throws if DecryptionRequired.\n   */\n\n\n  Key.prototype.getJwkThumbprint = function (alg, output) {\n    if (alg === void 0) {\n      alg = 'SHA-256';\n    }\n\n    if (output === void 0) {\n      output = 'binary';\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (this._isEncrypted) throw new Error('DecryptionRequired');\n            _a = thumbprint_1.getJwkThumbprint;\n            return [4\n            /*yield*/\n            , this.export('jwk')];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.apply(void 0, [_b.sent(), alg, output])];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Key.prototype, \"keyType\", {\n    // getters\n\n    /**\n     * Get keyType in JWK format\n     * @return {Promise<String>} - 'RSA' or 'EC'\n     * @throws {Error} - Throws if DecryptionRequired.\n     */\n    get: function () {\n      var _this = this;\n\n      if (this._isEncrypted) throw new Error('DecryptionRequired');\n      return new Promise(function (resolve, reject) {\n        _this.export('jwk').then(function (r) {\n          return resolve(r.kty);\n        }).catch(function (e) {\n          reject(e);\n        });\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Key.prototype, \"jwkThumbprint\", {\n    /**\n     * Get jwkThumbprint of this key.\n     * @return {Promise<Uint8Array>} - Returns binary thumbprint.\n     */\n    get: function () {\n      return this.getJwkThumbprint();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Key.prototype, \"isEncrypted\", {\n    /**\n     * Check if this is encrypted.\n     * @return {boolean}\n     */\n    get: function () {\n      return this._isEncrypted;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Key.prototype, \"isPrivate\", {\n    /**\n     * Check if this is a private key.\n     * @return {boolean}\n     */\n    get: function () {\n      return this._type === 'private';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Key.prototype, \"der\", {\n    /**\n     * Returns the key in DER format.\n     * @return {Promise<DER>}\n     */\n    get: function () {\n      return this.export('der');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Key.prototype, \"pem\", {\n    /**\n     * Returns the key in PEM format.\n     * @return {Promise<PEM>}\n     */\n    get: function () {\n      return this.export('pem');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Key.prototype, \"jwk\", {\n    /**\n     * Returns the key in JWK format\n     * @return {Promise<JsonWebKey>}\n     */\n    get: function () {\n      return this.export('jwk');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Key.prototype, \"oct\", {\n    /**\n     * Returns the 'EC' key in Octet SEC1 format.\n     * @return {Promise<OctetEC>}\n     */\n    get: function () {\n      return this.export('oct', {\n        output: 'string'\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Key;\n}();\n\nexports.Key = Key;","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/node_modules/js-crypto-key-utils/dist/key.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importDefault","mod","__esModule","Object","defineProperty","exports","converter_1","require","thumbprint_1","lodash_clonedeep_1","js_encoding_utils_1","util_1","Key","format","key","options","localKey","default","localOpt","_type","_jwk","_der","_oct","_isEncrypted","_current","jwk","der","oct","_setJwk","Uint8Array","Error","_setAsn1","namedCurve","_setSec1","prototype","jwkey","getJwkType","_setCurrentStatus","asn1key","isAsn1Public","isAsn1Encrypted","formatter","pemToBin","sec1key","getSec1KeyType","kty","export","_a","keys","binToPem","toJwkFrom","fromJwkTo","outputPublic","compact","encryptParams","output","encrypt","passphrase","_b","decrypt","getJwkThumbprint","alg","get","_this","r","catch","enumerable","configurable"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * key.js\n */\nvar converter_1 = require(\"./converter\");\nvar thumbprint_1 = require(\"./thumbprint\");\nvar lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nvar js_encoding_utils_1 = __importDefault(require(\"js-encoding-utils\"));\nvar util_1 = require(\"./util\");\n/**\n * Key class to abstract public and private key objects in string or binary.\n *   This class provides functions to interchangeably convert key formats,\n *   and key objects will be used for the root package, js-crypto-utils, as inputs to exposed APIs.\n */\nvar Key = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {KeyFormat} format - Key format: 'jwk', 'der', 'pem' or 'oct' (only for ECC key).\n     * @param {JsonWebKey|PEM|DER|OctetEC} key - Key object in the specified format.\n     * @param {Object} [options={}] - Required if format='oct', and then it is {namedCurve: String}.\n     * @throws {Error} - Throws if the input format and key are incompatible to the constructor.\n     */\n    function Key(format, key, options) {\n        if (options === void 0) { options = {}; }\n        var localKey = lodash_clonedeep_1.default(key);\n        var localOpt = lodash_clonedeep_1.default(options);\n        this._type = null;\n        this._jwk = null;\n        this._der = null;\n        this._oct = {}; // only for EC keys\n        this._isEncrypted = false;\n        this._current = { jwk: false, der: false, oct: false };\n        if (format === 'jwk') {\n            this._setJwk(localKey);\n        }\n        else if (format === 'der' || format === 'pem') {\n            if (format === 'der' && !(localKey instanceof Uint8Array))\n                throw new Error('DerKeyMustBeUint8Array');\n            if (format === 'pem' && (typeof localKey !== 'string'))\n                throw new Error('PemKeyMustBeString');\n            this._setAsn1(localKey, format);\n        }\n        else if (format === 'oct') {\n            if (typeof localOpt.namedCurve !== 'string')\n                throw new Error('namedCurveMustBeSpecified');\n            if (!(localKey instanceof Uint8Array))\n                throw new Error('OctetKeyMustBeUint8Array');\n            this._setSec1(localKey, localOpt.namedCurve);\n        }\n        else\n            throw new Error('UnsupportedType');\n    }\n    ///////////////////////////////////////////////////////////\n    // private method handling instance variables\n    // all instance variables must be set via these methods\n    /**\n     * Set a key in JWK to the Key object.\n     * @param {JsonWebKey} jwkey - The Json Web Key.\n     * @private\n     */\n    Key.prototype._setJwk = function (jwkey) {\n        this._type = util_1.getJwkType(jwkey); // this also check key format\n        this._jwk = jwkey;\n        if (this._isEncrypted)\n            this._der = null;\n        this._isEncrypted = false;\n        this._setCurrentStatus();\n    };\n    /**\n     * Set a key in DER or PEM to the Key object.\n     * @param {DER|PEM} asn1key - The DER key byte array or PEM key string.\n     * @param {String} format - 'der' or 'pem' specifying the format.\n     * @private\n     */\n    Key.prototype._setAsn1 = function (asn1key, format) {\n        this._type = (util_1.isAsn1Public(asn1key, format)) ? 'public' : 'private'; // this also check key format\n        this._isEncrypted = util_1.isAsn1Encrypted(asn1key, format);\n        this._der = ((format === 'pem') ? js_encoding_utils_1.default.formatter.pemToBin(asn1key) : asn1key);\n        if (this._isEncrypted) {\n            this._jwk = null;\n            this._oct = {};\n        }\n        this._setCurrentStatus();\n    };\n    /**\n     * Set a key in SEC1 = Octet format to the Key Object.\n     * @param {OctetEC} sec1key - The Octet SEC1 key byte array.\n     * @param {CurveTypes} namedCurve - Name of curve like 'P-256'.\n     * @private\n     */\n    Key.prototype._setSec1 = function (sec1key, namedCurve) {\n        this._type = util_1.getSec1KeyType(sec1key, namedCurve); // this also check key format\n        this._oct = { namedCurve: namedCurve, key: sec1key };\n        if (this._isEncrypted)\n            this._der = null;\n        this._isEncrypted = false;\n        this._setCurrentStatus();\n    };\n    /**\n     * Set the current internal status. In particular, manage what the object is based on.\n     * @private\n     */\n    Key.prototype._setCurrentStatus = function () {\n        this._current.jwk = (this._jwk !== null && (this._jwk.kty === 'RSA' || this._jwk.kty === 'EC'));\n        this._current.der = (this._der !== null && this._der.length > 0);\n        this._current.oct = (typeof this._oct.key !== 'undefined'\n            && typeof this._oct.namedCurve !== 'undefined'\n            && this._oct.key.length > 0);\n    };\n    ///////////////////////////////////////////////////////////\n    // (pseudo) public methods allowed to be accessed from outside\n    /**\n     * Convert the stored key and export the key in desired format.\n     * Imported key must be basically decrypted except the case where the key is exported as-is.\n     * @param {String} format - Intended format of exported key. 'jwk', 'pem', 'der' or 'oct'\n     * @param {KeyExportOptions} [options={}] - Optional arguments.\n     * @return {Promise<JsonWebKey|PEM|DER|OctetEC>} - Exported key object.\n     */\n    Key.prototype.export = function (format, options) {\n        if (format === void 0) { format = 'jwk'; }\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var jwkey;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // return 'as is' without passphrase when nothing is given as 'options'\n                        // only for the case to export der key from der key (considering encrypted key). expect to be called from getter\n                        if (this._isEncrypted && this._type === 'private') {\n                            if ((format === 'der' || format === 'pem') && Object.keys(options).length === 0 && this._current.der) {\n                                return [2 /*return*/, (format === 'pem') ? js_encoding_utils_1.default.formatter.binToPem((this._der), 'encryptedPrivate') : this._der];\n                            }\n                            else\n                                throw new Error('DecryptionRequired');\n                        }\n                        if (!this._current.jwk) return [3 /*break*/, 1];\n                        jwkey = this._jwk;\n                        return [3 /*break*/, 6];\n                    case 1:\n                        if (!this._current.oct) return [3 /*break*/, 3];\n                        return [4 /*yield*/, converter_1.toJwkFrom('oct', this._oct.key, { namedCurve: this._oct.namedCurve })];\n                    case 2:\n                        jwkey = _a.sent();\n                        return [3 /*break*/, 6];\n                    case 3:\n                        if (!this._current.der) return [3 /*break*/, 5];\n                        return [4 /*yield*/, converter_1.toJwkFrom('der', this._der)];\n                    case 4:\n                        jwkey = _a.sent();\n                        return [3 /*break*/, 6];\n                    case 5: throw new Error('InvalidStatus');\n                    case 6:\n                        this._setJwk(jwkey); // store jwk if the exiting private key is not encrypted\n                        if (!(format === 'der' || format === 'pem')) return [3 /*break*/, 8];\n                        return [4 /*yield*/, converter_1.fromJwkTo(format, jwkey, {\n                                outputPublic: options.outputPublic,\n                                compact: options.compact,\n                                //passphrase: options.encryptParams.passphrase,\n                                encryptParams: options.encryptParams\n                            })];\n                    case 7: return [2 /*return*/, _a.sent()];\n                    case 8:\n                        if (!(format === 'oct')) return [3 /*break*/, 10];\n                        return [4 /*yield*/, converter_1.fromJwkTo(format, jwkey, {\n                                outputPublic: options.outputPublic,\n                                output: options.output,\n                                compact: options.compact\n                            })];\n                    case 9: return [2 /*return*/, _a.sent()];\n                    case 10: return [2 /*return*/, jwkey];\n                }\n            });\n        });\n    };\n    /**\n     * Encrypt stored key and set the encrypted key to this instance.\n     * @param {String} passphrase - String passphrase.\n     * @return {Promise<boolean>} - Always true otherwise thrown.\n     * @throws {Error} - Throws if AlreadyEncrypted.\n     */\n    Key.prototype.encrypt = function (passphrase) {\n        return __awaiter(this, void 0, void 0, function () {\n            var options, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (this._isEncrypted)\n                            throw new Error('AlreadyEncrypted');\n                        options = { encryptParams: { passphrase: passphrase } };\n                        _a = this._setAsn1;\n                        return [4 /*yield*/, this.export('der', options)];\n                    case 1:\n                        _a.apply(this, [(_b.sent()), 'der']);\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    /**\n     * Decrypted stored key and set the decrypted key in JWK to this instance.\n     * @param {String} passphrase - String passphrase.\n     * @return {Promise<boolean>} - Always true otherwise thrown.\n     * @throws {Error} - Throws if NotEncrypted or FailedToDecrypt.\n     */\n    Key.prototype.decrypt = function (passphrase) {\n        return __awaiter(this, void 0, void 0, function () {\n            var jwkey;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._isEncrypted)\n                            throw new Error('NotEncrypted');\n                        if (!this._current.der) return [3 /*break*/, 2];\n                        return [4 /*yield*/, converter_1.toJwkFrom('der', this._der, { passphrase: passphrase })];\n                    case 1:\n                        jwkey = _a.sent(); // type is not specified here to import jwk\n                        return [3 /*break*/, 3];\n                    case 2: throw new Error('FailedToDecrypt');\n                    case 3:\n                        this._setJwk(jwkey);\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    /**\n     * Conpute JWK thumbprint specified in RFC7638 {@link https://tools.ietf.org/html/rfc7638}.\n     * @param {HashTypes} [alg='SHA-256'] - Name of hash algorithm for thumbprint computation like 'SHA-256'.\n     * @param {JwkThumbpirntFormat} [output='binary'] - Output format of JWK thumbprint. 'binary', 'hex' or 'base64'.\n     * @return {Promise<Uint8Array|String>} - Computed thumbprint.\n     * @throws {Error} - Throws if DecryptionRequired.\n     */\n    Key.prototype.getJwkThumbprint = function (alg, output) {\n        if (alg === void 0) { alg = 'SHA-256'; }\n        if (output === void 0) { output = 'binary'; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (this._isEncrypted)\n                            throw new Error('DecryptionRequired');\n                        _a = thumbprint_1.getJwkThumbprint;\n                        return [4 /*yield*/, this.export('jwk')];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, [(_b.sent()), alg, output])];\n                    case 2: return [2 /*return*/, _b.sent()];\n                }\n            });\n        });\n    };\n    Object.defineProperty(Key.prototype, \"keyType\", {\n        // getters\n        /**\n         * Get keyType in JWK format\n         * @return {Promise<String>} - 'RSA' or 'EC'\n         * @throws {Error} - Throws if DecryptionRequired.\n         */\n        get: function () {\n            var _this = this;\n            if (this._isEncrypted)\n                throw new Error('DecryptionRequired');\n            return new Promise(function (resolve, reject) {\n                _this.export('jwk')\n                    .then(function (r) { return resolve(r.kty); })\n                    .catch(function (e) { reject(e); });\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Key.prototype, \"jwkThumbprint\", {\n        /**\n         * Get jwkThumbprint of this key.\n         * @return {Promise<Uint8Array>} - Returns binary thumbprint.\n         */\n        get: function () {\n            return this.getJwkThumbprint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Key.prototype, \"isEncrypted\", {\n        /**\n         * Check if this is encrypted.\n         * @return {boolean}\n         */\n        get: function () { return this._isEncrypted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Key.prototype, \"isPrivate\", {\n        /**\n         * Check if this is a private key.\n         * @return {boolean}\n         */\n        get: function () { return this._type === 'private'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Key.prototype, \"der\", {\n        /**\n         * Returns the key in DER format.\n         * @return {Promise<DER>}\n         */\n        get: function () { return this.export('der'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Key.prototype, \"pem\", {\n        /**\n         * Returns the key in PEM format.\n         * @return {Promise<PEM>}\n         */\n        get: function () { return this.export('pem'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Key.prototype, \"jwk\", {\n        /**\n         * Returns the key in JWK format\n         * @return {Promise<JsonWebKey>}\n         */\n        get: function () { return this.export('jwk'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Key.prototype, \"oct\", {\n        /**\n         * Returns the 'EC' key in Octet SEC1 format.\n         * @return {Promise<OctetEC>}\n         */\n        get: function () { return this.export('oct', { output: 'string' }); },\n        enumerable: true,\n        configurable: true\n    });\n    return Key;\n}());\nexports.Key = Key;\n//# sourceMappingURL=key.js.map"]},"metadata":{},"sourceType":"script"}