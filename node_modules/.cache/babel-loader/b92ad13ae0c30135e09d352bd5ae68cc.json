{"ast":null,"code":"var _jsxFileName = \"/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/components/wallet.js\";\nimport React, { useState } from \"react\";\nimport { postTransaction } from \"../services/blockchain\";\nimport { calculateBalance, updateWalletTransactions, createTransaction, stringToHex } from \"../services\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\nexport default function Wallet({\n  wallet,\n  setTransaction,\n  setWallet,\n  endpoint\n}) {\n  const [loadingTransactions, setLoadingTransactions] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n\n  const loadTransactions = async () => {\n    setLoadingTransactions(true);\n    setWallet((await updateWalletTransactions(endpoint, wallet)));\n    setLoadingTransactions(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-wallet-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-balance-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Balance\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, calculateBalance(wallet))), React.createElement(\"div\", {\n    className: \"clbc-public-key-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Public Key\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, wallet.pem_pub_key.split(\"\\n\").map(p => React.createElement(React.Fragment, null, p, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-create-transaction-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Send\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"input\", {\n    placeholder: \"Amount\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Receiver Key\"), React.createElement(TextArea, {\n    placeholder: \"Receiver Key\",\n    value: receiver,\n    onChange: e => {\n      setReceiver(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"button\",\n    primary: true,\n    onClick: async () => {\n      await postTransaction(endpoint, (await createTransaction(amount, receiver, wallet, endpoint)));\n      loadTransactions();\n      setReceiver(\"\");\n      setAmount(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(\"div\", {\n    className: \"clbc-create-transaction-history-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"History\"), React.createElement(Button, {\n    primary: true,\n    onClick: loadTransactions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Reload\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, Object.values(wallet.transactions).map(t => React.createElement(\"li\", {\n    onClick: () => setTransaction(t),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, t.sig.slice(0, 30) + \"...\")))))));\n}","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/components/wallet.js"],"names":["React","useState","postTransaction","calculateBalance","updateWalletTransactions","createTransaction","stringToHex","Button","Form","TextArea","Wallet","wallet","setTransaction","setWallet","endpoint","loadingTransactions","setLoadingTransactions","amount","setAmount","receiver","setReceiver","loadTransactions","pem_pub_key","split","map","p","e","target","value","Object","values","transactions","t","sig","slice"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { postTransaction } from \"../services/blockchain\";\nimport {\n  calculateBalance,\n  updateWalletTransactions,\n  createTransaction,\n  stringToHex\n} from \"../services\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\n\nexport default function Wallet({\n  wallet,\n  setTransaction,\n  setWallet,\n  endpoint\n}) {\n  const [loadingTransactions, setLoadingTransactions] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const loadTransactions = async () => {\n    setLoadingTransactions(true);\n    setWallet(await updateWalletTransactions(endpoint, wallet));\n    setLoadingTransactions(false);\n  };\n\n  return (\n    <div>\n      <div className=\"clbc-wallet-container\">\n        <div>\n          <div className=\"clbc-balance-wrapper\">\n            <h3>Balance</h3>\n            <p>{calculateBalance(wallet)}</p>\n          </div>\n          <div className=\"clbc-public-key-wrapper\">\n            <h3>Public Key</h3>\n            <p>\n              {wallet.pem_pub_key.split(\"\\n\").map(p => (\n                <>\n                  {p}\n                  <br />\n                </>\n              ))}\n            </p>\n          </div>\n        </div>\n        <div>\n          <div className=\"clbc-create-transaction-wrapper\">\n            <h3>Send</h3>\n            <Form>\n              <Form.Field>\n                <label>Amount</label>\n                <input\n                  placeholder=\"Amount\"\n                  value={amount}\n                  onChange={e => setAmount(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Receiver Key</label>\n                <TextArea\n                  placeholder=\"Receiver Key\"\n                  value={receiver}\n                  onChange={e => {\n                    setReceiver(e.target.value);\n                  }}\n                />\n              </Form.Field>\n              <Button\n                type=\"button\"\n                primary\n                onClick={async () => {\n                  await postTransaction(\n                    endpoint,\n                    await createTransaction(amount, receiver, wallet, endpoint)\n                  );\n                  loadTransactions();\n                  setReceiver(\"\");\n                  setAmount(\"\");\n                }}\n              >\n                Submit\n              </Button>\n            </Form>\n          </div>\n          <div className=\"clbc-create-transaction-history-wrapper\">\n            <h3>History</h3>\n            <Button primary onClick={loadTransactions}>\n              Reload\n            </Button>\n            <ul>\n              {Object.values(wallet.transactions).map(t => (\n                <li onClick={() => setTransaction(t)}>\n                  {t.sig.slice(0, 30) + \"...\"}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}