{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _buffer = require(\"buffer\");\n\nvar _permute = _interopRequireDefault(require(\"./permute\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar xorWords = function xorWords(I, O) {\n  for (var i = 0; i < I.length; i += 8) {\n    var o = i / 4;\n    O[o] ^= I[i + 7] << 24 | I[i + 6] << 16 | I[i + 5] << 8 | I[i + 4];\n    O[o + 1] ^= I[i + 3] << 24 | I[i + 2] << 16 | I[i + 1] << 8 | I[i];\n  }\n\n  return O;\n};\n\nvar readWords = function readWords(I, O) {\n  for (var o = 0; o < O.length; o += 8) {\n    var i = o / 4;\n    O[o] = I[i + 1];\n    O[o + 1] = I[i + 1] >>> 8;\n    O[o + 2] = I[i + 1] >>> 16;\n    O[o + 3] = I[i + 1] >>> 24;\n    O[o + 4] = I[i];\n    O[o + 5] = I[i] >>> 8;\n    O[o + 6] = I[i] >>> 16;\n    O[o + 7] = I[i] >>> 24;\n  }\n\n  return O;\n};\n\nvar Sponge = function Sponge(_ref) {\n  var _this = this;\n\n  var capacity = _ref.capacity,\n      padding = _ref.padding;\n  var keccak = (0, _permute[\"default\"])();\n  var stateSize = 200;\n  var blockSize = capacity / 8;\n  var queueSize = stateSize - capacity / 4;\n  var queueOffset = 0;\n  var state = new Uint32Array(stateSize / 4);\n\n  var queue = _buffer.Buffer.allocUnsafe(queueSize);\n\n  this.absorb = function (buffer) {\n    for (var i = 0; i < buffer.length; i++) {\n      queue[queueOffset] = buffer[i];\n      queueOffset += 1;\n\n      if (queueOffset >= queueSize) {\n        xorWords(queue, state);\n        keccak(state);\n        queueOffset = 0;\n      }\n    }\n\n    return _this;\n  };\n\n  this.squeeze = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var output = {\n      buffer: options.buffer || _buffer.Buffer.allocUnsafe(blockSize),\n      padding: options.padding || padding,\n      queue: _buffer.Buffer.allocUnsafe(queue.length),\n      state: new Uint32Array(state.length)\n    };\n    queue.copy(output.queue);\n\n    for (var i = 0; i < state.length; i++) {\n      output.state[i] = state[i];\n    }\n\n    output.queue.fill(0, queueOffset);\n    output.queue[queueOffset] |= output.padding;\n    output.queue[queueSize - 1] |= 128;\n    xorWords(output.queue, output.state);\n\n    for (var offset = 0; offset < output.buffer.length; offset += queueSize) {\n      keccak(output.state);\n      readWords(output.state, output.buffer.slice(offset, offset + queueSize));\n    }\n\n    return output.buffer;\n  };\n\n  this.reset = function () {\n    queue.fill(0);\n    state.fill(0);\n    queueOffset = 0;\n    return _this;\n  };\n\n  return this;\n};\n\nvar _default = Sponge;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/node_modules/sha3/sponge/index.js"],"names":["Object","defineProperty","exports","value","_buffer","require","_permute","_interopRequireDefault","obj","__esModule","xorWords","I","O","i","length","o","readWords","Sponge","_ref","_this","capacity","padding","keccak","stateSize","blockSize","queueSize","queueOffset","state","Uint32Array","queue","Buffer","allocUnsafe","absorb","buffer","squeeze","options","arguments","undefined","output","copy","fill","offset","slice","reset","_default"],"mappings":"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","sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var xorWords=function xorWords(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}return O};var readWords=function readWords(I,O){for(var o=0;o<O.length;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;var keccak=(0,_permute[\"default\"])();var stateSize=200;var blockSize=capacity/8;var queueSize=stateSize-capacity/4;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){xorWords(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var output={buffer:options.buffer||_buffer.Buffer.allocUnsafe(blockSize),padding:options.padding||padding,queue:_buffer.Buffer.allocUnsafe(queue.length),state:new Uint32Array(state.length)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=output.padding;output.queue[queueSize-1]|=128;xorWords(output.queue,output.state);for(var offset=0;offset<output.buffer.length;offset+=queueSize){keccak(output.state);readWords(output.state,output.buffer.slice(offset,offset+queueSize))}return output.buffer};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;"]},"metadata":{},"sourceType":"script"}