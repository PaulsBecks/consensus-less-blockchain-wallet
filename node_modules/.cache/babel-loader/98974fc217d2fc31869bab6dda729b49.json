{"ast":null,"code":"import sign from \"./sign\";\nimport { buf2hex, str2ab } from \"../strAb\";\nimport { SEPERATOR } from \"../../config\";\nimport findFormer from \"./findFormer\";\n\nfunction buildTransactionString({\n  sender,\n  receiver,\n  amount,\n  former,\n  refered\n}) {\n  return \"frm:\" + Object.values(former).map(f => f.sig + \":\" + f.amount) + SEPERATOR + \"snd:\" + sender + SEPERATOR + \"rcv:\" + receiver + SEPERATOR + \"amt:\" + amount + SEPERATOR + \"ref:\" + refered + SEPERATOR;\n}\n\nfunction addSig(transactionString, sig) {\n  return transactionString + \"sig:\" + buf2hex(sig);\n}\n\nexport default async function (amount, receiver, wallet) {\n  const former = findFormer(wallet, amount);\n\n  if (!former) {\n    console.log(\"Not enough balance apparently!\");\n    return null;\n  }\n\n  let transactionString = buildTransactionString({\n    amount,\n    receiver,\n    sender: wallet.pem_pub_key\n  });\n  const sig = await sign(transactionString, wallet);\n  console.log(\"Create Transaction\", transactionString);\n  transactionString = addSig(transactionString, sig);\n  return transactionString;\n}","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/services/wallet/createTransaction.js"],"names":["sign","buf2hex","str2ab","SEPERATOR","findFormer","buildTransactionString","sender","receiver","amount","former","refered","Object","values","map","f","sig","addSig","transactionString","wallet","console","log","pem_pub_key"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,UAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,sBAAT,CAAgC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,MAApB;AAA4BC,EAAAA,MAA5B;AAAoCC,EAAAA;AAApC,CAAhC,EAA+E;AAC7E,SACE,SACAC,MAAM,CAACC,MAAP,CAAcH,MAAd,EAAsBI,GAAtB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,GAAF,GAAQ,GAAR,GAAcD,CAAC,CAACN,MAA/C,CADA,GAEAL,SAFA,GAGA,MAHA,GAIAG,MAJA,GAKAH,SALA,GAMA,MANA,GAOAI,QAPA,GAQAJ,SARA,GASA,MATA,GAUAK,MAVA,GAWAL,SAXA,GAYA,MAZA,GAaAO,OAbA,GAcAP,SAfF;AAiBD;;AAED,SAASa,MAAT,CAAgBC,iBAAhB,EAAmCF,GAAnC,EAAwC;AACtC,SAAOE,iBAAiB,GAAG,MAApB,GAA6BhB,OAAO,CAACc,GAAD,CAA3C;AACD;;AAED,eAAe,gBAAeP,MAAf,EAAuBD,QAAvB,EAAiCW,MAAjC,EAAyC;AACtD,QAAMT,MAAM,GAAGL,UAAU,CAACc,MAAD,EAASV,MAAT,CAAzB;;AACA,MAAI,CAACC,MAAL,EAAa;AACXU,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,WAAO,IAAP;AACD;;AAED,MAAIH,iBAAiB,GAAGZ,sBAAsB,CAAC;AAC7CG,IAAAA,MAD6C;AAE7CD,IAAAA,QAF6C;AAG7CD,IAAAA,MAAM,EAAEY,MAAM,CAACG;AAH8B,GAAD,CAA9C;AAKA,QAAMN,GAAG,GAAG,MAAMf,IAAI,CAACiB,iBAAD,EAAoBC,MAApB,CAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,iBAAlC;AACAA,EAAAA,iBAAiB,GAAGD,MAAM,CAACC,iBAAD,EAAoBF,GAApB,CAA1B;AACA,SAAOE,iBAAP;AACD","sourcesContent":["import sign from \"./sign\";\nimport { buf2hex, str2ab } from \"../strAb\";\nimport { SEPERATOR } from \"../../config\";\nimport findFormer from \"./findFormer\";\n\nfunction buildTransactionString({ sender, receiver, amount, former, refered }) {\n  return (\n    \"frm:\" +\n    Object.values(former).map(f => f.sig + \":\" + f.amount) +\n    SEPERATOR +\n    \"snd:\" +\n    sender +\n    SEPERATOR +\n    \"rcv:\" +\n    receiver +\n    SEPERATOR +\n    \"amt:\" +\n    amount +\n    SEPERATOR +\n    \"ref:\" +\n    refered +\n    SEPERATOR\n  );\n}\n\nfunction addSig(transactionString, sig) {\n  return transactionString + \"sig:\" + buf2hex(sig);\n}\n\nexport default async function(amount, receiver, wallet) {\n  const former = findFormer(wallet, amount);\n  if (!former) {\n    console.log(\"Not enough balance apparently!\");\n    return null;\n  }\n\n  let transactionString = buildTransactionString({\n    amount,\n    receiver,\n    sender: wallet.pem_pub_key\n  });\n  const sig = await sign(transactionString, wallet);\n  console.log(\"Create Transaction\", transactionString);\n  transactionString = addSig(transactionString, sig);\n  return transactionString;\n}\n"]},"metadata":{},"sourceType":"module"}