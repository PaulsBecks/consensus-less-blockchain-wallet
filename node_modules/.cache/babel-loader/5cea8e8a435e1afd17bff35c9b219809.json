{"ast":null,"code":"var _jsxFileName = \"/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/components/wallet.js\";\nimport { calculateBalance, updateWalletTransactions, copyToClipboard, createTransaction } from \"./services\";\nexport default function Wallet() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-wallet-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-balance-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Balance\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, calculateBalance(wallet))), React.createElement(\"div\", {\n    className: \"clbc-public-key-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Public Key\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, wallet.pem_pub_key.split(\"\\n\").map(p => React.createElement(React.Fragment, null, p, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-create-transaction-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Send\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"input\", {\n    placeholder: \"Amount\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Receiver Key\"), React.createElement(TextArea, {\n    placeholder: \"Receiver Key\",\n    value: receiver,\n    onChange: e => {\n      console.log(e.target.value);\n      setReceiver(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"button\",\n    primary: true,\n    onClick: async () => postTransaction(endpoint, (await createTransaction(amount, receiver, wallet))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(\"div\", {\n    className: \"clbc-create-transaction-history-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"History\"), React.createElement(Button, {\n    primary: true,\n    onClick: async () => {\n      setLoadingTransactions(true);\n      setWallet((await updateWalletTransactions(endpoint, wallet)));\n      setLoadingTransactions(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Reload\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, wallet.transactions.map(t => React.createElement(\"li\", {\n    onClick: () => copyToClipboard(t.sig),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, t.sig.slice(0, 30) + \"...\")))))));\n}","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/components/wallet.js"],"names":["calculateBalance","updateWalletTransactions","copyToClipboard","createTransaction","Wallet","wallet","pem_pub_key","split","map","p","amount","e","setAmount","target","value","receiver","console","log","setReceiver","postTransaction","endpoint","setLoadingTransactions","setWallet","transactions","t","sig","slice"],"mappings":";AAAA,SACEA,gBADF,EAEEC,wBAFF,EAGEC,eAHF,EAIEC,iBAJF,QAKO,YALP;AAOA,eAAe,SAASC,MAAT,GAAkB;AAC/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,gBAAgB,CAACK,MAAD,CAApB,CAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAACC,WAAP,CAAmBC,KAAnB,CAAyB,IAAzB,EAA+BC,GAA/B,CAAmCC,CAAC,IACnC,0CACGA,CADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CADH,CAFF,CALF,CADF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,KAAK,EAAEC,MAFT;AAGE,IAAA,QAAQ,EAAEC,CAAC,IAAIC,SAAS,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,KAAK,EAAEC,QAFT;AAGE,IAAA,QAAQ,EAAEJ,CAAC,IAAI;AACbK,MAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACE,MAAF,CAASC,KAArB;AACAI,MAAAA,WAAW,CAACP,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,EAoBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,OAAO,EAAE,YACPK,eAAe,CACbC,QADa,GAEb,MAAMjB,iBAAiB,CAACO,MAAD,EAASK,QAAT,EAAmBV,MAAnB,CAFV,EAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,CAFF,CADF,EAqCE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,OAAO,EAAE,YAAY;AACnBgB,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAC,MAAAA,SAAS,EAAC,MAAMrB,wBAAwB,CAACmB,QAAD,EAAWf,MAAX,CAA/B,EAAT;AACAgB,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,MAAM,CAACkB,YAAP,CAAoBf,GAApB,CAAwBgB,CAAC,IACxB;AAAI,IAAA,OAAO,EAAE,MAAMtB,eAAe,CAACsB,CAAC,CAACC,GAAH,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,CAAC,CAACC,GAAF,CAAMC,KAAN,CAAY,CAAZ,EAAe,EAAf,IAAqB,KADxB,CADD,CADH,CAZF,CArCF,CAlBF,CADF,CADF;AAiFD","sourcesContent":["import {\n  calculateBalance,\n  updateWalletTransactions,\n  copyToClipboard,\n  createTransaction\n} from \"./services\";\n\nexport default function Wallet() {\n  return (\n    <div>\n      <div className=\"clbc-wallet-container\">\n        <div>\n          <div className=\"clbc-balance-wrapper\">\n            <h3>Balance</h3>\n            <p>{calculateBalance(wallet)}</p>\n          </div>\n          <div className=\"clbc-public-key-wrapper\">\n            <h3>Public Key</h3>\n            <p>\n              {wallet.pem_pub_key.split(\"\\n\").map(p => (\n                <>\n                  {p}\n                  <br />\n                </>\n              ))}\n            </p>\n          </div>\n        </div>\n        <div>\n          <div className=\"clbc-create-transaction-wrapper\">\n            <h3>Send</h3>\n            <Form>\n              <Form.Field>\n                <label>Amount</label>\n                <input\n                  placeholder=\"Amount\"\n                  value={amount}\n                  onChange={e => setAmount(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Receiver Key</label>\n                <TextArea\n                  placeholder=\"Receiver Key\"\n                  value={receiver}\n                  onChange={e => {\n                    console.log(e.target.value);\n                    setReceiver(e.target.value);\n                  }}\n                />\n              </Form.Field>\n              <Button\n                type=\"button\"\n                primary\n                onClick={async () =>\n                  postTransaction(\n                    endpoint,\n                    await createTransaction(amount, receiver, wallet)\n                  )\n                }\n              >\n                Submit\n              </Button>\n            </Form>\n          </div>\n          <div className=\"clbc-create-transaction-history-wrapper\">\n            <h3>History</h3>\n            <Button\n              primary\n              onClick={async () => {\n                setLoadingTransactions(true);\n                setWallet(await updateWalletTransactions(endpoint, wallet));\n                setLoadingTransactions(false);\n              }}\n            >\n              Reload\n            </Button>\n            <ul>\n              {wallet.transactions.map(t => (\n                <li onClick={() => copyToClipboard(t.sig)}>\n                  {t.sig.slice(0, 30) + \"...\"}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}