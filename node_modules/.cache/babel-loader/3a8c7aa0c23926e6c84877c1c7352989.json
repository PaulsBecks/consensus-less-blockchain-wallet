{"ast":null,"code":"import cryptico from \"cryptico\";\nimport { transactions as mock_transaction } from \"../../mock\";\nimport rsa from \"js-crypto-rsa\";\nimport keyutils from \"js-crypto-key-utils\";\nexport default async function createWallet() {\n  var passPhrase = \"The Moon is a Harsh Mistress.\";\n  var Bits = 2048; // var rsa_key = cryptico.generateRSAKey(passPhrase, Bits);\n\n  const key = await rsa.generateKey(2048); //const pem = await key.export(\"pem\", { outputPublic: true, compact: true });\n  // console.log(pem);\n\n  const keyObjFromJwk = new keyutils.Key(\"jwk\", key.publicKey);\n  console.log(key.publicKey, key.privateKey, (await keyObjFromJwk.export(\"pem\")));\n  return {\n    publicKey: key.publicKey,\n    transactions: mock_transaction,\n    privateKey: key.privateKey\n  };\n}","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/services/wallet/createWallet.js"],"names":["cryptico","transactions","mock_transaction","rsa","keyutils","createWallet","passPhrase","Bits","key","generateKey","keyObjFromJwk","Key","publicKey","console","log","privateKey","export"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,YAAY,IAAIC,gBAAzB,QAAiD,YAAjD;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,eAAe,eAAeC,YAAf,GAA8B;AAC3C,MAAIC,UAAU,GAAG,+BAAjB;AACA,MAAIC,IAAI,GAAG,IAAX,CAF2C,CAG3C;;AACA,QAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,WAAJ,CAAgB,IAAhB,CAAlB,CAJ2C,CAK3C;AACA;;AACA,QAAMC,aAAa,GAAG,IAAIN,QAAQ,CAACO,GAAb,CAAiB,KAAjB,EAAwBH,GAAG,CAACI,SAA5B,CAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACI,SAAhB,EAA2BJ,GAAG,CAACO,UAA/B,GAA2C,MAAML,aAAa,CAACM,MAAd,CAAqB,KAArB,CAAjD;AACA,SAAO;AACLJ,IAAAA,SAAS,EAAEJ,GAAG,CAACI,SADV;AAELX,IAAAA,YAAY,EAAEC,gBAFT;AAGLa,IAAAA,UAAU,EAAEP,GAAG,CAACO;AAHX,GAAP;AAKD","sourcesContent":["import cryptico from \"cryptico\";\nimport { transactions as mock_transaction } from \"../../mock\";\nimport rsa from \"js-crypto-rsa\";\nimport keyutils from \"js-crypto-key-utils\";\n\nexport default async function createWallet() {\n  var passPhrase = \"The Moon is a Harsh Mistress.\";\n  var Bits = 2048;\n  // var rsa_key = cryptico.generateRSAKey(passPhrase, Bits);\n  const key = await rsa.generateKey(2048);\n  //const pem = await key.export(\"pem\", { outputPublic: true, compact: true });\n  // console.log(pem);\n  const keyObjFromJwk = new keyutils.Key(\"jwk\", key.publicKey);\n  console.log(key.publicKey, key.privateKey, await keyObjFromJwk.export(\"pem\"));\n  return {\n    publicKey: key.publicKey,\n    transactions: mock_transaction,\n    privateKey: key.privateKey\n  };\n}\n"]},"metadata":{},"sourceType":"module"}