{"ast":null,"code":"var _jsxFileName = \"/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/components/wallet.js\";\nimport React, { useState } from \"react\";\nimport { postTransaction } from \"../services/blockchain\";\nimport { calculateBalance, updateWalletTransactions, createTransaction } from \"../services\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\n\nfunction string_as_unicode_escape(str) {\n  return str.split(\"\").map(function (s) {\n    return s.charCodeAt(0).toString(16);\n  }).join(\"\");\n}\n\nexport default function Wallet({\n  wallet,\n  setTransaction,\n  setWallet,\n  endpoint\n}) {\n  const [loadingTransactions, setLoadingTransactions] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-wallet-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-balance-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Balance\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, calculateBalance(wallet))), React.createElement(\"div\", {\n    className: \"clbc-public-key-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Public Key\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, wallet.pem_pub_key.split(\"\\n\").map(p => React.createElement(React.Fragment, null, p, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-create-transaction-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Send\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"input\", {\n    placeholder: \"Amount\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Receiver Key\"), React.createElement(TextArea, {\n    placeholder: \"Receiver Key\",\n    value: receiver,\n    onChange: e => {\n      console.log(e.target.value);\n      setReceiver(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"button\",\n    primary: true,\n    onClick: async () => postTransaction(endpoint, (await createTransaction(amount, receiver, wallet))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(\"div\", {\n    className: \"clbc-create-transaction-history-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"History\"), React.createElement(Button, {\n    primary: true,\n    onClick: async () => {\n      setLoadingTransactions(true);\n      setWallet((await updateWalletTransactions(endpoint, wallet)));\n      setLoadingTransactions(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Reload\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, wallet.transactions.map(t => React.createElement(\"li\", {\n    onClick: () => setTransaction(t),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, string_as_unicode_escape(t.sig.slice(0, 30)) + \"...\")))))));\n}","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/components/wallet.js"],"names":["React","useState","postTransaction","calculateBalance","updateWalletTransactions","createTransaction","Button","Form","TextArea","string_as_unicode_escape","str","split","map","s","charCodeAt","toString","join","Wallet","wallet","setTransaction","setWallet","endpoint","loadingTransactions","setLoadingTransactions","amount","setAmount","receiver","setReceiver","pem_pub_key","p","e","target","value","console","log","transactions","t","sig","slice"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { postTransaction } from \"../services/blockchain\";\nimport {\n  calculateBalance,\n  updateWalletTransactions,\n  createTransaction\n} from \"../services\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\n\nfunction string_as_unicode_escape(str) {\n  return str\n    .split(\"\")\n    .map(function(s) {\n      return s.charCodeAt(0).toString(16);\n    })\n    .join(\"\");\n}\n\nexport default function Wallet({\n  wallet,\n  setTransaction,\n  setWallet,\n  endpoint\n}) {\n  const [loadingTransactions, setLoadingTransactions] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  return (\n    <div>\n      <div className=\"clbc-wallet-container\">\n        <div>\n          <div className=\"clbc-balance-wrapper\">\n            <h3>Balance</h3>\n            <p>{calculateBalance(wallet)}</p>\n          </div>\n          <div className=\"clbc-public-key-wrapper\">\n            <h3>Public Key</h3>\n            <p>\n              {wallet.pem_pub_key.split(\"\\n\").map(p => (\n                <>\n                  {p}\n                  <br />\n                </>\n              ))}\n            </p>\n          </div>\n        </div>\n        <div>\n          <div className=\"clbc-create-transaction-wrapper\">\n            <h3>Send</h3>\n            <Form>\n              <Form.Field>\n                <label>Amount</label>\n                <input\n                  placeholder=\"Amount\"\n                  value={amount}\n                  onChange={e => setAmount(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Receiver Key</label>\n                <TextArea\n                  placeholder=\"Receiver Key\"\n                  value={receiver}\n                  onChange={e => {\n                    console.log(e.target.value);\n                    setReceiver(e.target.value);\n                  }}\n                />\n              </Form.Field>\n              <Button\n                type=\"button\"\n                primary\n                onClick={async () =>\n                  postTransaction(\n                    endpoint,\n                    await createTransaction(amount, receiver, wallet)\n                  )\n                }\n              >\n                Submit\n              </Button>\n            </Form>\n          </div>\n          <div className=\"clbc-create-transaction-history-wrapper\">\n            <h3>History</h3>\n            <Button\n              primary\n              onClick={async () => {\n                setLoadingTransactions(true);\n                setWallet(await updateWalletTransactions(endpoint, wallet));\n                setLoadingTransactions(false);\n              }}\n            >\n              Reload\n            </Button>\n            <ul>\n              {wallet.transactions.map(t => (\n                <li onClick={() => setTransaction(t)}>\n                  {string_as_unicode_escape(t.sig.slice(0, 30)) + \"...\"}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}