{"ast":null,"code":"var _jsxFileName = \"/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/App.js\";\nimport React, { useState } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { createWallet, calculateBalance, updateWalletTransactions, copyToClipboard, createTransaction } from \"./services\";\nimport \"./App.css\";\nimport { Button, Form } from \"semantic-ui-react\";\n\nfunction App() {\n  const [wallet, setWallet] = useLocalStorage(\"wallet\");\n  const [endpoint, setEndpoint] = useState(\"http://localhost:5000\");\n  const [amount, setAmount] = useState();\n  const [receiver, setReceiver] = useState();\n  console.log(endpoint);\n  return React.createElement(\"div\", {\n    className: \"clbc-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Consensusless Blockchain\"), wallet ? React.createElement(\"div\", {\n    className: \"clbc-wallet-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \">Welcome Back\"), React.createElement(\"div\", {\n    className: \"clbc-balance-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Balance\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, calculateBalance(wallet))), React.createElement(\"div\", {\n    className: \"clbc-public-key-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Public Key\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, wallet.pem_pub_key)), React.createElement(\"div\", {\n    className: \"clbc-create-transaction-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Send\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"input\", {\n    placeholder: \"Amount\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Receiver Key\"), React.createElement(\"input\", {\n    placeholder: \"Receiver Key\",\n    value: receiver,\n    onChange: e => setReceiver(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"button\",\n    onClick: () => createTransaction(amount, receiver),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(\"div\", {\n    className: \"clbc-create-transaction-history-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"History\"), React.createElement(Button, {\n    onClick: async () => {\n      setWallet((await updateWalletTransactions(endpoint, wallet)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Reload\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, wallet.transactions.map(t => React.createElement(\"li\", {\n    onClick: () => copyToClipboard(t.sig),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, t.sig.slice(0, 30) + \"...\"))))) : React.createElement(\"div\", {\n    className: \"clbc-no-wallet-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \">No wallet found\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"To interact with the blockchain you need to create a wallet.\"), React.createElement(Button, {\n    primary: true,\n    onClick: async () => setWallet((await createWallet())),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Create New Wallet\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Use Node\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, endpoint)));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/App.js"],"names":["React","useState","useLocalStorage","createWallet","calculateBalance","updateWalletTransactions","copyToClipboard","createTransaction","Button","Form","App","wallet","setWallet","endpoint","setEndpoint","amount","setAmount","receiver","setReceiver","console","log","pem_pub_key","e","target","value","transactions","map","t","sig","slice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SACEC,YADF,EAEEC,gBAFF,EAGEC,wBAHF,EAIEC,eAJF,EAKEC,iBALF,QAMO,YANP;AAOA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,eAAe,CAAC,QAAD,CAA3C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,uBAAD,CAAxC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,EAApC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,EAAxC;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEGF,MAAM,GACL;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,gBAAgB,CAACO,MAAD,CAApB,CAFF,CAFF,EAME;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,MAAM,CAACU,WAAX,CAFF,CANF,EAUE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,KAAK,EAAEN,MAFT;AAGE,IAAA,QAAQ,EAAEO,CAAC,IAAIN,SAAS,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,KAAK,EAAEP,QAFT;AAGE,IAAA,QAAQ,EAAEK,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,EAiBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MAAMjB,iBAAiB,CAACQ,MAAD,EAASE,QAAT,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,CAFF,CAVF,EAqCE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,YAAY;AACnBL,MAAAA,SAAS,EAAC,MAAMP,wBAAwB,CAACQ,QAAD,EAAWF,MAAX,CAA/B,EAAT;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAACc,YAAP,CAAoBC,GAApB,CAAwBC,CAAC,IACxB;AAAI,IAAA,OAAO,EAAE,MAAMrB,eAAe,CAACqB,CAAC,CAACC,GAAH,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,CAAC,CAACC,GAAF,CAAMC,KAAN,CAAY,CAAZ,EAAe,EAAf,IAAqB,KADxB,CADD,CADH,CATF,CArCF,CADK,GAyDL;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAE,YAAYjB,SAAS,EAAC,MAAMT,YAAY,EAAnB,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,CA3DJ,EAmEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIU,QAAJ,CAFF,CAnEF,CADF;AA0ED;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport {\n  createWallet,\n  calculateBalance,\n  updateWalletTransactions,\n  copyToClipboard,\n  createTransaction\n} from \"./services\";\nimport \"./App.css\";\nimport { Button, Form } from \"semantic-ui-react\";\n\nfunction App() {\n  const [wallet, setWallet] = useLocalStorage(\"wallet\");\n  const [endpoint, setEndpoint] = useState(\"http://localhost:5000\");\n  const [amount, setAmount] = useState();\n  const [receiver, setReceiver] = useState();\n\n  console.log(endpoint);\n  return (\n    <div className=\"clbc-container\">\n      <h1>Consensusless Blockchain</h1>\n      {wallet ? (\n        <div className=\"clbc-wallet-container\">\n          <h2>>Welcome Back</h2>\n          <div className=\"clbc-balance-wrapper\">\n            <h3>Balance</h3>\n            <p>{calculateBalance(wallet)}</p>\n          </div>\n          <div className=\"clbc-public-key-wrapper\">\n            <h3>Public Key</h3>\n            <p>{wallet.pem_pub_key}</p>\n          </div>\n          <div className=\"clbc-create-transaction-wrapper\">\n            <h3>Send</h3>\n            <Form>\n              <Form.Field>\n                <label>Amount</label>\n                <input\n                  placeholder=\"Amount\"\n                  value={amount}\n                  onChange={e => setAmount(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Receiver Key</label>\n                <input\n                  placeholder=\"Receiver Key\"\n                  value={receiver}\n                  onChange={e => setReceiver(e.target.value)}\n                />\n              </Form.Field>\n              <Button\n                type=\"button\"\n                onClick={() => createTransaction(amount, receiver)}\n              >\n                Submit\n              </Button>\n            </Form>\n          </div>\n          <div className=\"clbc-create-transaction-history-wrapper\">\n            <h3>History</h3>\n            <Button\n              onClick={async () => {\n                setWallet(await updateWalletTransactions(endpoint, wallet));\n              }}\n            >\n              Reload\n            </Button>\n            <ul>\n              {wallet.transactions.map(t => (\n                <li onClick={() => copyToClipboard(t.sig)}>\n                  {t.sig.slice(0, 30) + \"...\"}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      ) : (\n        <div className=\"clbc-no-wallet-container\">\n          <h2>>No wallet found</h2>\n          <p>To interact with the blockchain you need to create a wallet.</p>\n          <Button primary onClick={async () => setWallet(await createWallet())}>\n            Create New Wallet\n          </Button>\n        </div>\n      )}\n      <div>\n        <h2>Use Node</h2>\n        <p>{endpoint}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}