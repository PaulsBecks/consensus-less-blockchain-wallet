{"ast":null,"code":"\"use strict\";\n/**\n * params.ts\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // oid is referred to rfc5480 https://www.ietf.org/rfc/rfc5480.txt\n\nexports.namedCurves = {\n  'P-256': {\n    indutnyName: 'p256',\n    payloadSize: 32,\n    oid: [1, 2, 840, 10045, 3, 1, 7]\n  },\n  'P-384': {\n    indutnyName: 'p384',\n    payloadSize: 48,\n    oid: [1, 3, 132, 0, 34]\n  },\n  'P-521': {\n    indutnyName: 'p521',\n    payloadSize: 66,\n    oid: [1, 3, 132, 0, 35]\n  },\n  'P-256K': {\n    indutnyName: 'secp256k1',\n    payloadSize: 32,\n    oid: [1, 3, 132, 0, 10]\n  }\n}; // https://tools.ietf.org/html/rfc3279\n\nexports.publicKeyAlgorithms = {\n  'EC': {\n    oid: [1, 2, 840, 10045, 2, 1]\n  },\n  'RSA': {\n    oid: [1, 2, 840, 113549, 1, 1, 1]\n  }\n};\nexports.passwordBasedEncryptionSchemes = {\n  // PBES1\n  'pbeWithMD5AndDES-CBC': {\n    oid: [1, 2, 840, 113549, 1, 5, 3],\n    hash: 'MD5',\n    encrypt: 'DES-CBC'\n  },\n  'pbeWithSHA1AndDES-CBC': {\n    oid: [1, 2, 840, 113549, 1, 5, 10],\n    hash: 'SHA-1',\n    encrypt: 'DES-CBC'\n  },\n  // PBES2\n  'pbes2': {\n    oid: [1, 2, 840, 113549, 1, 5, 13]\n  }\n};\nexports.keyDerivationFunctions = {\n  'pbkdf2': {\n    oid: [1, 2, 840, 113549, 1, 5, 12],\n    defaultSaltLen: 8\n  }\n};\nexports.pbkdf2Prfs = {\n  'hmacWithSHA1': {\n    oid: [1, 2, 840, 113549, 2, 7],\n    hash: 'SHA-1'\n  },\n  'hmacWithSHA256': {\n    oid: [1, 2, 840, 113549, 2, 9],\n    hash: 'SHA-256'\n  },\n  'hmacWithSHA384': {\n    oid: [1, 2, 840, 113549, 2, 10],\n    hash: 'SHA-384'\n  },\n  'hmacWithSHA512': {\n    oid: [1, 2, 840, 113549, 2, 11],\n    hash: 'SHA-512'\n  }\n};\nexports.encryptionSchemes = {\n  'des-ede3-cbc': {\n    oid: [1, 2, 840, 113549, 3, 7],\n    keyLength: 24,\n    ivLength: 8\n  },\n  'aes128-cbc': {\n    oid: [2, 16, 840, 1, 101, 3, 4, 1, 2],\n    keyLength: 16,\n    ivLength: 16\n  },\n  'aes192-cbc': {\n    oid: [2, 16, 840, 1, 101, 3, 4, 1, 22],\n    keyLength: 24,\n    ivLength: 16\n  },\n  'aes256-cbc': {\n    oid: [2, 16, 840, 1, 101, 3, 4, 1, 42],\n    keyLength: 32,\n    ivLength: 16\n  }\n};\nexports.hashes = {\n  'SHA-256': {\n    hashSize: 32\n  },\n  'SHA-384': {\n    hashSize: 48\n  },\n  'SHA-512': {\n    hashSize: 64\n  },\n  'SHA-1': {\n    hashSize: 20\n  },\n  'MD5': {\n    hashSize: 16\n  } // SHOULD NOT USE\n\n};\n/**\n * Get algorithm name from ObjectIdentifier array loosely.\n * @param {Array<number>} oid - ObjectIdentifier.\n * @param {Object} oidDict - Dictionary of ObjectIdentifier.\n * @return {Array} - Array of ObjectIdentifier array.\n */\n\nfunction getAlgorithmFromOid(oid, oidDict) {\n  return Object.keys(oidDict).filter(function (k) {\n    return oidDict[k].oid.toString() === oid.toString();\n  });\n}\n\nexports.getAlgorithmFromOid = getAlgorithmFromOid;\n/**\n * Get algorithm name from ObjectIdentifier array strictly.\n * @param {Array<number>} oid - ObjectIdentifier.\n * @param {Object} dict - Dictionary of ObjectIdentifier.\n * @return {Array} - Exactly one ObjectIdentifier.\n * @throws {Error} - Throws if UnsupportedAlgorithm.\n */\n\nexports.getAlgorithmFromOidStrict = function (oid, dict) {\n  var array = getAlgorithmFromOid(oid, dict);\n  if (array.length === 0) throw new Error('UnsupportedAlgorithm');\n  return array[0];\n};","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/node_modules/js-crypto-key-utils/dist/params.js"],"names":["Object","defineProperty","exports","value","namedCurves","indutnyName","payloadSize","oid","publicKeyAlgorithms","passwordBasedEncryptionSchemes","hash","encrypt","keyDerivationFunctions","defaultSaltLen","pbkdf2Prfs","encryptionSchemes","keyLength","ivLength","hashes","hashSize","getAlgorithmFromOid","oidDict","keys","filter","k","toString","getAlgorithmFromOidStrict","dict","array","length","Error"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * params.ts\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// oid is referred to rfc5480 https://www.ietf.org/rfc/rfc5480.txt\nexports.namedCurves = {\n    'P-256': { indutnyName: 'p256', payloadSize: 32, oid: [1, 2, 840, 10045, 3, 1, 7] },\n    'P-384': { indutnyName: 'p384', payloadSize: 48, oid: [1, 3, 132, 0, 34] },\n    'P-521': { indutnyName: 'p521', payloadSize: 66, oid: [1, 3, 132, 0, 35] },\n    'P-256K': { indutnyName: 'secp256k1', payloadSize: 32, oid: [1, 3, 132, 0, 10] },\n};\n// https://tools.ietf.org/html/rfc3279\nexports.publicKeyAlgorithms = {\n    'EC': { oid: [1, 2, 840, 10045, 2, 1] },\n    'RSA': { oid: [1, 2, 840, 113549, 1, 1, 1] }\n};\nexports.passwordBasedEncryptionSchemes = {\n    // PBES1\n    'pbeWithMD5AndDES-CBC': { oid: [1, 2, 840, 113549, 1, 5, 3], hash: 'MD5', encrypt: 'DES-CBC' },\n    'pbeWithSHA1AndDES-CBC': { oid: [1, 2, 840, 113549, 1, 5, 10], hash: 'SHA-1', encrypt: 'DES-CBC' },\n    // PBES2\n    'pbes2': { oid: [1, 2, 840, 113549, 1, 5, 13] }\n};\nexports.keyDerivationFunctions = {\n    'pbkdf2': { oid: [1, 2, 840, 113549, 1, 5, 12], defaultSaltLen: 8 }\n};\nexports.pbkdf2Prfs = {\n    'hmacWithSHA1': { oid: [1, 2, 840, 113549, 2, 7], hash: 'SHA-1' },\n    'hmacWithSHA256': { oid: [1, 2, 840, 113549, 2, 9], hash: 'SHA-256' },\n    'hmacWithSHA384': { oid: [1, 2, 840, 113549, 2, 10], hash: 'SHA-384' },\n    'hmacWithSHA512': { oid: [1, 2, 840, 113549, 2, 11], hash: 'SHA-512' }\n};\nexports.encryptionSchemes = {\n    'des-ede3-cbc': { oid: [1, 2, 840, 113549, 3, 7], keyLength: 24, ivLength: 8 },\n    'aes128-cbc': { oid: [2, 16, 840, 1, 101, 3, 4, 1, 2], keyLength: 16, ivLength: 16 },\n    'aes192-cbc': { oid: [2, 16, 840, 1, 101, 3, 4, 1, 22], keyLength: 24, ivLength: 16 },\n    'aes256-cbc': { oid: [2, 16, 840, 1, 101, 3, 4, 1, 42], keyLength: 32, ivLength: 16 }\n};\nexports.hashes = {\n    'SHA-256': { hashSize: 32 },\n    'SHA-384': { hashSize: 48 },\n    'SHA-512': { hashSize: 64 },\n    'SHA-1': { hashSize: 20 },\n    'MD5': { hashSize: 16 } // SHOULD NOT USE\n};\n/**\n * Get algorithm name from ObjectIdentifier array loosely.\n * @param {Array<number>} oid - ObjectIdentifier.\n * @param {Object} oidDict - Dictionary of ObjectIdentifier.\n * @return {Array} - Array of ObjectIdentifier array.\n */\nfunction getAlgorithmFromOid(oid, oidDict) {\n    return Object.keys(oidDict).filter(function (k) { return oidDict[k].oid.toString() === oid.toString(); });\n}\nexports.getAlgorithmFromOid = getAlgorithmFromOid;\n/**\n * Get algorithm name from ObjectIdentifier array strictly.\n * @param {Array<number>} oid - ObjectIdentifier.\n * @param {Object} dict - Dictionary of ObjectIdentifier.\n * @return {Array} - Exactly one ObjectIdentifier.\n * @throws {Error} - Throws if UnsupportedAlgorithm.\n */\nexports.getAlgorithmFromOidStrict = function (oid, dict) {\n    var array = getAlgorithmFromOid(oid, dict);\n    if (array.length === 0)\n        throw new Error('UnsupportedAlgorithm');\n    return array[0];\n};\n//# sourceMappingURL=params.js.map"]},"metadata":{},"sourceType":"script"}