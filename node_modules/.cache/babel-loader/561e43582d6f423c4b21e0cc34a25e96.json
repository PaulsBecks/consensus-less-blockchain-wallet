{"ast":null,"code":"var _jsxFileName = \"/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/App.js\";\nimport React, { useState, useMemo } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { createWallet, calculateBalance, updateWalletTransactions, copyToClipboard, createTransaction } from \"./services\";\nimport { postTransaction } from \"./services/blockchain\";\nimport \"./App.css\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\n\nfunction App() {\n  const [wallet, setWallet] = useLocalStorage(\"wallet\");\n  const [loadingTransactions, setLoadingTransactions] = useState(false);\n  const [endpoint, setEndpoint] = useState(\"http://localhost:5000\");\n  const [amount, setAmount] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  return React.createElement(\"div\", {\n    className: \"clbc-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Consensusless Blockchain\"), wallet ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Welcome Back\"), React.createElement(\"div\", {\n    className: \"clbc-wallet-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-balance-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Balance\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, calculateBalance(wallet))), React.createElement(\"div\", {\n    className: \"clbc-public-key-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Public Key\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, wallet.pem_pub_key))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clbc-create-transaction-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Send\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"input\", {\n    placeholder: \"Amount\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Receiver Key\"), React.createElement(TextArea, {\n    placeholder: \"Receiver Key\",\n    value: receiver,\n    onChange: e => {\n      console.log(e.target.value);\n      setReceiver(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"button\",\n    onClick: async () => postTransaction(endpoint, (await createTransaction(amount, receiver, wallet))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(\"div\", {\n    className: \"clbc-create-transaction-history-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"History\"), React.createElement(Button, {\n    onClick: async () => {\n      setLoadingTransactions(true);\n      setWallet((await updateWalletTransactions(endpoint, wallet)));\n      setLoadingTransactions(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Reload\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, wallet.transactions.map(t => React.createElement(\"li\", {\n    onClick: () => copyToClipboard(t.sig),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, t.sig.slice(0, 30) + \"...\"))))))) : React.createElement(\"div\", {\n    className: \"clbc-no-wallet-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \">No wallet found\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"To interact with the blockchain you need to create a wallet.\"), React.createElement(Button, {\n    primary: true,\n    onClick: async () => setWallet((await createWallet())),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Create New Wallet\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Use Node\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, endpoint)));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/App.js"],"names":["React","useState","useMemo","useLocalStorage","createWallet","calculateBalance","updateWalletTransactions","copyToClipboard","createTransaction","postTransaction","Button","Form","TextArea","App","wallet","setWallet","loadingTransactions","setLoadingTransactions","endpoint","setEndpoint","amount","setAmount","receiver","setReceiver","pem_pub_key","e","target","value","console","log","transactions","map","t","sig","slice"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport {\n  createWallet,\n  calculateBalance,\n  updateWalletTransactions,\n  copyToClipboard,\n  createTransaction\n} from \"./services\";\nimport { postTransaction } from \"./services/blockchain\";\nimport \"./App.css\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\n\nfunction App() {\n  const [wallet, setWallet] = useLocalStorage(\"wallet\");\n  const [loadingTransactions, setLoadingTransactions] = useState(false);\n  const [endpoint, setEndpoint] = useState(\"http://localhost:5000\");\n  const [amount, setAmount] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n\n  return (\n    <div className=\"clbc-container\">\n      <h1>Consensusless Blockchain</h1>\n      {wallet ? (\n        <div>\n          <h2>Welcome Back</h2>\n          <div className=\"clbc-wallet-container\">\n            <div>\n              <div className=\"clbc-balance-wrapper\">\n                <h3>Balance</h3>\n                <p>{calculateBalance(wallet)}</p>\n              </div>\n              <div className=\"clbc-public-key-wrapper\">\n                <h3>Public Key</h3>\n                <p>{wallet.pem_pub_key}</p>\n              </div>\n            </div>\n            <div>\n              <div className=\"clbc-create-transaction-wrapper\">\n                <h3>Send</h3>\n                <Form>\n                  <Form.Field>\n                    <label>Amount</label>\n                    <input\n                      placeholder=\"Amount\"\n                      value={amount}\n                      onChange={e => setAmount(e.target.value)}\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>Receiver Key</label>\n                    <TextArea\n                      placeholder=\"Receiver Key\"\n                      value={receiver}\n                      onChange={e => {\n                        console.log(e.target.value);\n                        setReceiver(e.target.value);\n                      }}\n                    />\n                  </Form.Field>\n                  <Button\n                    type=\"button\"\n                    onClick={async () =>\n                      postTransaction(\n                        endpoint,\n                        await createTransaction(amount, receiver, wallet)\n                      )\n                    }\n                  >\n                    Submit\n                  </Button>\n                </Form>\n              </div>\n              <div className=\"clbc-create-transaction-history-wrapper\">\n                <h3>History</h3>\n                <Button\n                  onClick={async () => {\n                    setLoadingTransactions(true);\n                    setWallet(await updateWalletTransactions(endpoint, wallet));\n                    setLoadingTransactions(false);\n                  }}\n                >\n                  Reload\n                </Button>\n                <ul>\n                  {wallet.transactions.map(t => (\n                    <li onClick={() => copyToClipboard(t.sig)}>\n                      {t.sig.slice(0, 30) + \"...\"}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"clbc-no-wallet-container\">\n          <h2>>No wallet found</h2>\n          <p>To interact with the blockchain you need to create a wallet.</p>\n          <Button primary onClick={async () => setWallet(await createWallet())}>\n            Create New Wallet\n          </Button>\n        </div>\n      )}\n      <div>\n        <h2>Use Node</h2>\n        <p>{endpoint}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}