{"ast":null,"code":"import sign from \"./sign\";\nimport { ab2str } from \"../strAb\";\nimport postTransaction from \"../blockchain/postTransaction\";\nimport { SEPERATOR } from \"../../config\";\nimport findFormer from \"./findFormer\";\n\nfunction buildTransactionString({\n  sender,\n  receiver,\n  amount,\n  former,\n  refered\n}) {\n  return \"frm:\" + former + SEPERATOR + \"snd:\" + sender + SEPERATOR + \"rcv:\" + receiver + SEPERATOR + \"amt:\" + amount + SEPERATOR + \"ref:\" + refered + SEPERATOR;\n}\n\nfunction addSig(transactionString, sig) {\n  return transactionString + \"sig:\" + ab2str(sig);\n}\n\nexport default async function (amount, receiver, wallet) {\n  const former = findFormer(wallet, amount);\n\n  if (!former) {\n    console.log(\"Not enough balance apparently!\");\n    return null;\n  }\n\n  let transactionString = buildTransactionString({\n    amount,\n    receiver,\n    sender: wallet.pem_pub_key\n  });\n  const sig = await sign(transactionString, wallet);\n  transactionString = addSig(transactionString, sig);\n  console.log(\"Create Transaction\", amount, receiver, transactionString);\n  return transactionString;\n}","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/src/services/wallet/createTransaction.js"],"names":["sign","ab2str","postTransaction","SEPERATOR","findFormer","buildTransactionString","sender","receiver","amount","former","refered","addSig","transactionString","sig","wallet","console","log","pem_pub_key"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,sBAAT,CAAgC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,MAApB;AAA4BC,EAAAA,MAA5B;AAAoCC,EAAAA;AAApC,CAAhC,EAA+E;AAC7E,SACE,SACAD,MADA,GAEAN,SAFA,GAGA,MAHA,GAIAG,MAJA,GAKAH,SALA,GAMA,MANA,GAOAI,QAPA,GAQAJ,SARA,GASA,MATA,GAUAK,MAVA,GAWAL,SAXA,GAYA,MAZA,GAaAO,OAbA,GAcAP,SAfF;AAiBD;;AAED,SAASQ,MAAT,CAAgBC,iBAAhB,EAAmCC,GAAnC,EAAwC;AACtC,SAAOD,iBAAiB,GAAG,MAApB,GAA6BX,MAAM,CAACY,GAAD,CAA1C;AACD;;AAED,eAAe,gBAAeL,MAAf,EAAuBD,QAAvB,EAAiCO,MAAjC,EAAyC;AACtD,QAAML,MAAM,GAAGL,UAAU,CAACU,MAAD,EAASN,MAAT,CAAzB;;AACA,MAAI,CAACC,MAAL,EAAa;AACXM,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,WAAO,IAAP;AACD;;AAED,MAAIJ,iBAAiB,GAAGP,sBAAsB,CAAC;AAC7CG,IAAAA,MAD6C;AAE7CD,IAAAA,QAF6C;AAG7CD,IAAAA,MAAM,EAAEQ,MAAM,CAACG;AAH8B,GAAD,CAA9C;AAKA,QAAMJ,GAAG,GAAG,MAAMb,IAAI,CAACY,iBAAD,EAAoBE,MAApB,CAAtB;AACAF,EAAAA,iBAAiB,GAAGD,MAAM,CAACC,iBAAD,EAAoBC,GAApB,CAA1B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCR,MAAlC,EAA0CD,QAA1C,EAAoDK,iBAApD;AACA,SAAOA,iBAAP;AACD","sourcesContent":["import sign from \"./sign\";\nimport { ab2str } from \"../strAb\";\nimport postTransaction from \"../blockchain/postTransaction\";\nimport { SEPERATOR } from \"../../config\";\nimport findFormer from \"./findFormer\";\n\nfunction buildTransactionString({ sender, receiver, amount, former, refered }) {\n  return (\n    \"frm:\" +\n    former +\n    SEPERATOR +\n    \"snd:\" +\n    sender +\n    SEPERATOR +\n    \"rcv:\" +\n    receiver +\n    SEPERATOR +\n    \"amt:\" +\n    amount +\n    SEPERATOR +\n    \"ref:\" +\n    refered +\n    SEPERATOR\n  );\n}\n\nfunction addSig(transactionString, sig) {\n  return transactionString + \"sig:\" + ab2str(sig);\n}\n\nexport default async function(amount, receiver, wallet) {\n  const former = findFormer(wallet, amount);\n  if (!former) {\n    console.log(\"Not enough balance apparently!\");\n    return null;\n  }\n\n  let transactionString = buildTransactionString({\n    amount,\n    receiver,\n    sender: wallet.pem_pub_key\n  });\n  const sig = await sign(transactionString, wallet);\n  transactionString = addSig(transactionString, sig);\n  console.log(\"Create Transaction\", amount, receiver, transactionString);\n  return transactionString;\n}\n"]},"metadata":{},"sourceType":"module"}