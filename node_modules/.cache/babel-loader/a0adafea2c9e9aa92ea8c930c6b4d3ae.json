{"ast":null,"code":"\"use strict\";\n/**\n * asn1def.js\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar asn1_js_1 = __importDefault(require(\"asn1.js\")); ///////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * This is either one of subjectPublicKeyInfo, oneAsymmetricKey or encryptedPrivateKeyInfo in ASN.1 format.\n * @type {AsnObject}\n */\n\n\nexports.KeyStructure = asn1_js_1.default.define('KeyStructure', function () {\n  // @ts-ignore\n  this.choice({\n    // @ts-ignore\n    subjectPublicKeyInfo: this.use(exports.SubjectPublicKeyInfo),\n    // @ts-ignore\n    oneAsymmetricKey: this.use(exports.OneAsymmetricKey),\n    // @ts-ignore\n    encryptedPrivateKeyInfo: this.use(exports.EncryptedPrivateKeyInfo)\n  });\n});\n/**\n * SubjectPublicKeyInfo specified in RFC 5280 {@link https://tools.ietf.org/html/rfc5280}.\n * @type {AsnObject}\n */\n\nexports.SubjectPublicKeyInfo = asn1_js_1.default.define('SubjectPublicKeyInfo', function () {\n  // @ts-ignore\n  this.seq().obj( // @ts-ignore\n  this.key('algorithm').use(AlgorithmIdentifier), // @ts-ignore\n  this.key('subjectPublicKey').bitstr());\n}); ///////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * OneAsymmetricKey specified in RFC5958 {@link https://tools.ietf.org/html/rfc5958}.\n * (old version PrivateKeyInfo {@link https://tools.ietf.org/html/rfc5208}.)\n * @type {AsnObject}\n */\n\nexports.OneAsymmetricKey = asn1_js_1.default.define('OneAsymmetricKey', function () {\n  // @ts-ignore\n  this.seq().obj( // @ts-ignore\n  this.key('version').use(Version), // @ts-ignore\n  this.key('privateKeyAlgorithm').use(AlgorithmIdentifier), // @ts-ignore\n  this.key('privateKey').octstr(), // @ts-ignore\n  this.key('attributes').implicit(0).optional().any(), // @ts-ignore\n  this.key('publicKey').implicit(1).optional().bitstr());\n});\n/**\n * EncryptedPrivateKeyInfo specified in RFC5958 {@link https://tools.ietf.org/html/rfc5958}.\n * @type {AsnObject}\n */\n\nexports.EncryptedPrivateKeyInfo = asn1_js_1.default.define('EncryptedPrivateKeyInfo', function () {\n  // @ts-ignore\n  this.seq().obj( // @ts-ignore\n  this.key('encryptionAlgorithm').use(AlgorithmIdentifier), // @ts-ignore\n  this.key('encryptedData').octstr());\n}); ///////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * PBEParameter, parameter for password-based encryption, specified in RFC 8018 {@link https://tools.ietf.org/html/rfc8018}.\n * @type {AsnObject}\n */\n\nexports.PBEParameter = asn1_js_1.default.define('PBEParameter', function () {\n  // @ts-ignore\n  this.seq().obj( // @ts-ignore\n  this.key('salt').octstr(8), // @ts-ignore\n  this.key('iterationCount').int());\n});\n/**\n * PBES2Params, parameter for password-based encryption scheme 2, specified in RFC 8018 {@link https://tools.ietf.org/html/rfc8018}.\n * @type {AsnObject}\n */\n\nexports.PBES2Params = asn1_js_1.default.define('PBES2Params', function () {\n  // @ts-ignore\n  this.seq().obj( // @ts-ignore\n  this.key('keyDerivationFunc').use(AlgorithmIdentifier), // @ts-ignore\n  this.key('encryptionScheme').use(AlgorithmIdentifier));\n}); ///////////////////////////////////////////////////////////////////////////////////////////\n// PBKDF2-params ::= SEQUENCE {\n//        salt CHOICE {\n//          specified OCTET STRING,\n//          otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n//        },\n//        iterationCount INTEGER (1..MAX),\n//        keyLength INTEGER (1..MAX) OPTIONAL,\n//        prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT\n//        algid-hmacWithSHA1\n//    }\n\n/**\n * PBKDF2Params, parameter for PBKDF2, specified in RFC 8018 {@link https://tools.ietf.org/html/rfc8018}.\n * @type {AsnObject}\n */\n\nexports.PBKDF2Params = asn1_js_1.default.define('PBKDF2Params', function () {\n  // @ts-ignore\n  this.seq().obj( // @ts-ignore\n  this.key('salt').choice({\n    // @ts-ignore\n    'specified': this.octstr(),\n    // @ts-ignore\n    'otherSource': this.use(AlgorithmIdentifier)\n  }), // @ts-ignore\n  this.key('iterationCount').int(), // @ts-ignore\n  this.key('keyLength').int().optional(), // @ts-ignore\n  this.key('prf').use(AlgorithmIdentifier).def({\n    algorithm: [1, 2, 840, 113549, 2, 7],\n    parameters: Buffer.from([0x05, 0x00])\n  }));\n}); ///////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * PBES2ESParams specified in RFC 8018 {@link https://tools.ietf.org/html/rfc8018}.\n * @type {{'aes192-cbc': AsnObject, 'aes128-cbc': AsnObject, 'des-ede3-cbc': Object, 'aes256-cbc': AsnObject}}\n */\n\nexports.PBES2ESParams = {\n  'des-ede3-cbc': asn1_js_1.default.define('DesEde3CbcParams', function () {\n    // @ts-ignore\n    this.octstr();\n  }),\n  'aes128-cbc': asn1_js_1.default.define('Aes128CbcParams', function () {\n    // @ts-ignore\n    this.octstr();\n  }),\n  'aes192-cbc': asn1_js_1.default.define('Aes192CbcParams', function () {\n    // @ts-ignore\n    this.octstr();\n  }),\n  'aes256-cbc': asn1_js_1.default.define('Aes256CbcParams', function () {\n    // @ts-ignore\n    this.octstr();\n  })\n}; ////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * AlgorithmIdentifier given in RFC 5280 {@link https://tools.ietf.org/html/rfc5280}\n * @type AsnObject\n */\n\nvar AlgorithmIdentifier = asn1_js_1.default.define('AlgorithmIdentifier', function () {\n  // @ts-ignore\n  this.seq().obj( // @ts-ignore\n  this.key('algorithm').objid(), // @ts-ignore\n  this.key('parameters').optional().any());\n});\n/**\n * Version\n * @type {AsnObject}\n */\n\nvar Version = asn1_js_1.default.define('Version', function () {\n  // @ts-ignore\n  this.int();\n});","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/node_modules/js-crypto-key-utils/dist/asn1def.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","asn1_js_1","require","KeyStructure","default","define","choice","subjectPublicKeyInfo","use","SubjectPublicKeyInfo","oneAsymmetricKey","OneAsymmetricKey","encryptedPrivateKeyInfo","EncryptedPrivateKeyInfo","seq","obj","key","AlgorithmIdentifier","bitstr","Version","octstr","implicit","optional","any","PBEParameter","int","PBES2Params","PBKDF2Params","def","algorithm","parameters","Buffer","from","PBES2ESParams","objid"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * asn1def.js\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar asn1_js_1 = __importDefault(require(\"asn1.js\"));\n///////////////////////////////////////////////////////////////////////////////////////////\n/**\n * This is either one of subjectPublicKeyInfo, oneAsymmetricKey or encryptedPrivateKeyInfo in ASN.1 format.\n * @type {AsnObject}\n */\nexports.KeyStructure = asn1_js_1.default.define('KeyStructure', function () {\n    // @ts-ignore\n    this.choice({\n        // @ts-ignore\n        subjectPublicKeyInfo: this.use(exports.SubjectPublicKeyInfo),\n        // @ts-ignore\n        oneAsymmetricKey: this.use(exports.OneAsymmetricKey),\n        // @ts-ignore\n        encryptedPrivateKeyInfo: this.use(exports.EncryptedPrivateKeyInfo)\n    });\n});\n/**\n * SubjectPublicKeyInfo specified in RFC 5280 {@link https://tools.ietf.org/html/rfc5280}.\n * @type {AsnObject}\n */\nexports.SubjectPublicKeyInfo = asn1_js_1.default.define('SubjectPublicKeyInfo', function () {\n    // @ts-ignore\n    this.seq().obj(\n    // @ts-ignore\n    this.key('algorithm').use(AlgorithmIdentifier), \n    // @ts-ignore\n    this.key('subjectPublicKey').bitstr());\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n/**\n * OneAsymmetricKey specified in RFC5958 {@link https://tools.ietf.org/html/rfc5958}.\n * (old version PrivateKeyInfo {@link https://tools.ietf.org/html/rfc5208}.)\n * @type {AsnObject}\n */\nexports.OneAsymmetricKey = asn1_js_1.default.define('OneAsymmetricKey', function () {\n    // @ts-ignore\n    this.seq().obj(\n    // @ts-ignore\n    this.key('version').use(Version), \n    // @ts-ignore\n    this.key('privateKeyAlgorithm').use(AlgorithmIdentifier), \n    // @ts-ignore\n    this.key('privateKey').octstr(), \n    // @ts-ignore\n    this.key('attributes').implicit(0).optional().any(), \n    // @ts-ignore\n    this.key('publicKey').implicit(1).optional().bitstr());\n});\n/**\n * EncryptedPrivateKeyInfo specified in RFC5958 {@link https://tools.ietf.org/html/rfc5958}.\n * @type {AsnObject}\n */\nexports.EncryptedPrivateKeyInfo = asn1_js_1.default.define('EncryptedPrivateKeyInfo', function () {\n    // @ts-ignore\n    this.seq().obj(\n    // @ts-ignore\n    this.key('encryptionAlgorithm').use(AlgorithmIdentifier), \n    // @ts-ignore\n    this.key('encryptedData').octstr());\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n/**\n * PBEParameter, parameter for password-based encryption, specified in RFC 8018 {@link https://tools.ietf.org/html/rfc8018}.\n * @type {AsnObject}\n */\nexports.PBEParameter = asn1_js_1.default.define('PBEParameter', function () {\n    // @ts-ignore\n    this.seq().obj(\n    // @ts-ignore\n    this.key('salt').octstr(8), \n    // @ts-ignore\n    this.key('iterationCount').int());\n});\n/**\n * PBES2Params, parameter for password-based encryption scheme 2, specified in RFC 8018 {@link https://tools.ietf.org/html/rfc8018}.\n * @type {AsnObject}\n */\nexports.PBES2Params = asn1_js_1.default.define('PBES2Params', function () {\n    // @ts-ignore\n    this.seq().obj(\n    // @ts-ignore\n    this.key('keyDerivationFunc').use(AlgorithmIdentifier), \n    // @ts-ignore\n    this.key('encryptionScheme').use(AlgorithmIdentifier));\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n// PBKDF2-params ::= SEQUENCE {\n//        salt CHOICE {\n//          specified OCTET STRING,\n//          otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n//        },\n//        iterationCount INTEGER (1..MAX),\n//        keyLength INTEGER (1..MAX) OPTIONAL,\n//        prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT\n//        algid-hmacWithSHA1\n//    }\n/**\n * PBKDF2Params, parameter for PBKDF2, specified in RFC 8018 {@link https://tools.ietf.org/html/rfc8018}.\n * @type {AsnObject}\n */\nexports.PBKDF2Params = asn1_js_1.default.define('PBKDF2Params', function () {\n    // @ts-ignore\n    this.seq().obj(\n    // @ts-ignore\n    this.key('salt').choice({\n        // @ts-ignore\n        'specified': this.octstr(),\n        // @ts-ignore\n        'otherSource': this.use(AlgorithmIdentifier)\n    }), \n    // @ts-ignore\n    this.key('iterationCount').int(), \n    // @ts-ignore\n    this.key('keyLength').int().optional(), \n    // @ts-ignore\n    this.key('prf').use(AlgorithmIdentifier).def({\n        algorithm: [1, 2, 840, 113549, 2, 7],\n        parameters: Buffer.from([0x05, 0x00])\n    }));\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n/**\n * PBES2ESParams specified in RFC 8018 {@link https://tools.ietf.org/html/rfc8018}.\n * @type {{'aes192-cbc': AsnObject, 'aes128-cbc': AsnObject, 'des-ede3-cbc': Object, 'aes256-cbc': AsnObject}}\n */\nexports.PBES2ESParams = {\n    'des-ede3-cbc': asn1_js_1.default.define('DesEde3CbcParams', function () {\n        // @ts-ignore\n        this.octstr();\n    }),\n    'aes128-cbc': asn1_js_1.default.define('Aes128CbcParams', function () {\n        // @ts-ignore\n        this.octstr();\n    }),\n    'aes192-cbc': asn1_js_1.default.define('Aes192CbcParams', function () {\n        // @ts-ignore\n        this.octstr();\n    }),\n    'aes256-cbc': asn1_js_1.default.define('Aes256CbcParams', function () {\n        // @ts-ignore\n        this.octstr();\n    })\n};\n////////////////////////////////////////////////////////////////////////////////////\n/**\n * AlgorithmIdentifier given in RFC 5280 {@link https://tools.ietf.org/html/rfc5280}\n * @type AsnObject\n */\nvar AlgorithmIdentifier = asn1_js_1.default.define('AlgorithmIdentifier', function () {\n    // @ts-ignore\n    this.seq().obj(\n    // @ts-ignore\n    this.key('algorithm').objid(), \n    // @ts-ignore\n    this.key('parameters').optional().any());\n});\n/**\n * Version\n * @type {AsnObject}\n */\nvar Version = asn1_js_1.default.define('Version', function () {\n    // @ts-ignore\n    this.int();\n});\n//# sourceMappingURL=asn1def.js.map"]},"metadata":{},"sourceType":"script"}