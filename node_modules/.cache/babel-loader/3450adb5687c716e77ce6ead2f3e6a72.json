{"ast":null,"code":"// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n// Basic JavaScript BN library - subset useful for RSA encryption.\n// Bits per digit\nvar dbits; // (public) Constructor\n\nfunction BigInteger(a, b, c) {\n  if (a != null) if (\"number\" == typeof a) this.fromNumber(a, b, c);else if (b == null && \"string\" != typeof a) this.fromString(a, 256);else this.fromString(a, b);\n} // return new, unset BigInteger\n\n\nfunction nbi() {\n  return new BigInteger(null);\n} // am avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n\n\nfunction am(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n      xh = x >> 15;\n\n  while (--n >= 0) {\n    var l = this[i] & 0x7fff;\n    var h = this[i++] >> 15;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w[j++] = l & 0x3fffffff;\n  }\n\n  return c;\n}\n\nBigInteger.prototype.am = am;\ndbits = 30;\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP; // Digit conversions\n\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr, vv;\nrr = \"0\".charCodeAt(0);\n\nfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n\nrr = \"a\".charCodeAt(0);\n\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nrr = \"A\".charCodeAt(0);\n\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) {\n  return BI_RM.charAt(n);\n}\n\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n} // (protected) copy this to r\n\n\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) r[i] = this[i];\n\n  r.t = this.t;\n  r.s = this.s;\n} // (protected) set from integer value x, -DV <= x < DV\n\n\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + DV;else this.t = 0;\n} // return bigint initialized to value\n\n\nfunction nbv(i) {\n  var r = nbi();\n  r.fromInt(i);\n  return r;\n} // (protected) set from string and radix\n\n\nfunction bnpFromString(s, b) {\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 256) k = 8; // byte array\n  else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else {\n      this.fromRadix(s, b);\n      return;\n    }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length,\n      mi = false,\n      sh = 0;\n\n  while (--i >= 0) {\n    var x = k == 8 ? s[i] & 0xff : intAt(s, i);\n\n    if (x < 0) {\n      if (s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n\n    mi = false;\n    if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {\n      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n      this[this.t++] = x >> this.DB - sh;\n    } else this[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n\n  if (k == 8 && (s[0] & 0x80) != 0) {\n    this.s = -1;\n    if (sh > 0) this[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;\n  }\n\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n} // (protected) clamp off excess high words\n\n\nfunction bnpClamp() {\n  var c = this.s & this.DM;\n\n  while (this.t > 0 && this[this.t - 1] == c) --this.t;\n} // (public) return string representation in given radix\n\n\nfunction bnToString(b) {\n  if (this.s < 0) return \"-\" + this.negate().toString(b);\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 64) k = 6;else if (b == 4) k = 2;else return this.toRadix(b);\n  var km = (1 << k) - 1,\n      d,\n      m = false,\n      r = \"\",\n      i = this.t;\n  var p = this.DB - i * this.DB % k;\n\n  if (i-- > 0) {\n    if (p < this.DB && (d = this[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n\n    while (i >= 0) {\n      if (p < k) {\n        d = (this[i] & (1 << p) - 1) << k - p;\n        d |= this[--i] >> (p += this.DB - k);\n      } else {\n        d = this[i] >> (p -= k) & km;\n\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n\n  return m ? r : \"0\";\n} // (public) -this\n\n\nfunction bnNegate() {\n  var r = nbi();\n  BigInteger.ZERO.subTo(this, r);\n  return r;\n} // (public) |this|\n\n\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n} // (public) return + if this > a, - if this < a, 0 if equal\n\n\nfunction bnCompareTo(a) {\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return r;\n\n  while (--i >= 0) if ((r = this[i] - a[i]) != 0) return r;\n\n  return 0;\n} // returns bit length of the integer x\n\n\nfunction nbits(x) {\n  var r = 1,\n      t;\n\n  if ((t = x >>> 16) != 0) {\n    x = t;\n    r += 16;\n  }\n\n  if ((t = x >> 8) != 0) {\n    x = t;\n    r += 8;\n  }\n\n  if ((t = x >> 4) != 0) {\n    x = t;\n    r += 4;\n  }\n\n  if ((t = x >> 2) != 0) {\n    x = t;\n    r += 2;\n  }\n\n  if ((t = x >> 1) != 0) {\n    x = t;\n    r += 1;\n  }\n\n  return r;\n} // (public) return the number of bits in \"this\"\n\n\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n} // (protected) r = this << n*DB\n\n\nfunction bnpDLShiftTo(n, r) {\n  var i;\n\n  for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];\n\n  for (i = n - 1; i >= 0; --i) r[i] = 0;\n\n  r.t = this.t + n;\n  r.s = this.s;\n} // (protected) r = this >> n*DB\n\n\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) r[i - n] = this[i];\n\n  r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n} // (protected) r = this << n\n\n\nfunction bnpLShiftTo(n, r) {\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / this.DB),\n      c = this.s << bs & this.DM,\n      i;\n\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = this[i] >> cbs | c;\n    c = (this[i] & bm) << bs;\n  }\n\n  for (i = ds - 1; i >= 0; --i) r[i] = 0;\n\n  r[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n} // (protected) r = this >> n\n\n\nfunction bnpRShiftTo(n, r) {\n  r.s = this.s;\n  var ds = Math.floor(n / this.DB);\n\n  if (ds >= this.t) {\n    r.t = 0;\n    return;\n  }\n\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << bs) - 1;\n  r[0] = this[ds] >> bs;\n\n  for (var i = ds + 1; i < this.t; ++i) {\n    r[i - ds - 1] |= (this[i] & bm) << cbs;\n    r[i - ds] = this[i] >> bs;\n  }\n\n  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n} // (protected) r = this - a\n\n\nfunction bnpSubTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n\n  while (i < m) {\n    c += this[i] - a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n\n  if (a.t < this.t) {\n    c -= a.s;\n\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += this.s;\n  } else {\n    c += this.s;\n\n    while (i < a.t) {\n      c -= a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c -= a.s;\n  }\n\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n} // (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\n\n\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n      y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n\n  while (--i >= 0) r[i] = 0;\n\n  for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n\n  r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n} // (protected) r = this^2, r != this (HAC 14.16)\n\n\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n\n  while (--i >= 0) r[i] = 0;\n\n  for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1);\n\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r[i + x.t] -= x.DV;\n      r[i + x.t + 1] = 1;\n    }\n  }\n\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n} // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\n\n\nfunction bnpDivRemTo(m, q, r) {\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = this.abs();\n\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n\n  if (r == null) r = nbi();\n  var y = nbi(),\n      ts = this.s,\n      ms = m.s;\n  var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n\n  var ys = y.t;\n  var y0 = y[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n  var d1 = this.FV / yt,\n      d2 = (1 << this.F1) / yt,\n      e = 1 << this.F2;\n  var i = r.t,\n      j = i - ys,\n      t = q == null ? nbi() : q;\n  y.dlShiftTo(j, t);\n\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t, r);\n  }\n\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n\n  while (y.t < ys) y[y.t++] = 0;\n\n  while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n\n      while (r[i] < --qd) r.subTo(t, r);\n    }\n  }\n\n  if (q != null) {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n} // (public) this mod a\n\n\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n} // Modular reduction using \"classic\" algorithm\n\n\nfunction Classic(m) {\n  this.m = m;\n}\n\nfunction cConvert(x) {\n  if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);else return x;\n}\n\nfunction cRevert(x) {\n  return x;\n}\n\nfunction cReduce(x) {\n  x.divRemTo(this.m, null, x);\n}\n\nfunction cMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nfunction cSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n}\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo; // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\n\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  var x = this[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3; // y == 1/x mod 2^2\n\n  y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4\n\n  y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8\n\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n\n  y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n\n  return y > 0 ? this.DV - y : -y;\n} // Montgomery reduction\n\n\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n} // xR mod m\n\n\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n} // x/R mod m\n\n\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n} // x = x/R mod m (HAC 14.32)\n\n\nfunction montReduce(x) {\n  while (x.t <= this.mt2) // pad x so am has enough room later\n  x[x.t++] = 0;\n\n  for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff;\n    var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM; // use am to combine the multiply-shift-add into one call\n\n    j = i + this.m.t;\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t); // propagate carry\n\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV;\n      x[++j]++;\n    }\n  }\n\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n} // r = \"x^2/R mod m\"; x != r\n\n\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n} // r = \"xy/R mod m\"; x,y != r\n\n\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo; // (protected) true iff this is even\n\nfunction bnpIsEven() {\n  return (this.t > 0 ? this[0] & 1 : this.s) == 0;\n} // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n\n\nfunction bnpExp(e, z) {\n  if (e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(),\n      r2 = nbi(),\n      g = z.convert(this),\n      i = nbits(e) - 1;\n  g.copyTo(r);\n\n  while (--i >= 0) {\n    z.sqrTo(r, r2);\n    if ((e & 1 << i) > 0) z.mulTo(r2, g, r);else {\n      var t = r;\n      r = r2;\n      r2 = t;\n    }\n  }\n\n  return z.revert(r);\n} // (public) this^e % m, 0 <= e < 2^32\n\n\nfunction bnModPowInt(e, m) {\n  var z;\n  if (e < 256 || m.isEven()) z = new Classic(m);else z = new Montgomery(m);\n  return this.exp(e, z);\n} // protected\n\n\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp; // public\n\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt; // \"constants\"\n\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\nfunction bnClone() {\n  var r = nbi();\n  this.copyTo(r);\n  return r;\n} // (public) return value as integer\n\n\nfunction bnIntValue() {\n  if (this.s < 0) {\n    if (this.t == 1) return this[0] - this.DV;else if (this.t == 0) return -1;\n  } else if (this.t == 1) return this[0];else if (this.t == 0) return 0; // assumes 16 < DB < 32\n\n\n  return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];\n} // (public) return value as byte\n\n\nfunction bnByteValue() {\n  return this.t == 0 ? this.s : this[0] << 24 >> 24;\n} // (public) return value as short (assumes DB>=16)\n\n\nfunction bnShortValue() {\n  return this.t == 0 ? this.s : this[0] << 16 >> 16;\n} // (protected) return x s.t. r^x < DV\n\n\nfunction bnpChunkSize(r) {\n  return Math.floor(Math.LN2 * this.DB / Math.log(r));\n} // (public) 0 if this == 0, 1 if this > 0\n\n\nfunction bnSigNum() {\n  if (this.s < 0) return -1;else if (this.t <= 0 || this.t == 1 && this[0] <= 0) return 0;else return 1;\n} // (protected) convert to radix string\n\n\nfunction bnpToRadix(b) {\n  if (b == null) b = 10;\n  if (this.signum() == 0 || b < 2 || b > 36) return \"0\";\n  var cs = this.chunkSize(b);\n  var a = Math.pow(b, cs);\n  var d = nbv(a),\n      y = nbi(),\n      z = nbi(),\n      r = \"\";\n  this.divRemTo(d, y, z);\n\n  while (y.signum() > 0) {\n    r = (a + z.intValue()).toString(b).substr(1) + r;\n    y.divRemTo(d, y, z);\n  }\n\n  return z.intValue().toString(b) + r;\n} // (protected) convert from radix string\n\n\nfunction bnpFromRadix(s, b) {\n  this.fromInt(0);\n  if (b == null) b = 10;\n  var cs = this.chunkSize(b);\n  var d = Math.pow(b, cs),\n      mi = false,\n      j = 0,\n      w = 0;\n\n  for (var i = 0; i < s.length; ++i) {\n    var x = intAt(s, i);\n\n    if (x < 0) {\n      if (s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n      continue;\n    }\n\n    w = b * w + x;\n\n    if (++j >= cs) {\n      this.dMultiply(d);\n      this.dAddOffset(w, 0);\n      j = 0;\n      w = 0;\n    }\n  }\n\n  if (j > 0) {\n    this.dMultiply(Math.pow(b, j));\n    this.dAddOffset(w, 0);\n  }\n\n  if (mi) BigInteger.ZERO.subTo(this, this);\n} // (protected) alternate constructor\n\n\nfunction bnpFromNumber(a, b, c) {\n  if (\"number\" == typeof b) {\n    // new BigInteger(int,int,RNG)\n    if (a < 2) this.fromInt(1);else {\n      this.fromNumber(a, c);\n      if (!this.testBit(a - 1)) // force MSB set\n        this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n      if (this.isEven()) this.dAddOffset(1, 0); // force odd\n\n      while (!this.isProbablePrime(b)) {\n        this.dAddOffset(2, 0);\n        if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n      }\n    }\n  } else {\n    // new BigInteger(int,RNG)\n    var x = new Array(),\n        t = a & 7;\n    x.length = (a >> 3) + 1;\n    b.nextBytes(x);\n    if (t > 0) x[0] &= (1 << t) - 1;else x[0] = 0;\n    this.fromString(x, 256);\n  }\n} // (public) convert to bigendian byte array\n\n\nfunction bnToByteArray() {\n  var i = this.t,\n      r = new Array();\n  r[0] = this.s;\n  var p = this.DB - i * this.DB % 8,\n      d,\n      k = 0;\n\n  if (i-- > 0) {\n    if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) r[k++] = d | this.s << this.DB - p;\n\n    while (i >= 0) {\n      if (p < 8) {\n        d = (this[i] & (1 << p) - 1) << 8 - p;\n        d |= this[--i] >> (p += this.DB - 8);\n      } else {\n        d = this[i] >> (p -= 8) & 0xff;\n\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n\n      if ((d & 0x80) != 0) d |= -256;\n      if (k == 0 && (this.s & 0x80) != (d & 0x80)) ++k;\n      if (k > 0 || d != this.s) r[k++] = d;\n    }\n  }\n\n  return r;\n}\n\nfunction bnEquals(a) {\n  return this.compareTo(a) == 0;\n}\n\nfunction bnMin(a) {\n  return this.compareTo(a) < 0 ? this : a;\n}\n\nfunction bnMax(a) {\n  return this.compareTo(a) > 0 ? this : a;\n} // (protected) r = this op a (bitwise)\n\n\nfunction bnpBitwiseTo(a, op, r) {\n  var i,\n      f,\n      m = Math.min(a.t, this.t);\n\n  for (i = 0; i < m; ++i) r[i] = op(this[i], a[i]);\n\n  if (a.t < this.t) {\n    f = a.s & this.DM;\n\n    for (i = m; i < this.t; ++i) r[i] = op(this[i], f);\n\n    r.t = this.t;\n  } else {\n    f = this.s & this.DM;\n\n    for (i = m; i < a.t; ++i) r[i] = op(f, a[i]);\n\n    r.t = a.t;\n  }\n\n  r.s = op(this.s, a.s);\n  r.clamp();\n} // (public) this & a\n\n\nfunction op_and(x, y) {\n  return x & y;\n}\n\nfunction bnAnd(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_and, r);\n  return r;\n} // (public) this | a\n\n\nfunction op_or(x, y) {\n  return x | y;\n}\n\nfunction bnOr(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_or, r);\n  return r;\n} // (public) this ^ a\n\n\nfunction op_xor(x, y) {\n  return x ^ y;\n}\n\nfunction bnXor(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_xor, r);\n  return r;\n} // (public) this & ~a\n\n\nfunction op_andnot(x, y) {\n  return x & ~y;\n}\n\nfunction bnAndNot(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_andnot, r);\n  return r;\n} // (public) ~this\n\n\nfunction bnNot() {\n  var r = nbi();\n\n  for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i];\n\n  r.t = this.t;\n  r.s = ~this.s;\n  return r;\n} // (public) this << n\n\n\nfunction bnShiftLeft(n) {\n  var r = nbi();\n  if (n < 0) this.rShiftTo(-n, r);else this.lShiftTo(n, r);\n  return r;\n} // (public) this >> n\n\n\nfunction bnShiftRight(n) {\n  var r = nbi();\n  if (n < 0) this.lShiftTo(-n, r);else this.rShiftTo(n, r);\n  return r;\n} // return index of lowest 1-bit in x, x < 2^31\n\n\nfunction lbit(x) {\n  if (x == 0) return -1;\n  var r = 0;\n\n  if ((x & 0xffff) == 0) {\n    x >>= 16;\n    r += 16;\n  }\n\n  if ((x & 0xff) == 0) {\n    x >>= 8;\n    r += 8;\n  }\n\n  if ((x & 0xf) == 0) {\n    x >>= 4;\n    r += 4;\n  }\n\n  if ((x & 3) == 0) {\n    x >>= 2;\n    r += 2;\n  }\n\n  if ((x & 1) == 0) ++r;\n  return r;\n} // (public) returns index of lowest 1-bit (or -1 if none)\n\n\nfunction bnGetLowestSetBit() {\n  for (var i = 0; i < this.t; ++i) if (this[i] != 0) return i * this.DB + lbit(this[i]);\n\n  if (this.s < 0) return this.t * this.DB;\n  return -1;\n} // return number of 1 bits in x\n\n\nfunction cbit(x) {\n  var r = 0;\n\n  while (x != 0) {\n    x &= x - 1;\n    ++r;\n  }\n\n  return r;\n} // (public) return number of set bits\n\n\nfunction bnBitCount() {\n  var r = 0,\n      x = this.s & this.DM;\n\n  for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x);\n\n  return r;\n} // (public) true iff nth bit is set\n\n\nfunction bnTestBit(n) {\n  var j = Math.floor(n / this.DB);\n  if (j >= this.t) return this.s != 0;\n  return (this[j] & 1 << n % this.DB) != 0;\n} // (protected) this op (1<<n)\n\n\nfunction bnpChangeBit(n, op) {\n  var r = BigInteger.ONE.shiftLeft(n);\n  this.bitwiseTo(r, op, r);\n  return r;\n} // (public) this | (1<<n)\n\n\nfunction bnSetBit(n) {\n  return this.changeBit(n, op_or);\n} // (public) this & ~(1<<n)\n\n\nfunction bnClearBit(n) {\n  return this.changeBit(n, op_andnot);\n} // (public) this ^ (1<<n)\n\n\nfunction bnFlipBit(n) {\n  return this.changeBit(n, op_xor);\n} // (protected) r = this + a\n\n\nfunction bnpAddTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n\n  while (i < m) {\n    c += this[i] + a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n\n  if (a.t < this.t) {\n    c += a.s;\n\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += this.s;\n  } else {\n    c += this.s;\n\n    while (i < a.t) {\n      c += a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += a.s;\n  }\n\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n} // (public) this + a\n\n\nfunction bnAdd(a) {\n  var r = nbi();\n  this.addTo(a, r);\n  return r;\n} // (public) this - a\n\n\nfunction bnSubtract(a) {\n  var r = nbi();\n  this.subTo(a, r);\n  return r;\n} // (public) this * a\n\n\nfunction bnMultiply(a) {\n  var r = nbi();\n  this.multiplyTo(a, r);\n  return r;\n} // (public) this^2\n\n\nfunction bnSquare() {\n  var r = nbi();\n  this.squareTo(r);\n  return r;\n} // (public) this / a\n\n\nfunction bnDivide(a) {\n  var r = nbi();\n  this.divRemTo(a, r, null);\n  return r;\n} // (public) this % a\n\n\nfunction bnRemainder(a) {\n  var r = nbi();\n  this.divRemTo(a, null, r);\n  return r;\n} // (public) [this/a,this%a]\n\n\nfunction bnDivideAndRemainder(a) {\n  var q = nbi(),\n      r = nbi();\n  this.divRemTo(a, q, r);\n  return new Array(q, r);\n} // (protected) this *= n, this >= 0, 1 < n < DV\n\n\nfunction bnpDMultiply(n) {\n  this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n  ++this.t;\n  this.clamp();\n} // (protected) this += n << w words, this >= 0\n\n\nfunction bnpDAddOffset(n, w) {\n  if (n == 0) return;\n\n  while (this.t <= w) this[this.t++] = 0;\n\n  this[w] += n;\n\n  while (this[w] >= this.DV) {\n    this[w] -= this.DV;\n    if (++w >= this.t) this[this.t++] = 0;\n    ++this[w];\n  }\n} // A \"null\" reducer\n\n\nfunction NullExp() {}\n\nfunction nNop(x) {\n  return x;\n}\n\nfunction nMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n}\n\nfunction nSqrTo(x, r) {\n  x.squareTo(r);\n}\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo; // (public) this^e\n\nfunction bnPow(e) {\n  return this.exp(e, new NullExp());\n} // (protected) r = lower n words of \"this * a\", a.t <= n\n// \"this\" should be the larger one if appropriate.\n\n\nfunction bnpMultiplyLowerTo(a, n, r) {\n  var i = Math.min(this.t + a.t, n);\n  r.s = 0; // assumes a,this >= 0\n\n  r.t = i;\n\n  while (i > 0) r[--i] = 0;\n\n  var j;\n\n  for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\n\n  for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i);\n\n  r.clamp();\n} // (protected) r = \"this * a\" without lower n words, n > 0\n// \"this\" should be the larger one if appropriate.\n\n\nfunction bnpMultiplyUpperTo(a, n, r) {\n  --n;\n  var i = r.t = this.t + a.t - n;\n  r.s = 0; // assumes a,this >= 0\n\n  while (--i >= 0) r[i] = 0;\n\n  for (i = Math.max(n - this.t, 0); i < a.t; ++i) r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\n\n  r.clamp();\n  r.drShiftTo(1, r);\n} // Barrett modular reduction\n\n\nfunction Barrett(m) {\n  // setup Barrett\n  this.r2 = nbi();\n  this.q3 = nbi();\n  BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n  this.mu = this.r2.divide(m);\n  this.m = m;\n}\n\nfunction barrettConvert(x) {\n  if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);else if (x.compareTo(this.m) < 0) return x;else {\n    var r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n  }\n}\n\nfunction barrettRevert(x) {\n  return x;\n} // x = x mod m (HAC 14.42)\n\n\nfunction barrettReduce(x) {\n  x.drShiftTo(this.m.t - 1, this.r2);\n\n  if (x.t > this.m.t + 1) {\n    x.t = this.m.t + 1;\n    x.clamp();\n  }\n\n  this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n  this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n\n  while (x.compareTo(this.r2) < 0) x.dAddOffset(1, this.m.t + 1);\n\n  x.subTo(this.r2, x);\n\n  while (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n} // r = x^2 mod m; x != r\n\n\nfunction barrettSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n} // r = x*y mod m; x,y != r\n\n\nfunction barrettMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo; // (public) this^e % m (HAC 14.85)\n\nfunction bnModPow(e, m) {\n  var i = e.bitLength(),\n      k,\n      r = nbv(1),\n      z;\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6;\n  if (i < 8) z = new Classic(m);else if (m.isEven()) z = new Barrett(m);else z = new Montgomery(m); // precomputation\n\n  var g = new Array(),\n      n = 3,\n      k1 = k - 1,\n      km = (1 << k) - 1;\n  g[1] = z.convert(this);\n\n  if (k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1], g2);\n\n    while (n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t - 1,\n      w,\n      is1 = true,\n      r2 = nbi(),\n      t;\n  i = nbits(e[j]) - 1;\n\n  while (j >= 0) {\n    if (i >= k1) w = e[j] >> i - k1 & km;else {\n      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\n    }\n    n = k;\n\n    while ((w & 1) == 0) {\n      w >>= 1;\n      --n;\n    }\n\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n\n      if (n > 0) z.sqrTo(r, r2);else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n\n    while (j >= 0 && (e[j] & 1 << i) == 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n\n  return z.revert(r);\n} // (public) gcd(this,a) (HAC 14.54)\n\n\nfunction bnGCD(a) {\n  var x = this.s < 0 ? this.negate() : this.clone();\n  var y = a.s < 0 ? a.negate() : a.clone();\n\n  if (x.compareTo(y) < 0) {\n    var t = x;\n    x = y;\n    y = t;\n  }\n\n  var i = x.getLowestSetBit(),\n      g = y.getLowestSetBit();\n  if (g < 0) return x;\n  if (i < g) g = i;\n\n  if (g > 0) {\n    x.rShiftTo(g, x);\n    y.rShiftTo(g, y);\n  }\n\n  while (x.signum() > 0) {\n    if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);\n    if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);\n\n    if (x.compareTo(y) >= 0) {\n      x.subTo(y, x);\n      x.rShiftTo(1, x);\n    } else {\n      y.subTo(x, y);\n      y.rShiftTo(1, y);\n    }\n  }\n\n  if (g > 0) y.lShiftTo(g, y);\n  return y;\n} // (protected) this % n, n < 2^26\n\n\nfunction bnpModInt(n) {\n  if (n <= 0) return 0;\n  var d = this.DV % n,\n      r = this.s < 0 ? n - 1 : 0;\n  if (this.t > 0) if (d == 0) r = this[0] % n;else for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n;\n  return r;\n} // (public) 1/this % m (HAC 14.61)\n\n\nfunction bnModInverse(m) {\n  var ac = m.isEven();\n  if (this.isEven() && ac || m.signum() == 0) return BigInteger.ZERO;\n  var u = m.clone(),\n      v = this.clone();\n  var a = nbv(1),\n      b = nbv(0),\n      c = nbv(0),\n      d = nbv(1);\n\n  while (u.signum() != 0) {\n    while (u.isEven()) {\n      u.rShiftTo(1, u);\n\n      if (ac) {\n        if (!a.isEven() || !b.isEven()) {\n          a.addTo(this, a);\n          b.subTo(m, b);\n        }\n\n        a.rShiftTo(1, a);\n      } else if (!b.isEven()) b.subTo(m, b);\n\n      b.rShiftTo(1, b);\n    }\n\n    while (v.isEven()) {\n      v.rShiftTo(1, v);\n\n      if (ac) {\n        if (!c.isEven() || !d.isEven()) {\n          c.addTo(this, c);\n          d.subTo(m, d);\n        }\n\n        c.rShiftTo(1, c);\n      } else if (!d.isEven()) d.subTo(m, d);\n\n      d.rShiftTo(1, d);\n    }\n\n    if (u.compareTo(v) >= 0) {\n      u.subTo(v, u);\n      if (ac) a.subTo(c, a);\n      b.subTo(d, b);\n    } else {\n      v.subTo(u, v);\n      if (ac) c.subTo(a, c);\n      d.subTo(b, d);\n    }\n  }\n\n  if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n  if (d.compareTo(m) >= 0) return d.subtract(m);\n  if (d.signum() < 0) d.addTo(m, d);else return d;\n  if (d.signum() < 0) return d.add(m);else return d;\n}\n\nvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1]; // (public) test primality with certainty >= 1-.5^t\n\nfunction bnIsProbablePrime(t) {\n  var i,\n      x = this.abs();\n\n  if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {\n    for (i = 0; i < lowprimes.length; ++i) if (x[0] == lowprimes[i]) return true;\n\n    return false;\n  }\n\n  if (x.isEven()) return false;\n  i = 1;\n\n  while (i < lowprimes.length) {\n    var m = lowprimes[i],\n        j = i + 1;\n\n    while (j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n\n    m = x.modInt(m);\n\n    while (i < j) if (m % lowprimes[i++] == 0) return false;\n  }\n\n  return x.millerRabin(t);\n} // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n\n\nfunction bnpMillerRabin(t) {\n  var n1 = this.subtract(BigInteger.ONE);\n  var k = n1.getLowestSetBit();\n  if (k <= 0) return false;\n  var r = n1.shiftRight(k);\n  t = t + 1 >> 1;\n  if (t > lowprimes.length) t = lowprimes.length;\n  var a = nbi();\n\n  for (var i = 0; i < t; ++i) {\n    //Pick bases at random, instead of starting at 2\n    a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\n    var y = a.modPow(r, this);\n\n    if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n      var j = 1;\n\n      while (j++ < k && y.compareTo(n1) != 0) {\n        y = y.modPowInt(2, this);\n        if (y.compareTo(BigInteger.ONE) == 0) return false;\n      }\n\n      if (y.compareTo(n1) != 0) return false;\n    }\n  }\n\n  return true;\n} // protected\n\n\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin; // public\n\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime; // JSBN-specific extension\n\nBigInteger.prototype.square = bnSquare; // seedrandom.js version 2.0.\n// Author: David Bau 4/2/2011\n//\n// Defines a method Math.seedrandom() that, when called, substitutes\n// an explicitly seeded RC4-based algorithm for Math.random().  Also\n// supports automatic seeding from local or network sources of entropy.\n//\n// Usage:\n//\n//   <script src=http://davidbau.com/encode/seedrandom-min.js></script>\n//\n//   Math.seedrandom('yipee'); Sets Math.random to a function that is\n//                             initialized using the given explicit seed.\n//\n//   Math.seedrandom();        Sets Math.random to a function that is\n//                             seeded using the current time, dom state,\n//                             and other accumulated local entropy.\n//                             The generated seed string is returned.\n//\n//   Math.seedrandom('yowza', true);\n//                             Seeds using the given explicit seed mixed\n//                             together with accumulated entropy.\n//\n//   <script src=\"http://bit.ly/srandom-512\"></script>\n//                             Seeds using physical random bits downloaded\n//                             from random.org.\n//\n//   <script src=\"https://jsonlib.appspot.com/urandom?callback=Math.seedrandom\">\n//   </script>                 Seeds using urandom bits from call.jsonlib.com,\n//                             which is faster than random.org.\n//\n// Examples:\n//\n//   Math.seedrandom(\"hello\");            // Use \"hello\" as the seed.\n//   document.write(Math.random());       // Always 0.5463663768140734\n//   document.write(Math.random());       // Always 0.43973793770592234\n//   var rng1 = Math.random;              // Remember the current prng.\n//\n//   var autoseed = Math.seedrandom();    // New prng with an automatic seed.\n//   document.write(Math.random());       // Pretty much unpredictable.\n//\n//   Math.random = rng1;                  // Continue \"hello\" prng sequence.\n//   document.write(Math.random());       // Always 0.554769432473455\n//\n//   Math.seedrandom(autoseed);           // Restart at the previous seed.\n//   document.write(Math.random());       // Repeat the 'unpredictable' value.\n//\n// Notes:\n//\n// Each time seedrandom('arg') is called, entropy from the passed seed\n// is accumulated in a pool to help generate future seeds for the\n// zero-argument form of Math.seedrandom, so entropy can be injected over\n// time by calling seedrandom with explicit data repeatedly.\n//\n// On speed - This javascript implementation of Math.random() is about\n// 3-10x slower than the built-in Math.random() because it is not native\n// code, but this is typically fast enough anyway.  Seeding is more expensive,\n// especially if you use auto-seeding.  Some details (timings on Chrome 4):\n//\n// Our Math.random()            - avg less than 0.002 milliseconds per call\n// seedrandom('explicit')       - avg less than 0.5 milliseconds per call\n// seedrandom('explicit', true) - avg less than 2 milliseconds per call\n// seedrandom()                 - avg about 38 milliseconds per call\n//\n// LICENSE (BSD):\n//\n// Copyright 2010 David Bau, all rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n// \n//   1. Redistributions of source code must retain the above copyright\n//      notice, this list of conditions and the following disclaimer.\n//\n//   2. Redistributions in binary form must reproduce the above copyright\n//      notice, this list of conditions and the following disclaimer in the\n//      documentation and/or other materials provided with the distribution.\n// \n//   3. Neither the name of this module nor the names of its contributors may\n//      be used to endorse or promote products derived from this software\n//      without specific prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n\n/**\n * All code is in an anonymous closure to keep the global namespace clean.\n *\n * @param {number=} overflow \n * @param {number=} startdenom\n */\n\n(function (pool, math, width, chunks, significance, overflow, startdenom) {\n  //\n  // seedrandom()\n  // This is the seedrandom function described above.\n  //\n  math['seedrandom'] = function seedrandom(seed, use_entropy) {\n    var key = [];\n    var arc4; // Flatten the seed string or build one from local entropy if needed.\n\n    seed = mixkey(flatten(use_entropy ? [seed, pool] : arguments.length ? seed : [new Date().getTime(), pool], 3), key); // Use the seed to initialize an ARC4 generator.\n\n    arc4 = new ARC4(key); // Mix the randomness into accumulated entropy.\n\n    mixkey(arc4.S, pool); // Override Math.random\n    // This function returns a random double in [0, 1) that contains\n    // randomness in every bit of the mantissa of the IEEE 754 value.\n\n    math['random'] = function random() {\n      // Closure to return a random double:\n      var n = arc4.g(chunks); // Start with a numerator n < 2 ^ 48\n\n      var d = startdenom; //   and denominator d = 2 ^ 48.\n\n      var x = 0; //   and no 'extra last byte'.\n\n      while (n < significance) {\n        // Fill up all significant digits by\n        n = (n + x) * width; //   shifting numerator and\n\n        d *= width; //   denominator and generating a\n\n        x = arc4.g(1); //   new least-significant-byte.\n      }\n\n      while (n >= overflow) {\n        // To avoid rounding up, before adding\n        n /= 2; //   last byte, shift everything\n\n        d /= 2; //   right using integer math until\n\n        x >>>= 1; //   we have exactly the desired bits.\n      }\n\n      return (n + x) / d; // Form the number within [0, 1).\n    }; // Return the seed that was used\n\n\n    return seed;\n  }; //\n  // ARC4\n  //\n  // An ARC4 implementation.  The constructor takes a key in the form of\n  // an array of at most (width) integers that should be 0 <= x < (width).\n  //\n  // The g(count) method returns a pseudorandom integer that concatenates\n  // the next (count) outputs from ARC4.  Its return value is a number x\n  // that is in the range 0 <= x < (width ^ count).\n  //\n\n  /** @constructor */\n\n\n  function ARC4(key) {\n    var t,\n        u,\n        me = this,\n        keylen = key.length;\n    var i = 0,\n        j = me.i = me.j = me.m = 0;\n    me.S = [];\n    me.c = []; // The empty key [] is treated as [0].\n\n    if (!keylen) {\n      key = [keylen++];\n    } // Set up S using the standard key scheduling algorithm.\n\n\n    while (i < width) {\n      me.S[i] = i++;\n    }\n\n    for (i = 0; i < width; i++) {\n      t = me.S[i];\n      j = lowbits(j + t + key[i % keylen]);\n      u = me.S[j];\n      me.S[i] = u;\n      me.S[j] = t;\n    } // The \"g\" method returns the next (count) outputs as one number.\n\n\n    me.g = function getnext(count) {\n      var s = me.S;\n      var i = lowbits(me.i + 1);\n      var t = s[i];\n      var j = lowbits(me.j + t);\n      var u = s[j];\n      s[i] = u;\n      s[j] = t;\n      var r = s[lowbits(t + u)];\n\n      while (--count) {\n        i = lowbits(i + 1);\n        t = s[i];\n        j = lowbits(j + t);\n        u = s[j];\n        s[i] = u;\n        s[j] = t;\n        r = r * width + s[lowbits(t + u)];\n      }\n\n      me.i = i;\n      me.j = j;\n      return r;\n    }; // For robust unpredictability discard an initial batch of values.\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\n\n\n    me.g(width);\n  } //\n  // flatten()\n  // Converts an object tree to nested arrays of strings.\n  //\n\n  /** @param {Object=} result \n   * @param {string=} prop\n   * @param {string=} typ */\n\n\n  function flatten(obj, depth, result, prop, typ) {\n    result = [];\n    typ = typeof obj;\n\n    if (depth && typ == 'object') {\n      for (prop in obj) {\n        if (prop.indexOf('S') < 5) {\n          // Avoid FF3 bug (local/sessionStorage)\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n    }\n\n    return result.length ? result : obj + (typ != 'string' ? '\\0' : '');\n  } //\n  // mixkey()\n  // Mixes a string seed into a key that is an array of integers, and\n  // returns a shortened string seed that is equivalent to the result key.\n  //\n\n  /** @param {number=} smear \n   * @param {number=} j */\n\n\n  function mixkey(seed, key, smear, j) {\n    seed += ''; // Ensure the seed is a string\n\n    smear = 0;\n\n    for (j = 0; j < seed.length; j++) {\n      key[lowbits(j)] = lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));\n    }\n\n    seed = '';\n\n    for (j in key) {\n      seed += String.fromCharCode(key[j]);\n    }\n\n    return seed;\n  } //\n  // lowbits()\n  // A quick \"n mod width\" for width a power of 2.\n  //\n\n\n  function lowbits(n) {\n    return n & width - 1;\n  } //\n  // The following constants are related to IEEE 754 limits.\n  //\n\n\n  startdenom = math.pow(width, chunks);\n  significance = math.pow(2, significance);\n  overflow = significance * 2; //\n  // When seedrandom.js is loaded, we immediately mix a few bits\n  // from the built-in RNG into the entropy pool.  Because we do\n  // not want to intefere with determinstic PRNG state later,\n  // seedrandom will not call math.random on its own again after\n  // initialization.\n  //\n\n  mixkey(math.random(), pool); // End anonymous scope, and pass initial values.\n})([], // pool: entropy pool starts empty\nMath, // math: package containing random, pow, and seedrandom\n256, // width: each RC4 output is 0 <= x < 256\n6, // chunks: at least six RC4 outputs for each double\n52 // significance: there are 52 significant digits in a double\n); // This is not really a random number generator object, and two SeededRandom\n// objects will conflict with one another, but it's good enough for generating \n// the rsa key.\n\n\nfunction SeededRandom() {}\n\nfunction SRnextBytes(ba) {\n  var i;\n\n  for (i = 0; i < ba.length; i++) {\n    ba[i] = Math.floor(Math.random() * 256);\n  }\n}\n\nSeededRandom.prototype.nextBytes = SRnextBytes; // prng4.js - uses Arcfour as a PRNG\n\nfunction Arcfour() {\n  this.i = 0;\n  this.j = 0;\n  this.S = new Array();\n} // Initialize arcfour context from key, an array of ints, each from [0..255]\n\n\nfunction ARC4init(key) {\n  var i, j, t;\n\n  for (i = 0; i < 256; ++i) this.S[i] = i;\n\n  j = 0;\n\n  for (i = 0; i < 256; ++i) {\n    j = j + this.S[i] + key[i % key.length] & 255;\n    t = this.S[i];\n    this.S[i] = this.S[j];\n    this.S[j] = t;\n  }\n\n  this.i = 0;\n  this.j = 0;\n}\n\nfunction ARC4next() {\n  var t;\n  this.i = this.i + 1 & 255;\n  this.j = this.j + this.S[this.i] & 255;\n  t = this.S[this.i];\n  this.S[this.i] = this.S[this.j];\n  this.S[this.j] = t;\n  return this.S[t + this.S[this.i] & 255];\n}\n\nArcfour.prototype.init = ARC4init;\nArcfour.prototype.next = ARC4next; // Plug in your RNG constructor here\n\nfunction prng_newstate() {\n  return new Arcfour();\n} // Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\n\n\nvar rng_psize = 256; // Random number generator - requires a PRNG backend, e.g. prng4.js\n// For best results, put code like\n// <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>\n// in your main HTML document.\n\nvar rng_state;\nvar rng_pool;\nvar rng_pptr; // Mix in a 32-bit integer into the pool\n\nfunction rng_seed_int(x) {\n  rng_pool[rng_pptr++] ^= x & 255;\n  rng_pool[rng_pptr++] ^= x >> 8 & 255;\n  rng_pool[rng_pptr++] ^= x >> 16 & 255;\n  rng_pool[rng_pptr++] ^= x >> 24 & 255;\n  if (rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n} // Mix in the current time (w/milliseconds) into the pool\n\n\nfunction rng_seed_time() {\n  rng_seed_int(new Date().getTime());\n} // Initialize the pool with junk if needed.\n\n\nif (rng_pool == null) {\n  rng_pool = new Array();\n  rng_pptr = 0;\n  var t;\n\n  while (rng_pptr < rng_psize) {\n    // extract some randomness from Math.random()\n    t = Math.floor(65536 * Math.random());\n    rng_pool[rng_pptr++] = t >>> 8;\n    rng_pool[rng_pptr++] = t & 255;\n  }\n\n  rng_pptr = 0;\n  rng_seed_time(); //rng_seed_int(window.screenX);\n  //rng_seed_int(window.screenY);\n}\n\nfunction rng_get_byte() {\n  if (rng_state == null) {\n    rng_seed_time();\n    rng_state = prng_newstate();\n    rng_state.init(rng_pool);\n\n    for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) rng_pool[rng_pptr] = 0;\n\n    rng_pptr = 0; //rng_pool = null;\n  } // TODO: allow reseeding after first request\n\n\n  return rng_state.next();\n}\n\nfunction rng_get_bytes(ba) {\n  var i;\n\n  for (i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n}\n\nfunction SecureRandom() {}\n\nSecureRandom.prototype.nextBytes = rng_get_bytes;\n/**\n*\n*  Secure Hash Algorithm (SHA256)\n*  http://www.webtoolkit.info/\n*\n*  Original code by Angel Marin, Paul Johnston.\n*\n**/\n\nvar crypto = require('crypto');\n\nfunction SHA256(s) {\n  return crypto.createHash('sha256').update(s, 'utf8').digest('hex');\n}\n\nvar sha256 = {};\n\nsha256.hex = function (s) {\n  return SHA256(s);\n};\n/**\n*\n*  Secure Hash Algorithm (SHA1)\n*  http://www.webtoolkit.info/\n*\n**/\n\n\nfunction SHA1(msg) {\n  return crypto.createHash('sha1').update(msg, 'utf8').digest('hex');\n}\n\nvar sha1 = {};\n\nsha1.hex = function (s) {\n  return SHA1(s);\n};\n/**\n*\n*  MD5 (Message-Digest Algorithm)\n*  http://www.webtoolkit.info/\n*\n**/\n\n\nvar MD5 = function (string) {\n  return crypto.createHash('md5').update(string, 'utf8').digest('hex');\n}; // Depends on jsbn.js and rng.js\n// Version 1.1: support utf-8 encoding in pkcs1pad2\n// convert a (hex) string to a bignum object\n\n\nfunction parseBigInt(str, r) {\n  return new BigInteger(str, r);\n}\n\nfunction linebrk(s, n) {\n  var ret = \"\";\n  var i = 0;\n\n  while (i + n < s.length) {\n    ret += s.substring(i, i + n) + \"\\n\";\n    i += n;\n  }\n\n  return ret + s.substring(i, s.length);\n}\n\nfunction byte2Hex(b) {\n  if (b < 0x10) return \"0\" + b.toString(16);else return b.toString(16);\n} // PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint\n\n\nfunction pkcs1pad2(s, n) {\n  if (n < s.length + 11) {\n    // TODO: fix for utf-8\n    //alert(\"Message too long for RSA (n=\" + n + \", l=\" + s.length + \")\");\n    //return null;\n    throw \"Message too long for RSA (n=\" + n + \", l=\" + s.length + \")\";\n  }\n\n  var ba = new Array();\n  var i = s.length - 1;\n\n  while (i >= 0 && n > 0) {\n    var c = s.charCodeAt(i--);\n\n    if (c < 128) {\n      // encode using utf-8\n      ba[--n] = c;\n    } else if (c > 127 && c < 2048) {\n      ba[--n] = c & 63 | 128;\n      ba[--n] = c >> 6 | 192;\n    } else {\n      ba[--n] = c & 63 | 128;\n      ba[--n] = c >> 6 & 63 | 128;\n      ba[--n] = c >> 12 | 224;\n    }\n  }\n\n  ba[--n] = 0;\n  var rng = new SecureRandom();\n  var x = new Array();\n\n  while (n > 2) {\n    // random non-zero pad\n    x[0] = 0;\n\n    while (x[0] == 0) rng.nextBytes(x);\n\n    ba[--n] = x[0];\n  }\n\n  ba[--n] = 2;\n  ba[--n] = 0;\n  return new BigInteger(ba);\n} // \"empty\" RSA key constructor\n\n\nfunction RSAKey() {\n  this.n = null;\n  this.e = 0;\n  this.d = null;\n  this.p = null;\n  this.q = null;\n  this.dmp1 = null;\n  this.dmq1 = null;\n  this.coeff = null;\n} // Set the public key fields N and e from hex strings\n\n\nfunction RSASetPublic(N, E) {\n  if (N != null && E != null && N.length > 0 && E.length > 0) {\n    this.n = parseBigInt(N, 16);\n    this.e = parseInt(E, 16);\n  } else alert(\"Invalid RSA public key\");\n} // Perform raw public operation on \"x\": return x^e (mod n)\n\n\nfunction RSADoPublic(x) {\n  return x.modPowInt(this.e, this.n);\n} // Return the PKCS#1 RSA encryption of \"text\" as an even-length hex string\n\n\nfunction RSAEncrypt(text) {\n  var m = pkcs1pad2(text, this.n.bitLength() + 7 >> 3);\n  if (m == null) return null;\n  var c = this.doPublic(m);\n  if (c == null) return null;\n  var h = c.toString(16);\n  if ((h.length & 1) == 0) return h;else return \"0\" + h;\n}\n\nfunction RSAToJSON() {\n  return {\n    coeff: this.coeff.toString(16),\n    d: this.d.toString(16),\n    dmp1: this.dmp1.toString(16),\n    dmq1: this.dmq1.toString(16),\n    e: this.e.toString(16),\n    n: this.n.toString(16),\n    p: this.p.toString(16),\n    q: this.q.toString(16)\n  };\n}\n\nfunction RSAParse(rsaString) {\n  var json = JSON.parse(rsaString);\n  var rsa = new RSAKey();\n  rsa.setPrivateEx(json.n, json.e, json.d, json.p, json.q, json.dmp1, json.dmq1, json.coeff);\n  return rsa;\n} // Return the PKCS#1 RSA encryption of \"text\" as a Base64-encoded string\n//function RSAEncryptB64(text) {\n//  var h = this.encrypt(text);\n//  if(h) return hex2b64(h); else return null;\n//}\n// protected\n\n\nRSAKey.prototype.doPublic = RSADoPublic; // public\n\nRSAKey.prototype.setPublic = RSASetPublic;\nRSAKey.prototype.encrypt = RSAEncrypt;\nRSAKey.prototype.toJSON = RSAToJSON;\nRSAKey.parse = RSAParse; // Version 1.1: support utf-8 decoding in pkcs1unpad2\n// Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext\n\nfunction pkcs1unpad2(d, n) {\n  var b = d.toByteArray();\n  var i = 0;\n\n  while (i < b.length && b[i] == 0) ++i;\n\n  if (b.length - i != n - 1 || b[i] != 2) return null;\n  ++i;\n\n  while (b[i] != 0) if (++i >= b.length) return null;\n\n  var ret = \"\";\n\n  while (++i < b.length) {\n    var c = b[i] & 255;\n\n    if (c < 128) {\n      // utf-8 decode\n      ret += String.fromCharCode(c);\n    } else if (c > 191 && c < 224) {\n      ret += String.fromCharCode((c & 31) << 6 | b[i + 1] & 63);\n      ++i;\n    } else {\n      ret += String.fromCharCode((c & 15) << 12 | (b[i + 1] & 63) << 6 | b[i + 2] & 63);\n      i += 2;\n    }\n  }\n\n  return ret;\n} // Set the private key fields N, e, and d from hex strings\n\n\nfunction RSASetPrivate(N, E, D) {\n  if (N != null && E != null && N.length > 0 && E.length > 0) {\n    this.n = parseBigInt(N, 16);\n    this.e = parseInt(E, 16);\n    this.d = parseBigInt(D, 16);\n  } else alert(\"Invalid RSA private key\");\n} // Set the private key fields N, e, d and CRT params from hex strings\n\n\nfunction RSASetPrivateEx(N, E, D, P, Q, DP, DQ, C) {\n  if (N != null && E != null && N.length > 0 && E.length > 0) {\n    this.n = parseBigInt(N, 16);\n    this.e = parseInt(E, 16);\n    this.d = parseBigInt(D, 16);\n    this.p = parseBigInt(P, 16);\n    this.q = parseBigInt(Q, 16);\n    this.dmp1 = parseBigInt(DP, 16);\n    this.dmq1 = parseBigInt(DQ, 16);\n    this.coeff = parseBigInt(C, 16);\n  } else alert(\"Invalid RSA private key\");\n} // Generate a new random private key B bits long, using public expt E\n\n\nfunction RSAGenerate(B, E) {\n  var rng = new SeededRandom();\n  var qs = B >> 1;\n  this.e = parseInt(E, 16);\n  var ee = new BigInteger(E, 16);\n\n  for (;;) {\n    for (;;) {\n      this.p = new BigInteger(B - qs, 1, rng);\n      if (this.p.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) break;\n    }\n\n    for (;;) {\n      this.q = new BigInteger(qs, 1, rng);\n      if (this.q.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) break;\n    }\n\n    if (this.p.compareTo(this.q) <= 0) {\n      var t = this.p;\n      this.p = this.q;\n      this.q = t;\n    }\n\n    var p1 = this.p.subtract(BigInteger.ONE);\n    var q1 = this.q.subtract(BigInteger.ONE);\n    var phi = p1.multiply(q1);\n\n    if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {\n      this.n = this.p.multiply(this.q);\n      this.d = ee.modInverse(phi);\n      this.dmp1 = this.d.mod(p1);\n      this.dmq1 = this.d.mod(q1);\n      this.coeff = this.q.modInverse(this.p);\n      break;\n    }\n  }\n} // Perform raw private operation on \"x\": return x^d (mod n)\n\n\nfunction RSADoPrivate(x) {\n  if (this.p == null || this.q == null) return x.modPow(this.d, this.n); // TODO: re-calculate any missing CRT params\n\n  var xp = x.mod(this.p).modPow(this.dmp1, this.p);\n  var xq = x.mod(this.q).modPow(this.dmq1, this.q);\n\n  while (xp.compareTo(xq) < 0) xp = xp.add(this.p);\n\n  return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);\n} // Return the PKCS#1 RSA decryption of \"ctext\".\n// \"ctext\" is an even-length hex string and the output is a plain string.\n\n\nfunction RSADecrypt(ctext) {\n  var c = parseBigInt(ctext, 16);\n  var m = this.doPrivate(c);\n  if (m == null) return null;\n  return pkcs1unpad2(m, this.n.bitLength() + 7 >> 3);\n} // protected\n\n\nRSAKey.prototype.doPrivate = RSADoPrivate; // public\n\nRSAKey.prototype.setPrivate = RSASetPrivate;\nRSAKey.prototype.setPrivateEx = RSASetPrivateEx;\nRSAKey.prototype.generate = RSAGenerate;\nRSAKey.prototype.decrypt = RSADecrypt; //\n// rsa-sign.js - adding signing functions to RSAKey class.\n//\n//\n// version: 1.0 (2010-Jun-03)\n//\n// Copyright (c) 2010 Kenji Urushima (kenji.urushima@gmail.com)\n//\n// This software is licensed under the terms of the MIT License.\n// http://www.opensource.org/licenses/mit-license.php\n//\n// The above copyright and license notice shall be \n// included in all copies or substantial portions of the Software.\n//\n// Depends on:\n//   function sha1.hex(s) of sha1.js\n//   jsbn.js\n//   jsbn2.js\n//   rsa.js\n//   rsa2.js\n//\n// keysize / pmstrlen\n//  512 /  128\n// 1024 /  256\n// 2048 /  512\n// 4096 / 1024\n// As for _RSASGIN_DIHEAD values for each hash algorithm, see PKCS#1 v2.1 spec (p38).\n\nvar _RSASIGN_DIHEAD = [];\n_RSASIGN_DIHEAD['sha1'] = \"3021300906052b0e03021a05000414\";\n_RSASIGN_DIHEAD['sha256'] = \"3031300d060960864801650304020105000420\"; //_RSASIGN_DIHEAD['md2'] = \"3020300c06082a864886f70d020205000410\";\n//_RSASIGN_DIHEAD['md5'] = \"3020300c06082a864886f70d020505000410\";\n//_RSASIGN_DIHEAD['sha384'] = \"3041300d060960864801650304020205000430\";\n//_RSASIGN_DIHEAD['sha512'] = \"3051300d060960864801650304020305000440\";\n\nvar _RSASIGN_HASHHEXFUNC = [];\n_RSASIGN_HASHHEXFUNC['sha1'] = sha1.hex;\n_RSASIGN_HASHHEXFUNC['sha256'] = sha256.hex; // ========================================================================\n// Signature Generation\n// ========================================================================\n\nfunction _rsasign_getHexPaddedDigestInfoForString(s, keySize, hashAlg) {\n  var pmStrLen = keySize / 4;\n  var hashFunc = _RSASIGN_HASHHEXFUNC[hashAlg];\n  var sHashHex = hashFunc(s);\n  var sHead = \"0001\";\n  var sTail = \"00\" + _RSASIGN_DIHEAD[hashAlg] + sHashHex;\n  var sMid = \"\";\n  var fLen = pmStrLen - sHead.length - sTail.length;\n\n  for (var i = 0; i < fLen; i += 2) {\n    sMid += \"ff\";\n  }\n\n  sPaddedMessageHex = sHead + sMid + sTail;\n  return sPaddedMessageHex;\n}\n\nfunction _rsasign_signString(s, hashAlg) {\n  var hPM = _rsasign_getHexPaddedDigestInfoForString(s, this.n.bitLength(), hashAlg);\n\n  var biPaddedMessage = parseBigInt(hPM, 16);\n  var biSign = this.doPrivate(biPaddedMessage);\n  var hexSign = biSign.toString(16);\n  return hexSign;\n}\n\nfunction _rsasign_signStringWithSHA1(s) {\n  var hPM = _rsasign_getHexPaddedDigestInfoForString(s, this.n.bitLength(), 'sha1');\n\n  var biPaddedMessage = parseBigInt(hPM, 16);\n  var biSign = this.doPrivate(biPaddedMessage);\n  var hexSign = biSign.toString(16);\n  return hexSign;\n}\n\nfunction _rsasign_signStringWithSHA256(s) {\n  var hPM = _rsasign_getHexPaddedDigestInfoForString(s, this.n.bitLength(), 'sha256');\n\n  var biPaddedMessage = parseBigInt(hPM, 16);\n  var biSign = this.doPrivate(biPaddedMessage);\n  var hexSign = biSign.toString(16);\n  return hexSign;\n} // ========================================================================\n// Signature Verification\n// ========================================================================\n\n\nfunction _rsasign_getDecryptSignatureBI(biSig, hN, hE) {\n  var rsa = new RSAKey();\n  rsa.setPublic(hN, hE);\n  var biDecryptedSig = rsa.doPublic(biSig);\n  return biDecryptedSig;\n}\n\nfunction _rsasign_getHexDigestInfoFromSig(biSig, hN, hE) {\n  var biDecryptedSig = _rsasign_getDecryptSignatureBI(biSig, hN, hE);\n\n  var hDigestInfo = biDecryptedSig.toString(16).replace(/^1f+00/, '');\n  return hDigestInfo;\n}\n\nfunction _rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo) {\n  for (var algName in _RSASIGN_DIHEAD) {\n    var head = _RSASIGN_DIHEAD[algName];\n    var len = head.length;\n\n    if (hDigestInfo.substring(0, len) == head) {\n      var a = [algName, hDigestInfo.substring(len)];\n      return a;\n    }\n  }\n\n  return [];\n}\n\nfunction _rsasign_verifySignatureWithArgs(sMsg, biSig, hN, hE) {\n  var hDigestInfo = _rsasign_getHexDigestInfoFromSig(biSig, hN, hE);\n\n  var digestInfoAry = _rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo);\n\n  if (digestInfoAry.length == 0) return false;\n  var algName = digestInfoAry[0];\n  var diHashValue = digestInfoAry[1];\n  var ff = _RSASIGN_HASHHEXFUNC[algName];\n  var msgHashValue = ff(sMsg);\n  return diHashValue == msgHashValue;\n}\n\nfunction _rsasign_verifyHexSignatureForMessage(hSig, sMsg) {\n  var biSig = parseBigInt(hSig, 16);\n\n  var result = _rsasign_verifySignatureWithArgs(sMsg, biSig, this.n.toString(16), this.e.toString(16));\n\n  return result;\n}\n\nfunction _rsasign_verifyString(sMsg, hSig) {\n  hSig = hSig.replace(/[ \\n]+/g, \"\");\n  var biSig = parseBigInt(hSig, 16);\n  var biDecryptedSig = this.doPublic(biSig);\n  var hDigestInfo = biDecryptedSig.toString(16).replace(/^1f+00/, '');\n\n  var digestInfoAry = _rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo);\n\n  if (digestInfoAry.length == 0) return false;\n  var algName = digestInfoAry[0];\n  var diHashValue = digestInfoAry[1];\n  var ff = _RSASIGN_HASHHEXFUNC[algName];\n  var msgHashValue = ff(sMsg);\n  return diHashValue == msgHashValue;\n}\n\nRSAKey.prototype.signString = _rsasign_signString;\nRSAKey.prototype.signStringWithSHA1 = _rsasign_signStringWithSHA1;\nRSAKey.prototype.signStringWithSHA256 = _rsasign_signStringWithSHA256;\nRSAKey.prototype.verifyString = _rsasign_verifyString;\nRSAKey.prototype.verifyHexSignatureForMessage = _rsasign_verifyHexSignatureForMessage;\n/*\n *  jsaes version 0.1  -  Copyright 2006 B. Poettering\n *\n *  This program is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU General Public License as\n *  published by the Free Software Foundation; either version 2 of the\n *  License, or (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n *  02111-1307 USA\n */\n// later modifications by wwwtyro@github\n\nvar aes = function () {\n  var my = {};\n  my.Sbox = new Array(99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22);\n  my.ShiftRowTab = new Array(0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12, 1, 6, 11);\n\n  my.Init = function () {\n    my.Sbox_Inv = new Array(256);\n\n    for (var i = 0; i < 256; i++) my.Sbox_Inv[my.Sbox[i]] = i;\n\n    my.ShiftRowTab_Inv = new Array(16);\n\n    for (var i = 0; i < 16; i++) my.ShiftRowTab_Inv[my.ShiftRowTab[i]] = i;\n\n    my.xtime = new Array(256);\n\n    for (var i = 0; i < 128; i++) {\n      my.xtime[i] = i << 1;\n      my.xtime[128 + i] = i << 1 ^ 0x1b;\n    }\n  };\n\n  my.Done = function () {\n    delete my.Sbox_Inv;\n    delete my.ShiftRowTab_Inv;\n    delete my.xtime;\n  };\n\n  my.ExpandKey = function (key) {\n    var kl = key.length,\n        ks,\n        Rcon = 1;\n\n    switch (kl) {\n      case 16:\n        ks = 16 * (10 + 1);\n        break;\n\n      case 24:\n        ks = 16 * (12 + 1);\n        break;\n\n      case 32:\n        ks = 16 * (14 + 1);\n        break;\n\n      default:\n        alert(\"my.ExpandKey: Only key lengths of 16, 24 or 32 bytes allowed!\");\n    }\n\n    for (var i = kl; i < ks; i += 4) {\n      var temp = key.slice(i - 4, i);\n\n      if (i % kl == 0) {\n        temp = new Array(my.Sbox[temp[1]] ^ Rcon, my.Sbox[temp[2]], my.Sbox[temp[3]], my.Sbox[temp[0]]);\n        if ((Rcon <<= 1) >= 256) Rcon ^= 0x11b;\n      } else if (kl > 24 && i % kl == 16) temp = new Array(my.Sbox[temp[0]], my.Sbox[temp[1]], my.Sbox[temp[2]], my.Sbox[temp[3]]);\n\n      for (var j = 0; j < 4; j++) key[i + j] = key[i + j - kl] ^ temp[j];\n    }\n  };\n\n  my.Encrypt = function (block, key) {\n    var l = key.length;\n    my.AddRoundKey(block, key.slice(0, 16));\n\n    for (var i = 16; i < l - 16; i += 16) {\n      my.SubBytes(block, my.Sbox);\n      my.ShiftRows(block, my.ShiftRowTab);\n      my.MixColumns(block);\n      my.AddRoundKey(block, key.slice(i, i + 16));\n    }\n\n    my.SubBytes(block, my.Sbox);\n    my.ShiftRows(block, my.ShiftRowTab);\n    my.AddRoundKey(block, key.slice(i, l));\n  };\n\n  my.Decrypt = function (block, key) {\n    var l = key.length;\n    my.AddRoundKey(block, key.slice(l - 16, l));\n    my.ShiftRows(block, my.ShiftRowTab_Inv);\n    my.SubBytes(block, my.Sbox_Inv);\n\n    for (var i = l - 32; i >= 16; i -= 16) {\n      my.AddRoundKey(block, key.slice(i, i + 16));\n      my.MixColumns_Inv(block);\n      my.ShiftRows(block, my.ShiftRowTab_Inv);\n      my.SubBytes(block, my.Sbox_Inv);\n    }\n\n    my.AddRoundKey(block, key.slice(0, 16));\n  };\n\n  my.SubBytes = function (state, sbox) {\n    for (var i = 0; i < 16; i++) state[i] = sbox[state[i]];\n  };\n\n  my.AddRoundKey = function (state, rkey) {\n    for (var i = 0; i < 16; i++) state[i] ^= rkey[i];\n  };\n\n  my.ShiftRows = function (state, shifttab) {\n    var h = new Array().concat(state);\n\n    for (var i = 0; i < 16; i++) state[i] = h[shifttab[i]];\n  };\n\n  my.MixColumns = function (state) {\n    for (var i = 0; i < 16; i += 4) {\n      var s0 = state[i + 0],\n          s1 = state[i + 1];\n      var s2 = state[i + 2],\n          s3 = state[i + 3];\n      var h = s0 ^ s1 ^ s2 ^ s3;\n      state[i + 0] ^= h ^ my.xtime[s0 ^ s1];\n      state[i + 1] ^= h ^ my.xtime[s1 ^ s2];\n      state[i + 2] ^= h ^ my.xtime[s2 ^ s3];\n      state[i + 3] ^= h ^ my.xtime[s3 ^ s0];\n    }\n  };\n\n  my.MixColumns_Inv = function (state) {\n    for (var i = 0; i < 16; i += 4) {\n      var s0 = state[i + 0],\n          s1 = state[i + 1];\n      var s2 = state[i + 2],\n          s3 = state[i + 3];\n      var h = s0 ^ s1 ^ s2 ^ s3;\n      var xh = my.xtime[h];\n      var h1 = my.xtime[my.xtime[xh ^ s0 ^ s2]] ^ h;\n      var h2 = my.xtime[my.xtime[xh ^ s1 ^ s3]] ^ h;\n      state[i + 0] ^= h1 ^ my.xtime[s0 ^ s1];\n      state[i + 1] ^= h2 ^ my.xtime[s1 ^ s2];\n      state[i + 2] ^= h1 ^ my.xtime[s2 ^ s3];\n      state[i + 3] ^= h2 ^ my.xtime[s3 ^ s0];\n    }\n  };\n\n  return my;\n}();\n\nvar cryptico = module.exports = function () {\n  var my = {};\n  aes.Init();\n  var base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n  my.b256to64 = function (t) {\n    var a, c, n;\n    var r = '',\n        l = 0,\n        s = 0;\n    var tl = t.length;\n\n    for (n = 0; n < tl; n++) {\n      c = t.charCodeAt(n);\n\n      if (s == 0) {\n        r += base64Chars.charAt(c >> 2 & 63);\n        a = (c & 3) << 4;\n      } else if (s == 1) {\n        r += base64Chars.charAt(a | c >> 4 & 15);\n        a = (c & 15) << 2;\n      } else if (s == 2) {\n        r += base64Chars.charAt(a | c >> 6 & 3);\n        l += 1;\n        r += base64Chars.charAt(c & 63);\n      }\n\n      l += 1;\n      s += 1;\n      if (s == 3) s = 0;\n    }\n\n    if (s > 0) {\n      r += base64Chars.charAt(a);\n      l += 1;\n      r += '=';\n      l += 1;\n    }\n\n    if (s == 1) {\n      r += '=';\n    }\n\n    return r;\n  };\n\n  my.b64to256 = function (t) {\n    var c, n;\n    var r = '',\n        s = 0,\n        a = 0;\n    var tl = t.length;\n\n    for (n = 0; n < tl; n++) {\n      c = base64Chars.indexOf(t.charAt(n));\n\n      if (c >= 0) {\n        if (s) r += String.fromCharCode(a | c >> 6 - s & 255);\n        s = s + 2 & 7;\n        a = c << s & 255;\n      }\n    }\n\n    return r;\n  };\n\n  my.b16to64 = function (h) {\n    var i;\n    var c;\n    var ret = \"\";\n\n    if (h.length % 2 == 1) {\n      h = \"0\" + h;\n    }\n\n    for (i = 0; i + 3 <= h.length; i += 3) {\n      c = parseInt(h.substring(i, i + 3), 16);\n      ret += base64Chars.charAt(c >> 6) + base64Chars.charAt(c & 63);\n    }\n\n    if (i + 1 == h.length) {\n      c = parseInt(h.substring(i, i + 1), 16);\n      ret += base64Chars.charAt(c << 2);\n    } else if (i + 2 == h.length) {\n      c = parseInt(h.substring(i, i + 2), 16);\n      ret += base64Chars.charAt(c >> 2) + base64Chars.charAt((c & 3) << 4);\n    }\n\n    while ((ret.length & 3) > 0) ret += \"=\";\n\n    return ret;\n  };\n\n  my.b64to16 = function (s) {\n    var ret = \"\";\n    var i;\n    var k = 0;\n    var slop;\n\n    for (i = 0; i < s.length; ++i) {\n      if (s.charAt(i) == \"=\") break;\n      v = base64Chars.indexOf(s.charAt(i));\n      if (v < 0) continue;\n\n      if (k == 0) {\n        ret += int2char(v >> 2);\n        slop = v & 3;\n        k = 1;\n      } else if (k == 1) {\n        ret += int2char(slop << 2 | v >> 4);\n        slop = v & 0xf;\n        k = 2;\n      } else if (k == 2) {\n        ret += int2char(slop);\n        ret += int2char(v >> 2);\n        slop = v & 3;\n        k = 3;\n      } else {\n        ret += int2char(slop << 2 | v >> 4);\n        ret += int2char(v & 0xf);\n        k = 0;\n      }\n    }\n\n    if (k == 1) ret += int2char(slop << 2);\n    return ret;\n  }; // Converts a string to a byte array.\n\n\n  my.string2bytes = function (string) {\n    var bytes = new Array();\n\n    for (var i = 0; i < string.length; i++) {\n      bytes.push(string.charCodeAt(i));\n    }\n\n    return bytes;\n  }; // Converts a byte array to a string.\n\n\n  my.bytes2string = function (bytes) {\n    var string = \"\";\n\n    for (var i = 0; i < bytes.length; i++) {\n      string += String.fromCharCode(bytes[i]);\n    }\n\n    return string;\n  }; // Returns a XOR b, where a and b are 16-byte byte arrays.\n\n\n  my.blockXOR = function (a, b) {\n    var xor = new Array(16);\n\n    for (var i = 0; i < 16; i++) {\n      xor[i] = a[i] ^ b[i];\n    }\n\n    return xor;\n  }; // Returns a 16-byte initialization vector.\n\n\n  my.blockIV = function () {\n    var r = new SecureRandom();\n    var IV = new Array(16);\n    r.nextBytes(IV);\n    return IV;\n  }; // Returns a copy of bytes with zeros appended to the end\n  // so that the (length of bytes) % 16 == 0.\n\n\n  my.pad16 = function (bytes) {\n    var newBytes = bytes.slice(0);\n    var padding = (16 - bytes.length % 16) % 16;\n\n    for (i = bytes.length; i < bytes.length + padding; i++) {\n      newBytes.push(0);\n    }\n\n    return newBytes;\n  }; // Removes trailing zeros from a byte array.\n\n\n  my.depad = function (bytes) {\n    var newBytes = bytes.slice(0);\n\n    while (newBytes[newBytes.length - 1] == 0) {\n      newBytes = newBytes.slice(0, newBytes.length - 1);\n    }\n\n    return newBytes;\n  }; // AES CBC Encryption.\n\n\n  my.encryptAESCBC = function (plaintext, key) {\n    var exkey = key.slice(0);\n    aes.ExpandKey(exkey);\n    var blocks = my.string2bytes(plaintext);\n    blocks = my.pad16(blocks);\n    var encryptedBlocks = my.blockIV();\n\n    for (var i = 0; i < blocks.length / 16; i++) {\n      var tempBlock = blocks.slice(i * 16, i * 16 + 16);\n      var prevBlock = encryptedBlocks.slice(i * 16, i * 16 + 16);\n      tempBlock = my.blockXOR(prevBlock, tempBlock);\n      aes.Encrypt(tempBlock, exkey);\n      encryptedBlocks = encryptedBlocks.concat(tempBlock);\n    }\n\n    var ciphertext = my.bytes2string(encryptedBlocks);\n    return my.b256to64(ciphertext);\n  }; // AES CBC Decryption.\n\n\n  my.decryptAESCBC = function (encryptedText, key) {\n    var exkey = key.slice(0);\n    aes.ExpandKey(exkey);\n    var encryptedText = my.b64to256(encryptedText);\n    var encryptedBlocks = my.string2bytes(encryptedText);\n    var decryptedBlocks = new Array();\n\n    for (var i = 1; i < encryptedBlocks.length / 16; i++) {\n      var tempBlock = encryptedBlocks.slice(i * 16, i * 16 + 16);\n      var prevBlock = encryptedBlocks.slice((i - 1) * 16, (i - 1) * 16 + 16);\n      aes.Decrypt(tempBlock, exkey);\n      tempBlock = my.blockXOR(prevBlock, tempBlock);\n      decryptedBlocks = decryptedBlocks.concat(tempBlock);\n    }\n\n    decryptedBlocks = my.depad(decryptedBlocks);\n    return my.bytes2string(decryptedBlocks);\n  }; // Wraps a string to 60 characters.\n\n\n  my.wrap60 = function (string) {\n    var outstr = \"\";\n\n    for (var i = 0; i < string.length; i++) {\n      if (i % 60 == 0 && i != 0) outstr += \"\\n\";\n      outstr += string[i];\n    }\n\n    return outstr;\n  }; // Generate a random key for the AES-encrypted message.\n\n\n  my.generateAESKey = function () {\n    var key = new Array(32);\n    var r = new SecureRandom();\n    r.nextBytes(key);\n    return key;\n  }; // Generates an RSA key from a passphrase.\n\n\n  my.generateRSAKey = function (passphrase, bitlength) {\n    Math.seedrandom(sha256.hex(passphrase));\n    var rsa = new RSAKey();\n    rsa.generate(bitlength, \"03\");\n    return rsa;\n  }; // Returns the ascii-armored version of the public key.\n\n\n  my.publicKeyString = function (rsakey) {\n    pubkey = my.b16to64(rsakey.n.toString(16));\n    return pubkey;\n  }; // Returns an MD5 sum of a publicKeyString for easier identification.\n\n\n  my.publicKeyID = function (publicKeyString) {\n    return MD5(publicKeyString);\n  };\n\n  my.publicKeyFromString = function (string) {\n    var N = my.b64to16(string.split(\"|\")[0]);\n    var E = \"03\";\n    var rsa = new RSAKey();\n    rsa.setPublic(N, E);\n    return rsa;\n  };\n\n  my.encrypt = function (plaintext, publickeystring, signingkey) {\n    var cipherblock = \"\";\n    var aeskey = my.generateAESKey();\n\n    try {\n      var publickey = my.publicKeyFromString(publickeystring);\n      cipherblock += my.b16to64(publickey.encrypt(my.bytes2string(aeskey))) + \"?\";\n    } catch (err) {\n      return {\n        status: \"Invalid public key\"\n      };\n    }\n\n    if (signingkey) {\n      signString = cryptico.b16to64(signingkey.signString(plaintext, \"sha256\"));\n      plaintext += \"::52cee64bb3a38f6403386519a39ac91c::\";\n      plaintext += cryptico.publicKeyString(signingkey);\n      plaintext += \"::52cee64bb3a38f6403386519a39ac91c::\";\n      plaintext += signString;\n    }\n\n    cipherblock += my.encryptAESCBC(plaintext, aeskey);\n    return {\n      status: \"success\",\n      cipher: cipherblock\n    };\n  };\n\n  my.decrypt = function (ciphertext, key) {\n    var cipherblock = ciphertext.split(\"?\");\n    var aeskey = key.decrypt(my.b64to16(cipherblock[0]));\n\n    if (aeskey == null) {\n      return {\n        status: \"failure\"\n      };\n    }\n\n    aeskey = my.string2bytes(aeskey);\n    var plaintext = my.decryptAESCBC(cipherblock[1], aeskey).split(\"::52cee64bb3a38f6403386519a39ac91c::\");\n\n    if (plaintext.length == 3) {\n      var publickey = my.publicKeyFromString(plaintext[1]);\n      var signature = my.b64to16(plaintext[2]);\n\n      if (publickey.verifyString(plaintext[0], signature)) {\n        return {\n          status: \"success\",\n          plaintext: plaintext[0],\n          signature: \"verified\",\n          publicKeyString: my.publicKeyString(publickey)\n        };\n      } else {\n        return {\n          status: \"success\",\n          plaintext: plaintext[0],\n          signature: \"forged\",\n          publicKeyString: my.publicKeyString(publickey)\n        };\n      }\n    } else {\n      return {\n        status: \"success\",\n        plaintext: plaintext[0],\n        signature: \"unsigned\"\n      };\n    }\n  };\n\n  return my;\n}();\n\nmodule.exports.RSAKey = RSAKey;","map":{"version":3,"sources":["/home/paul/Dokumente/Code/ConsensusLessBlockChain/consensusless-blockchain-wallet/node_modules/cryptico/lib/cryptico.js"],"names":["dbits","BigInteger","a","b","c","fromNumber","fromString","nbi","am","i","x","w","j","n","xl","xh","l","h","m","prototype","DB","DM","DV","BI_FP","FV","Math","pow","F1","F2","BI_RM","BI_RC","Array","rr","vv","charCodeAt","int2char","charAt","intAt","s","bnpCopyTo","r","t","bnpFromInt","nbv","fromInt","bnpFromString","k","fromRadix","length","mi","sh","clamp","ZERO","subTo","bnpClamp","bnToString","negate","toString","toRadix","km","d","p","bnNegate","bnAbs","bnCompareTo","nbits","bnBitLength","bnpDLShiftTo","bnpDRShiftTo","max","bnpLShiftTo","bs","cbs","bm","ds","floor","bnpRShiftTo","bnpSubTo","min","bnpMultiplyTo","abs","y","bnpSquareTo","bnpDivRemTo","q","pm","pt","copyTo","ts","ms","nsh","lShiftTo","ys","y0","yt","d1","d2","e","dlShiftTo","compareTo","ONE","qd","drShiftTo","rShiftTo","bnMod","divRemTo","Classic","cConvert","mod","cRevert","cReduce","cMulTo","multiplyTo","reduce","cSqrTo","squareTo","convert","revert","mulTo","sqrTo","bnpInvDigit","Montgomery","mp","invDigit","mpl","mph","um","mt2","montConvert","montRevert","montReduce","u0","montSqrTo","montMulTo","bnpIsEven","bnpExp","z","r2","g","bnModPowInt","isEven","exp","bitLength","modPowInt","bnClone","bnIntValue","bnByteValue","bnShortValue","bnpChunkSize","LN2","log","bnSigNum","bnpToRadix","signum","cs","chunkSize","intValue","substr","bnpFromRadix","dMultiply","dAddOffset","bnpFromNumber","testBit","bitwiseTo","shiftLeft","op_or","isProbablePrime","nextBytes","bnToByteArray","bnEquals","bnMin","bnMax","bnpBitwiseTo","op","f","op_and","bnAnd","bnOr","op_xor","bnXor","op_andnot","bnAndNot","bnNot","bnShiftLeft","bnShiftRight","lbit","bnGetLowestSetBit","cbit","bnBitCount","bnTestBit","bnpChangeBit","bnSetBit","changeBit","bnClearBit","bnFlipBit","bnpAddTo","bnAdd","addTo","bnSubtract","bnMultiply","bnSquare","bnDivide","bnRemainder","bnDivideAndRemainder","bnpDMultiply","bnpDAddOffset","NullExp","nNop","nMulTo","nSqrTo","bnPow","bnpMultiplyLowerTo","bnpMultiplyUpperTo","Barrett","q3","mu","divide","barrettConvert","barrettRevert","barrettReduce","multiplyUpperTo","multiplyLowerTo","barrettSqrTo","barrettMulTo","bnModPow","k1","g2","is1","bnGCD","clone","getLowestSetBit","bnpModInt","bnModInverse","ac","u","v","subtract","add","lowprimes","lplim","bnIsProbablePrime","modInt","millerRabin","bnpMillerRabin","n1","shiftRight","random","modPow","byteValue","shortValue","toByteArray","equals","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","multiply","remainder","divideAndRemainder","modInverse","gcd","square","pool","math","width","chunks","significance","overflow","startdenom","seedrandom","seed","use_entropy","key","arc4","mixkey","flatten","arguments","Date","getTime","ARC4","S","me","keylen","lowbits","getnext","count","obj","depth","result","prop","typ","indexOf","push","smear","String","fromCharCode","SeededRandom","SRnextBytes","ba","Arcfour","ARC4init","ARC4next","init","next","prng_newstate","rng_psize","rng_state","rng_pool","rng_pptr","rng_seed_int","rng_seed_time","rng_get_byte","rng_get_bytes","SecureRandom","crypto","require","SHA256","createHash","update","digest","sha256","hex","SHA1","msg","sha1","MD5","string","parseBigInt","str","linebrk","ret","substring","byte2Hex","pkcs1pad2","rng","RSAKey","dmp1","dmq1","coeff","RSASetPublic","N","E","parseInt","alert","RSADoPublic","RSAEncrypt","text","doPublic","RSAToJSON","RSAParse","rsaString","json","JSON","parse","rsa","setPrivateEx","setPublic","encrypt","toJSON","pkcs1unpad2","RSASetPrivate","D","RSASetPrivateEx","P","Q","DP","DQ","C","RSAGenerate","B","qs","ee","p1","q1","phi","RSADoPrivate","xp","xq","RSADecrypt","ctext","doPrivate","setPrivate","generate","decrypt","_RSASIGN_DIHEAD","_RSASIGN_HASHHEXFUNC","_rsasign_getHexPaddedDigestInfoForString","keySize","hashAlg","pmStrLen","hashFunc","sHashHex","sHead","sTail","sMid","fLen","sPaddedMessageHex","_rsasign_signString","hPM","biPaddedMessage","biSign","hexSign","_rsasign_signStringWithSHA1","_rsasign_signStringWithSHA256","_rsasign_getDecryptSignatureBI","biSig","hN","hE","biDecryptedSig","_rsasign_getHexDigestInfoFromSig","hDigestInfo","replace","_rsasign_getAlgNameAndHashFromHexDisgestInfo","algName","head","len","_rsasign_verifySignatureWithArgs","sMsg","digestInfoAry","diHashValue","ff","msgHashValue","_rsasign_verifyHexSignatureForMessage","hSig","_rsasign_verifyString","signString","signStringWithSHA1","signStringWithSHA256","verifyString","verifyHexSignatureForMessage","aes","my","Sbox","ShiftRowTab","Init","Sbox_Inv","ShiftRowTab_Inv","xtime","Done","ExpandKey","kl","ks","Rcon","temp","slice","Encrypt","block","AddRoundKey","SubBytes","ShiftRows","MixColumns","Decrypt","MixColumns_Inv","state","sbox","rkey","shifttab","concat","s0","s1","s2","s3","h1","h2","cryptico","module","exports","base64Chars","b256to64","tl","b64to256","b16to64","b64to16","slop","string2bytes","bytes","bytes2string","blockXOR","blockIV","IV","pad16","newBytes","padding","depad","encryptAESCBC","plaintext","exkey","blocks","encryptedBlocks","tempBlock","prevBlock","ciphertext","decryptAESCBC","encryptedText","decryptedBlocks","wrap60","outstr","generateAESKey","generateRSAKey","passphrase","bitlength","publicKeyString","rsakey","pubkey","publicKeyID","publicKeyFromString","split","publickeystring","signingkey","cipherblock","aeskey","publickey","err","status","cipher","signature"],"mappings":"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AArB,GAAgClE,UAAhC;AACAhM,UAAU,CAACkB,SAAX,CAAqBiP,OAArB,GAA+BlE,SAA/B;AACAjM,UAAU,CAACkB,SAAX,CAAqB0N,GAArB,GAA2BzC,KAA3B;AACAnM,UAAU,CAACkB,SAAX,CAAqByN,QAArB,GAAgCtC,UAAhC;AACArM,UAAU,CAACkB,SAAX,CAAqBkP,QAArB,GAAgC9D,UAAhC;AACAtM,UAAU,CAACkB,SAAX,CAAqBqM,MAArB,GAA8Bf,QAA9B;AACAxM,UAAU,CAACkB,SAAX,CAAqBmP,SAArB,GAAiC5D,WAAjC;AACAzM,UAAU,CAACkB,SAAX,CAAqBoP,kBAArB,GAA0C5D,oBAA1C;AACA1M,UAAU,CAACkB,SAAX,CAAqBoO,MAArB,GAA8BvB,QAA9B;AACA/N,UAAU,CAACkB,SAAX,CAAqBqP,UAArB,GAAkChC,YAAlC;AACAvO,UAAU,CAACkB,SAAX,CAAqBO,GAArB,GAA2BwL,KAA3B;AACAjN,UAAU,CAACkB,SAAX,CAAqBsP,GAArB,GAA2BrC,KAA3B;AACAnO,UAAU,CAACkB,SAAX,CAAqBmJ,eAArB,GAAuC0E,iBAAvC,C,CAEA;;AACA/O,UAAU,CAACkB,SAAX,CAAqBuP,MAArB,GAA8BlE,QAA9B,C,CAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;;;AAMA,CAAC,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","sourcesContent":["// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n// Bits per digit\nvar dbits;\n\n// (public) Constructor\n\nfunction BigInteger(a, b, c) {\n    if (a != null) if (\"number\" == typeof a) this.fromNumber(a, b, c);\n    else if (b == null && \"string\" != typeof a) this.fromString(a, 256);\n    else this.fromString(a, b);\n}\n\n// return new, unset BigInteger\n\nfunction nbi() {\n    return new BigInteger(null);\n}\n\n// am avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n\nfunction am(i, x, w, j, c, n) {\n    var xl = x & 0x7fff,\n        xh = x >> 15;\n    while (--n >= 0) {\n        var l = this[i] & 0x7fff;\n        var h = this[i++] >> 15;\n        var m = xh * l + h * xl;\n        l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n        c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n        w[j++] = l & 0x3fffffff;\n    }\n    return c;\n}\n\nBigInteger.prototype.am = am;\ndbits = 30;\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1 << dbits) - 1);\nBigInteger.prototype.DV = (1 << dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr, vv;\nrr = \"0\".charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) {\n    return BI_RM.charAt(n);\n}\n\nfunction intAt(s, i) {\n    var c = BI_RC[s.charCodeAt(i)];\n    return (c == null) ? -1 : c;\n}\n\n// (protected) copy this to r\n\nfunction bnpCopyTo(r) {\n    for (var i = this.t - 1; i >= 0; --i) r[i] = this[i];\n    r.t = this.t;\n    r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\n\nfunction bnpFromInt(x) {\n    this.t = 1;\n    this.s = (x < 0) ? -1 : 0;\n    if (x > 0) this[0] = x;\n    else if (x < -1) this[0] = x + DV;\n    else this.t = 0;\n}\n\n// return bigint initialized to value\n\nfunction nbv(i) {\n    var r = nbi();\n    r.fromInt(i);\n    return r;\n}\n\n// (protected) set from string and radix\n\nfunction bnpFromString(s, b) {\n    var k;\n    if (b == 16) k = 4;\n    else if (b == 8) k = 3;\n    else if (b == 256) k = 8; // byte array\n    else if (b == 2) k = 1;\n    else if (b == 32) k = 5;\n    else if (b == 4) k = 2;\n    else {\n        this.fromRadix(s, b);\n        return;\n    }\n    this.t = 0;\n    this.s = 0;\n    var i = s.length,\n        mi = false,\n        sh = 0;\n    while (--i >= 0) {\n        var x = (k == 8) ? s[i] & 0xff : intAt(s, i);\n        if (x < 0) {\n            if (s.charAt(i) == \"-\") mi = true;\n            continue;\n        }\n        mi = false;\n        if (sh == 0) this[this.t++] = x;\n        else if (sh + k > this.DB) {\n            this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n            this[this.t++] = (x >> (this.DB - sh));\n        }\n        else this[this.t - 1] |= x << sh;\n        sh += k;\n        if (sh >= this.DB) sh -= this.DB;\n    }\n    if (k == 8 && (s[0] & 0x80) != 0) {\n        this.s = -1;\n        if (sh > 0) this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;\n    }\n    this.clamp();\n    if (mi) BigInteger.ZERO.subTo(this, this);\n}\n\n// (protected) clamp off excess high words\n\nfunction bnpClamp() {\n    var c = this.s & this.DM;\n    while (this.t > 0 && this[this.t - 1] == c)--this.t;\n}\n\n// (public) return string representation in given radix\n\nfunction bnToString(b) {\n    if (this.s < 0) return \"-\" + this.negate().toString(b);\n    var k;\n    if (b == 16) k = 4;\n    else if (b == 8) k = 3;\n    else if (b == 2) k = 1;\n    else if (b == 32) k = 5;\n    else if (b == 64) k = 6;\n    else if (b == 4) k = 2;\n    else return this.toRadix(b);\n    var km = (1 << k) - 1,\n        d, m = false,\n        r = \"\",\n        i = this.t;\n    var p = this.DB - (i * this.DB) % k;\n    if (i-- > 0) {\n        if (p < this.DB && (d = this[i] >> p) > 0) {\n            m = true;\n            r = int2char(d);\n        }\n        while (i >= 0) {\n            if (p < k) {\n                d = (this[i] & ((1 << p) - 1)) << (k - p);\n                d |= this[--i] >> (p += this.DB - k);\n            }\n            else {\n                d = (this[i] >> (p -= k)) & km;\n                if (p <= 0) {\n                    p += this.DB;\n                    --i;\n                }\n            }\n            if (d > 0) m = true;\n            if (m) r += int2char(d);\n        }\n    }\n    return m ? r : \"0\";\n}\n\n// (public) -this\n\nfunction bnNegate() {\n    var r = nbi();\n    BigInteger.ZERO.subTo(this, r);\n    return r;\n}\n\n// (public) |this|\n\nfunction bnAbs() {\n    return (this.s < 0) ? this.negate() : this;\n}\n\n// (public) return + if this > a, - if this < a, 0 if equal\n\nfunction bnCompareTo(a) {\n    var r = this.s - a.s;\n    if (r != 0) return r;\n    var i = this.t;\n    r = i - a.t;\n    if (r != 0) return r;\n    while (--i >= 0) if ((r = this[i] - a[i]) != 0) return r;\n    return 0;\n}\n\n// returns bit length of the integer x\n\nfunction nbits(x) {\n    var r = 1,\n        t;\n    if ((t = x >>> 16) != 0) {\n        x = t;\n        r += 16;\n    }\n    if ((t = x >> 8) != 0) {\n        x = t;\n        r += 8;\n    }\n    if ((t = x >> 4) != 0) {\n        x = t;\n        r += 4;\n    }\n    if ((t = x >> 2) != 0) {\n        x = t;\n        r += 2;\n    }\n    if ((t = x >> 1) != 0) {\n        x = t;\n        r += 1;\n    }\n    return r;\n}\n\n// (public) return the number of bits in \"this\"\n\nfunction bnBitLength() {\n    if (this.t <= 0) return 0;\n    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n}\n\n// (protected) r = this << n*DB\n\nfunction bnpDLShiftTo(n, r) {\n    var i;\n    for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];\n    for (i = n - 1; i >= 0; --i) r[i] = 0;\n    r.t = this.t + n;\n    r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\n\nfunction bnpDRShiftTo(n, r) {\n    for (var i = n; i < this.t; ++i) r[i - n] = this[i];\n    r.t = Math.max(this.t - n, 0);\n    r.s = this.s;\n}\n\n// (protected) r = this << n\n\nfunction bnpLShiftTo(n, r) {\n    var bs = n % this.DB;\n    var cbs = this.DB - bs;\n    var bm = (1 << cbs) - 1;\n    var ds = Math.floor(n / this.DB),\n        c = (this.s << bs) & this.DM,\n        i;\n    for (i = this.t - 1; i >= 0; --i) {\n        r[i + ds + 1] = (this[i] >> cbs) | c;\n        c = (this[i] & bm) << bs;\n    }\n    for (i = ds - 1; i >= 0; --i) r[i] = 0;\n    r[ds] = c;\n    r.t = this.t + ds + 1;\n    r.s = this.s;\n    r.clamp();\n}\n\n// (protected) r = this >> n\n\nfunction bnpRShiftTo(n, r) {\n    r.s = this.s;\n    var ds = Math.floor(n / this.DB);\n    if (ds >= this.t) {\n        r.t = 0;\n        return;\n    }\n    var bs = n % this.DB;\n    var cbs = this.DB - bs;\n    var bm = (1 << bs) - 1;\n    r[0] = this[ds] >> bs;\n    for (var i = ds + 1; i < this.t; ++i) {\n        r[i - ds - 1] |= (this[i] & bm) << cbs;\n        r[i - ds] = this[i] >> bs;\n    }\n    if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n    r.t = this.t - ds;\n    r.clamp();\n}\n\n// (protected) r = this - a\n\nfunction bnpSubTo(a, r) {\n    var i = 0,\n        c = 0,\n        m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] - a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c -= a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c -= a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c -= a.s;\n    }\n    r.s = (c < 0) ? -1 : 0;\n    if (c < -1) r[i++] = this.DV + c;\n    else if (c > 0) r[i++] = c;\n    r.t = i;\n    r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\n\nfunction bnpMultiplyTo(a, r) {\n    var x = this.abs(),\n        y = a.abs();\n    var i = x.t;\n    r.t = i + y.t;\n    while (--i >= 0) r[i] = 0;\n    for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n    r.s = 0;\n    r.clamp();\n    if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\n\nfunction bnpSquareTo(r) {\n    var x = this.abs();\n    var i = r.t = 2 * x.t;\n    while (--i >= 0) r[i] = 0;\n    for (i = 0; i < x.t - 1; ++i) {\n        var c = x.am(i, x[i], r, 2 * i, 0, 1);\n        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n            r[i + x.t] -= x.DV;\n            r[i + x.t + 1] = 1;\n        }\n    }\n    if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n    r.s = 0;\n    r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\n\nfunction bnpDivRemTo(m, q, r) {\n    var pm = m.abs();\n    if (pm.t <= 0) return;\n    var pt = this.abs();\n    if (pt.t < pm.t) {\n        if (q != null) q.fromInt(0);\n        if (r != null) this.copyTo(r);\n        return;\n    }\n    if (r == null) r = nbi();\n    var y = nbi(),\n        ts = this.s,\n        ms = m.s;\n    var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n    if (nsh > 0) {\n        pm.lShiftTo(nsh, y);\n        pt.lShiftTo(nsh, r);\n    }\n    else {\n        pm.copyTo(y);\n        pt.copyTo(r);\n    }\n    var ys = y.t;\n    var y0 = y[ys - 1];\n    if (y0 == 0) return;\n    var yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);\n    var d1 = this.FV / yt,\n        d2 = (1 << this.F1) / yt,\n        e = 1 << this.F2;\n    var i = r.t,\n        j = i - ys,\n        t = (q == null) ? nbi() : q;\n    y.dlShiftTo(j, t);\n    if (r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t, r);\n    }\n    BigInteger.ONE.dlShiftTo(ys, t);\n    t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n    while (y.t < ys) y[y.t++] = 0;\n    while (--j >= 0) {\n        // Estimate quotient digit\n        var qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) { // Try it out\n            y.dlShiftTo(j, t);\n            r.subTo(t, r);\n            while (r[i] < --qd) r.subTo(t, r);\n        }\n    }\n    if (q != null) {\n        r.drShiftTo(ys, q);\n        if (ts != ms) BigInteger.ZERO.subTo(q, q);\n    }\n    r.t = ys;\n    r.clamp();\n    if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n    if (ts < 0) BigInteger.ZERO.subTo(r, r);\n}\n\n// (public) this mod a\n\nfunction bnMod(a) {\n    var r = nbi();\n    this.abs().divRemTo(a, null, r);\n    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n    return r;\n}\n\n// Modular reduction using \"classic\" algorithm\n\nfunction Classic(m) {\n    this.m = m;\n}\n\nfunction cConvert(x) {\n    if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n    else return x;\n}\n\nfunction cRevert(x) {\n    return x;\n}\n\nfunction cReduce(x) {\n    x.divRemTo(this.m, null, x);\n}\n\nfunction cMulTo(x, y, r) {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n}\n\nfunction cSqrTo(x, r) {\n    x.squareTo(r);\n    this.reduce(r);\n}\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\n\nfunction bnpInvDigit() {\n    if (this.t < 1) return 0;\n    var x = this[0];\n    if ((x & 1) == 0) return 0;\n    var y = x & 3; // y == 1/x mod 2^2\n    y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4\n    y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16\n    // last step - calculate inverse mod DV directly;\n    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n    y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits\n    // we really want the negative inverse, and -DV < y < DV\n    return (y > 0) ? this.DV - y : -y;\n}\n\n// Montgomery reduction\n\nfunction Montgomery(m) {\n    this.m = m;\n    this.mp = m.invDigit();\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (m.DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n}\n\n// xR mod m\n\nfunction montConvert(x) {\n    var r = nbi();\n    x.abs().dlShiftTo(this.m.t, r);\n    r.divRemTo(this.m, null, r);\n    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n    return r;\n}\n\n// x/R mod m\n\nfunction montRevert(x) {\n    var r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n}\n\n// x = x/R mod m (HAC 14.32)\n\nfunction montReduce(x) {\n    while (x.t <= this.mt2) // pad x so am has enough room later\n    x[x.t++] = 0;\n    for (var i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        var j = x[i] & 0x7fff;\n        var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i + this.m.t;\n        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n        // propagate carry\n        while (x[j] >= x.DV) {\n            x[j] -= x.DV;\n            x[++j]++;\n        }\n    }\n    x.clamp();\n    x.drShiftTo(this.m.t, x);\n    if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n\n// r = \"x^2/R mod m\"; x != r\n\nfunction montSqrTo(x, r) {\n    x.squareTo(r);\n    this.reduce(r);\n}\n\n// r = \"xy/R mod m\"; x,y != r\n\nfunction montMulTo(x, y, r) {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n}\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\n\nfunction bnpIsEven() {\n    return ((this.t > 0) ? (this[0] & 1) : this.s) == 0;\n}\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n\nfunction bnpExp(e, z) {\n    if (e > 0xffffffff || e < 1) return BigInteger.ONE;\n    var r = nbi(),\n        r2 = nbi(),\n        g = z.convert(this),\n        i = nbits(e) - 1;\n    g.copyTo(r);\n    while (--i >= 0) {\n        z.sqrTo(r, r2);\n        if ((e & (1 << i)) > 0) z.mulTo(r2, g, r);\n        else {\n            var t = r;\n            r = r2;\n            r2 = t;\n        }\n    }\n    return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\n\nfunction bnModPowInt(e, m) {\n    var z;\n    if (e < 256 || m.isEven()) z = new Classic(m);\n    else z = new Montgomery(m);\n    return this.exp(e, z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n\nfunction bnClone() {\n    var r = nbi();\n    this.copyTo(r);\n    return r;\n}\n\n// (public) return value as integer\n\nfunction bnIntValue() {\n    if (this.s < 0) {\n        if (this.t == 1) return this[0] - this.DV;\n        else if (this.t == 0) return -1;\n    }\n    else if (this.t == 1) return this[0];\n    else if (this.t == 0) return 0;\n    // assumes 16 < DB < 32\n    return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];\n}\n\n// (public) return value as byte\n\nfunction bnByteValue() {\n    return (this.t == 0) ? this.s : (this[0] << 24) >> 24;\n}\n\n// (public) return value as short (assumes DB>=16)\n\nfunction bnShortValue() {\n    return (this.t == 0) ? this.s : (this[0] << 16) >> 16;\n}\n\n// (protected) return x s.t. r^x < DV\n\nfunction bnpChunkSize(r) {\n    return Math.floor(Math.LN2 * this.DB / Math.log(r));\n}\n\n// (public) 0 if this == 0, 1 if this > 0\n\nfunction bnSigNum() {\n    if (this.s < 0) return -1;\n    else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n    else return 1;\n}\n\n// (protected) convert to radix string\n\nfunction bnpToRadix(b) {\n    if (b == null) b = 10;\n    if (this.signum() == 0 || b < 2 || b > 36) return \"0\";\n    var cs = this.chunkSize(b);\n    var a = Math.pow(b, cs);\n    var d = nbv(a),\n        y = nbi(),\n        z = nbi(),\n        r = \"\";\n    this.divRemTo(d, y, z);\n    while (y.signum() > 0) {\n        r = (a + z.intValue()).toString(b).substr(1) + r;\n        y.divRemTo(d, y, z);\n    }\n    return z.intValue().toString(b) + r;\n}\n\n// (protected) convert from radix string\n\nfunction bnpFromRadix(s, b) {\n    this.fromInt(0);\n    if (b == null) b = 10;\n    var cs = this.chunkSize(b);\n    var d = Math.pow(b, cs),\n        mi = false,\n        j = 0,\n        w = 0;\n    for (var i = 0; i < s.length; ++i) {\n        var x = intAt(s, i);\n        if (x < 0) {\n            if (s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n            continue;\n        }\n        w = b * w + x;\n        if (++j >= cs) {\n            this.dMultiply(d);\n            this.dAddOffset(w, 0);\n            j = 0;\n            w = 0;\n        }\n    }\n    if (j > 0) {\n        this.dMultiply(Math.pow(b, j));\n        this.dAddOffset(w, 0);\n    }\n    if (mi) BigInteger.ZERO.subTo(this, this);\n}\n\n// (protected) alternate constructor\n\nfunction bnpFromNumber(a, b, c) {\n    if (\"number\" == typeof b) {\n        // new BigInteger(int,int,RNG)\n        if (a < 2) this.fromInt(1);\n        else {\n            this.fromNumber(a, c);\n            if (!this.testBit(a - 1)) // force MSB set\n            this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n            if (this.isEven()) this.dAddOffset(1, 0); // force odd\n            while (!this.isProbablePrime(b)) {\n                this.dAddOffset(2, 0);\n                if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n            }\n        }\n    }\n    else {\n        // new BigInteger(int,RNG)\n        var x = new Array(),\n            t = a & 7;\n        x.length = (a >> 3) + 1;\n        b.nextBytes(x);\n        if (t > 0) x[0] &= ((1 << t) - 1);\n        else x[0] = 0;\n        this.fromString(x, 256);\n    }\n}\n\n// (public) convert to bigendian byte array\n\nfunction bnToByteArray() {\n    var i = this.t,\n        r = new Array();\n    r[0] = this.s;\n    var p = this.DB - (i * this.DB) % 8,\n        d, k = 0;\n    if (i-- > 0) {\n        if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) r[k++] = d | (this.s << (this.DB - p));\n        while (i >= 0) {\n            if (p < 8) {\n                d = (this[i] & ((1 << p) - 1)) << (8 - p);\n                d |= this[--i] >> (p += this.DB - 8);\n            }\n            else {\n                d = (this[i] >> (p -= 8)) & 0xff;\n                if (p <= 0) {\n                    p += this.DB;\n                    --i;\n                }\n            }\n            if ((d & 0x80) != 0) d |= -256;\n            if (k == 0 && (this.s & 0x80) != (d & 0x80))++k;\n            if (k > 0 || d != this.s) r[k++] = d;\n        }\n    }\n    return r;\n}\n\nfunction bnEquals(a) {\n    return (this.compareTo(a) == 0);\n}\n\nfunction bnMin(a) {\n    return (this.compareTo(a) < 0) ? this : a;\n}\n\nfunction bnMax(a) {\n    return (this.compareTo(a) > 0) ? this : a;\n}\n\n// (protected) r = this op a (bitwise)\n\nfunction bnpBitwiseTo(a, op, r) {\n    var i, f, m = Math.min(a.t, this.t);\n    for (i = 0; i < m; ++i) r[i] = op(this[i], a[i]);\n    if (a.t < this.t) {\n        f = a.s & this.DM;\n        for (i = m; i < this.t; ++i) r[i] = op(this[i], f);\n        r.t = this.t;\n    }\n    else {\n        f = this.s & this.DM;\n        for (i = m; i < a.t; ++i) r[i] = op(f, a[i]);\n        r.t = a.t;\n    }\n    r.s = op(this.s, a.s);\n    r.clamp();\n}\n\n// (public) this & a\n\nfunction op_and(x, y) {\n    return x & y;\n}\n\nfunction bnAnd(a) {\n    var r = nbi();\n    this.bitwiseTo(a, op_and, r);\n    return r;\n}\n\n// (public) this | a\n\nfunction op_or(x, y) {\n    return x | y;\n}\n\nfunction bnOr(a) {\n    var r = nbi();\n    this.bitwiseTo(a, op_or, r);\n    return r;\n}\n\n// (public) this ^ a\n\nfunction op_xor(x, y) {\n    return x ^ y;\n}\n\nfunction bnXor(a) {\n    var r = nbi();\n    this.bitwiseTo(a, op_xor, r);\n    return r;\n}\n\n// (public) this & ~a\n\nfunction op_andnot(x, y) {\n    return x & ~y;\n}\n\nfunction bnAndNot(a) {\n    var r = nbi();\n    this.bitwiseTo(a, op_andnot, r);\n    return r;\n}\n\n// (public) ~this\n\nfunction bnNot() {\n    var r = nbi();\n    for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i];\n    r.t = this.t;\n    r.s = ~this.s;\n    return r;\n}\n\n// (public) this << n\n\nfunction bnShiftLeft(n) {\n    var r = nbi();\n    if (n < 0) this.rShiftTo(-n, r);\n    else this.lShiftTo(n, r);\n    return r;\n}\n\n// (public) this >> n\n\nfunction bnShiftRight(n) {\n    var r = nbi();\n    if (n < 0) this.lShiftTo(-n, r);\n    else this.rShiftTo(n, r);\n    return r;\n}\n\n// return index of lowest 1-bit in x, x < 2^31\n\nfunction lbit(x) {\n    if (x == 0) return -1;\n    var r = 0;\n    if ((x & 0xffff) == 0) {\n        x >>= 16;\n        r += 16;\n    }\n    if ((x & 0xff) == 0) {\n        x >>= 8;\n        r += 8;\n    }\n    if ((x & 0xf) == 0) {\n        x >>= 4;\n        r += 4;\n    }\n    if ((x & 3) == 0) {\n        x >>= 2;\n        r += 2;\n    }\n    if ((x & 1) == 0)++r;\n    return r;\n}\n\n// (public) returns index of lowest 1-bit (or -1 if none)\n\nfunction bnGetLowestSetBit() {\n    for (var i = 0; i < this.t; ++i)\n    if (this[i] != 0) return i * this.DB + lbit(this[i]);\n    if (this.s < 0) return this.t * this.DB;\n    return -1;\n}\n\n// return number of 1 bits in x\n\nfunction cbit(x) {\n    var r = 0;\n    while (x != 0) {\n        x &= x - 1;\n        ++r;\n    }\n    return r;\n}\n\n// (public) return number of set bits\n\nfunction bnBitCount() {\n    var r = 0,\n        x = this.s & this.DM;\n    for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x);\n    return r;\n}\n\n// (public) true iff nth bit is set\n\nfunction bnTestBit(n) {\n    var j = Math.floor(n / this.DB);\n    if (j >= this.t) return (this.s != 0);\n    return ((this[j] & (1 << (n % this.DB))) != 0);\n}\n\n// (protected) this op (1<<n)\n\nfunction bnpChangeBit(n, op) {\n    var r = BigInteger.ONE.shiftLeft(n);\n    this.bitwiseTo(r, op, r);\n    return r;\n}\n\n// (public) this | (1<<n)\n\nfunction bnSetBit(n) {\n    return this.changeBit(n, op_or);\n}\n\n// (public) this & ~(1<<n)\n\nfunction bnClearBit(n) {\n    return this.changeBit(n, op_andnot);\n}\n\n// (public) this ^ (1<<n)\n\nfunction bnFlipBit(n) {\n    return this.changeBit(n, op_xor);\n}\n\n// (protected) r = this + a\n\nfunction bnpAddTo(a, r) {\n    var i = 0,\n        c = 0,\n        m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] + a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c += a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c += a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += a.s;\n    }\n    r.s = (c < 0) ? -1 : 0;\n    if (c > 0) r[i++] = c;\n    else if (c < -1) r[i++] = this.DV + c;\n    r.t = i;\n    r.clamp();\n}\n\n// (public) this + a\n\nfunction bnAdd(a) {\n    var r = nbi();\n    this.addTo(a, r);\n    return r;\n}\n\n// (public) this - a\n\nfunction bnSubtract(a) {\n    var r = nbi();\n    this.subTo(a, r);\n    return r;\n}\n\n// (public) this * a\n\nfunction bnMultiply(a) {\n    var r = nbi();\n    this.multiplyTo(a, r);\n    return r;\n}\n\n// (public) this^2\n\nfunction bnSquare() {\n    var r = nbi();\n    this.squareTo(r);\n    return r;\n}\n\n// (public) this / a\n\nfunction bnDivide(a) {\n    var r = nbi();\n    this.divRemTo(a, r, null);\n    return r;\n}\n\n// (public) this % a\n\nfunction bnRemainder(a) {\n    var r = nbi();\n    this.divRemTo(a, null, r);\n    return r;\n}\n\n// (public) [this/a,this%a]\n\nfunction bnDivideAndRemainder(a) {\n    var q = nbi(),\n        r = nbi();\n    this.divRemTo(a, q, r);\n    return new Array(q, r);\n}\n\n// (protected) this *= n, this >= 0, 1 < n < DV\n\nfunction bnpDMultiply(n) {\n    this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n    ++this.t;\n    this.clamp();\n}\n\n// (protected) this += n << w words, this >= 0\n\nfunction bnpDAddOffset(n, w) {\n    if (n == 0) return;\n    while (this.t <= w) this[this.t++] = 0;\n    this[w] += n;\n    while (this[w] >= this.DV) {\n        this[w] -= this.DV;\n        if (++w >= this.t) this[this.t++] = 0;\n        ++this[w];\n    }\n}\n\n// A \"null\" reducer\n\nfunction NullExp() {}\n\nfunction nNop(x) {\n    return x;\n}\n\nfunction nMulTo(x, y, r) {\n    x.multiplyTo(y, r);\n}\n\nfunction nSqrTo(x, r) {\n    x.squareTo(r);\n}\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n// (public) this^e\n\nfunction bnPow(e) {\n    return this.exp(e, new NullExp());\n}\n\n// (protected) r = lower n words of \"this * a\", a.t <= n\n// \"this\" should be the larger one if appropriate.\n\nfunction bnpMultiplyLowerTo(a, n, r) {\n    var i = Math.min(this.t + a.t, n);\n    r.s = 0; // assumes a,this >= 0\n    r.t = i;\n    while (i > 0) r[--i] = 0;\n    var j;\n    for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\n    for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i);\n    r.clamp();\n}\n\n// (protected) r = \"this * a\" without lower n words, n > 0\n// \"this\" should be the larger one if appropriate.\n\nfunction bnpMultiplyUpperTo(a, n, r) {\n    --n;\n    var i = r.t = this.t + a.t - n;\n    r.s = 0; // assumes a,this >= 0\n    while (--i >= 0) r[i] = 0;\n    for (i = Math.max(n - this.t, 0); i < a.t; ++i)\n    r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\n    r.clamp();\n    r.drShiftTo(1, r);\n}\n\n// Barrett modular reduction\n\nfunction Barrett(m) {\n    // setup Barrett\n    this.r2 = nbi();\n    this.q3 = nbi();\n    BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n    this.mu = this.r2.divide(m);\n    this.m = m;\n}\n\nfunction barrettConvert(x) {\n    if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);\n    else if (x.compareTo(this.m) < 0) return x;\n    else {\n        var r = nbi();\n        x.copyTo(r);\n        this.reduce(r);\n        return r;\n    }\n}\n\nfunction barrettRevert(x) {\n    return x;\n}\n\n// x = x mod m (HAC 14.42)\n\nfunction barrettReduce(x) {\n    x.drShiftTo(this.m.t - 1, this.r2);\n    if (x.t > this.m.t + 1) {\n        x.t = this.m.t + 1;\n        x.clamp();\n    }\n    this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n    this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n    while (x.compareTo(this.r2) < 0) x.dAddOffset(1, this.m.t + 1);\n    x.subTo(this.r2, x);\n    while (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n\n// r = x^2 mod m; x != r\n\nfunction barrettSqrTo(x, r) {\n    x.squareTo(r);\n    this.reduce(r);\n}\n\n// r = x*y mod m; x,y != r\n\nfunction barrettMulTo(x, y, r) {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n}\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n// (public) this^e % m (HAC 14.85)\n\nfunction bnModPow(e, m) {\n    var i = e.bitLength(),\n        k, r = nbv(1),\n        z;\n    if (i <= 0) return r;\n    else if (i < 18) k = 1;\n    else if (i < 48) k = 3;\n    else if (i < 144) k = 4;\n    else if (i < 768) k = 5;\n    else k = 6;\n    if (i < 8) z = new Classic(m);\n    else if (m.isEven()) z = new Barrett(m);\n    else z = new Montgomery(m);\n\n    // precomputation\n    var g = new Array(),\n        n = 3,\n        k1 = k - 1,\n        km = (1 << k) - 1;\n    g[1] = z.convert(this);\n    if (k > 1) {\n        var g2 = nbi();\n        z.sqrTo(g[1], g2);\n        while (n <= km) {\n            g[n] = nbi();\n            z.mulTo(g2, g[n - 2], g[n]);\n            n += 2;\n        }\n    }\n\n    var j = e.t - 1,\n        w, is1 = true,\n        r2 = nbi(),\n        t;\n    i = nbits(e[j]) - 1;\n    while (j >= 0) {\n        if (i >= k1) w = (e[j] >> (i - k1)) & km;\n        else {\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n            if (j > 0) w |= e[j - 1] >> (this.DB + i - k1);\n        }\n\n        n = k;\n        while ((w & 1) == 0) {\n            w >>= 1;\n            --n;\n        }\n        if ((i -= n) < 0) {\n            i += this.DB;\n            --j;\n        }\n        if (is1) { // ret == 1, don't bother squaring or multiplying it\n            g[w].copyTo(r);\n            is1 = false;\n        }\n        else {\n            while (n > 1) {\n                z.sqrTo(r, r2);\n                z.sqrTo(r2, r);\n                n -= 2;\n            }\n            if (n > 0) z.sqrTo(r, r2);\n            else {\n                t = r;\n                r = r2;\n                r2 = t;\n            }\n            z.mulTo(r2, g[w], r);\n        }\n\n        while (j >= 0 && (e[j] & (1 << i)) == 0) {\n            z.sqrTo(r, r2);\n            t = r;\n            r = r2;\n            r2 = t;\n            if (--i < 0) {\n                i = this.DB - 1;\n                --j;\n            }\n        }\n    }\n    return z.revert(r);\n}\n\n// (public) gcd(this,a) (HAC 14.54)\n\nfunction bnGCD(a) {\n    var x = (this.s < 0) ? this.negate() : this.clone();\n    var y = (a.s < 0) ? a.negate() : a.clone();\n    if (x.compareTo(y) < 0) {\n        var t = x;\n        x = y;\n        y = t;\n    }\n    var i = x.getLowestSetBit(),\n        g = y.getLowestSetBit();\n    if (g < 0) return x;\n    if (i < g) g = i;\n    if (g > 0) {\n        x.rShiftTo(g, x);\n        y.rShiftTo(g, y);\n    }\n    while (x.signum() > 0) {\n        if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);\n        if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);\n        if (x.compareTo(y) >= 0) {\n            x.subTo(y, x);\n            x.rShiftTo(1, x);\n        }\n        else {\n            y.subTo(x, y);\n            y.rShiftTo(1, y);\n        }\n    }\n    if (g > 0) y.lShiftTo(g, y);\n    return y;\n}\n\n// (protected) this % n, n < 2^26\n\nfunction bnpModInt(n) {\n    if (n <= 0) return 0;\n    var d = this.DV % n,\n        r = (this.s < 0) ? n - 1 : 0;\n    if (this.t > 0) if (d == 0) r = this[0] % n;\n    else for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n;\n    return r;\n}\n\n// (public) 1/this % m (HAC 14.61)\n\nfunction bnModInverse(m) {\n    var ac = m.isEven();\n    if ((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n    var u = m.clone(),\n        v = this.clone();\n    var a = nbv(1),\n        b = nbv(0),\n        c = nbv(0),\n        d = nbv(1);\n    while (u.signum() != 0) {\n        while (u.isEven()) {\n            u.rShiftTo(1, u);\n            if (ac) {\n                if (!a.isEven() || !b.isEven()) {\n                    a.addTo(this, a);\n                    b.subTo(m, b);\n                }\n                a.rShiftTo(1, a);\n            }\n            else if (!b.isEven()) b.subTo(m, b);\n            b.rShiftTo(1, b);\n        }\n        while (v.isEven()) {\n            v.rShiftTo(1, v);\n            if (ac) {\n                if (!c.isEven() || !d.isEven()) {\n                    c.addTo(this, c);\n                    d.subTo(m, d);\n                }\n                c.rShiftTo(1, c);\n            }\n            else if (!d.isEven()) d.subTo(m, d);\n            d.rShiftTo(1, d);\n        }\n        if (u.compareTo(v) >= 0) {\n            u.subTo(v, u);\n            if (ac) a.subTo(c, a);\n            b.subTo(d, b);\n        }\n        else {\n            v.subTo(u, v);\n            if (ac) c.subTo(a, c);\n            d.subTo(b, d);\n        }\n    }\n    if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n    if (d.compareTo(m) >= 0) return d.subtract(m);\n    if (d.signum() < 0) d.addTo(m, d);\n    else return d;\n    if (d.signum() < 0) return d.add(m);\n    else return d;\n}\n\nvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\n\n// (public) test primality with certainty >= 1-.5^t\n\nfunction bnIsProbablePrime(t) {\n    var i, x = this.abs();\n    if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {\n        for (i = 0; i < lowprimes.length; ++i)\n        if (x[0] == lowprimes[i]) return true;\n        return false;\n    }\n    if (x.isEven()) return false;\n    i = 1;\n    while (i < lowprimes.length) {\n        var m = lowprimes[i],\n            j = i + 1;\n        while (j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n        m = x.modInt(m);\n        while (i < j) if (m % lowprimes[i++] == 0) return false;\n    }\n    return x.millerRabin(t);\n}\n\n// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n\nfunction bnpMillerRabin(t) {\n    var n1 = this.subtract(BigInteger.ONE);\n    var k = n1.getLowestSetBit();\n    if (k <= 0) return false;\n    var r = n1.shiftRight(k);\n    t = (t + 1) >> 1;\n    if (t > lowprimes.length) t = lowprimes.length;\n    var a = nbi();\n    for (var i = 0; i < t; ++i) {\n        //Pick bases at random, instead of starting at 2\n        a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\n        var y = a.modPow(r, this);\n        if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n            var j = 1;\n            while (j++ < k && y.compareTo(n1) != 0) {\n                y = y.modPowInt(2, this);\n                if (y.compareTo(BigInteger.ONE) == 0) return false;\n            }\n            if (y.compareTo(n1) != 0) return false;\n        }\n    }\n    return true;\n}\n\n// protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n// public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n// JSBN-specific extension\nBigInteger.prototype.square = bnSquare;// seedrandom.js version 2.0.\n// Author: David Bau 4/2/2011\n//\n// Defines a method Math.seedrandom() that, when called, substitutes\n// an explicitly seeded RC4-based algorithm for Math.random().  Also\n// supports automatic seeding from local or network sources of entropy.\n//\n// Usage:\n//\n//   <script src=http://davidbau.com/encode/seedrandom-min.js></script>\n//\n//   Math.seedrandom('yipee'); Sets Math.random to a function that is\n//                             initialized using the given explicit seed.\n//\n//   Math.seedrandom();        Sets Math.random to a function that is\n//                             seeded using the current time, dom state,\n//                             and other accumulated local entropy.\n//                             The generated seed string is returned.\n//\n//   Math.seedrandom('yowza', true);\n//                             Seeds using the given explicit seed mixed\n//                             together with accumulated entropy.\n//\n//   <script src=\"http://bit.ly/srandom-512\"></script>\n//                             Seeds using physical random bits downloaded\n//                             from random.org.\n//\n//   <script src=\"https://jsonlib.appspot.com/urandom?callback=Math.seedrandom\">\n//   </script>                 Seeds using urandom bits from call.jsonlib.com,\n//                             which is faster than random.org.\n//\n// Examples:\n//\n//   Math.seedrandom(\"hello\");            // Use \"hello\" as the seed.\n//   document.write(Math.random());       // Always 0.5463663768140734\n//   document.write(Math.random());       // Always 0.43973793770592234\n//   var rng1 = Math.random;              // Remember the current prng.\n//\n//   var autoseed = Math.seedrandom();    // New prng with an automatic seed.\n//   document.write(Math.random());       // Pretty much unpredictable.\n//\n//   Math.random = rng1;                  // Continue \"hello\" prng sequence.\n//   document.write(Math.random());       // Always 0.554769432473455\n//\n//   Math.seedrandom(autoseed);           // Restart at the previous seed.\n//   document.write(Math.random());       // Repeat the 'unpredictable' value.\n//\n// Notes:\n//\n// Each time seedrandom('arg') is called, entropy from the passed seed\n// is accumulated in a pool to help generate future seeds for the\n// zero-argument form of Math.seedrandom, so entropy can be injected over\n// time by calling seedrandom with explicit data repeatedly.\n//\n// On speed - This javascript implementation of Math.random() is about\n// 3-10x slower than the built-in Math.random() because it is not native\n// code, but this is typically fast enough anyway.  Seeding is more expensive,\n// especially if you use auto-seeding.  Some details (timings on Chrome 4):\n//\n// Our Math.random()            - avg less than 0.002 milliseconds per call\n// seedrandom('explicit')       - avg less than 0.5 milliseconds per call\n// seedrandom('explicit', true) - avg less than 2 milliseconds per call\n// seedrandom()                 - avg about 38 milliseconds per call\n//\n// LICENSE (BSD):\n//\n// Copyright 2010 David Bau, all rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n// \n//   1. Redistributions of source code must retain the above copyright\n//      notice, this list of conditions and the following disclaimer.\n//\n//   2. Redistributions in binary form must reproduce the above copyright\n//      notice, this list of conditions and the following disclaimer in the\n//      documentation and/or other materials provided with the distribution.\n// \n//   3. Neither the name of this module nor the names of its contributors may\n//      be used to endorse or promote products derived from this software\n//      without specific prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n/**\n * All code is in an anonymous closure to keep the global namespace clean.\n *\n * @param {number=} overflow \n * @param {number=} startdenom\n */\n(function (pool, math, width, chunks, significance, overflow, startdenom)\n{\n\n\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n    math['seedrandom'] = function seedrandom(seed, use_entropy)\n    {\n        var key = [];\n        var arc4;\n\n        // Flatten the seed string or build one from local entropy if needed.\n        seed = mixkey(flatten(\n        use_entropy ? [seed, pool] : arguments.length ? seed : [new Date().getTime(), pool], 3), key);\n\n        // Use the seed to initialize an ARC4 generator.\n        arc4 = new ARC4(key);\n\n        // Mix the randomness into accumulated entropy.\n        mixkey(arc4.S, pool);\n\n        // Override Math.random\n        // This function returns a random double in [0, 1) that contains\n        // randomness in every bit of the mantissa of the IEEE 754 value.\n        math['random'] = function random()\n        { // Closure to return a random double:\n            var n = arc4.g(chunks); // Start with a numerator n < 2 ^ 48\n            var d = startdenom; //   and denominator d = 2 ^ 48.\n            var x = 0; //   and no 'extra last byte'.\n            while (n < significance)\n            { // Fill up all significant digits by\n                n = (n + x) * width; //   shifting numerator and\n                d *= width; //   denominator and generating a\n                x = arc4.g(1); //   new least-significant-byte.\n            }\n            while (n >= overflow)\n            { // To avoid rounding up, before adding\n                n /= 2; //   last byte, shift everything\n                d /= 2; //   right using integer math until\n                x >>>= 1; //   we have exactly the desired bits.\n            }\n            return (n + x) / d; // Form the number within [0, 1).\n        };\n\n        // Return the seed that was used\n        return seed;\n    };\n\n    //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n    /** @constructor */\n\n    function ARC4(key)\n    {\n        var t, u, me = this,\n            keylen = key.length;\n        var i = 0,\n            j = me.i = me.j = me.m = 0;\n        me.S = [];\n        me.c = [];\n\n        // The empty key [] is treated as [0].\n        if (!keylen)\n        {\n            key = [keylen++];\n        }\n\n        // Set up S using the standard key scheduling algorithm.\n        while (i < width)\n        {\n            me.S[i] = i++;\n        }\n        for (i = 0; i < width; i++)\n        {\n            t = me.S[i];\n            j = lowbits(j + t + key[i % keylen]);\n            u = me.S[j];\n            me.S[i] = u;\n            me.S[j] = t;\n        }\n\n        // The \"g\" method returns the next (count) outputs as one number.\n        me.g = function getnext(count)\n        {\n            var s = me.S;\n            var i = lowbits(me.i + 1);\n            var t = s[i];\n            var j = lowbits(me.j + t);\n            var u = s[j];\n            s[i] = u;\n            s[j] = t;\n            var r = s[lowbits(t + u)];\n            while (--count)\n            {\n                i = lowbits(i + 1);\n                t = s[i];\n                j = lowbits(j + t);\n                u = s[j];\n                s[i] = u;\n                s[j] = t;\n                r = r * width + s[lowbits(t + u)];\n            }\n            me.i = i;\n            me.j = j;\n            return r;\n        };\n        // For robust unpredictability discard an initial batch of values.\n        // See http://www.rsa.com/rsalabs/node.asp?id=2009\n        me.g(width);\n    }\n\n    //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n    /** @param {Object=} result \n     * @param {string=} prop\n     * @param {string=} typ */\n\n    function flatten(obj, depth, result, prop, typ)\n    {\n        result = [];\n        typ = typeof (obj);\n        if (depth && typ == 'object')\n        {\n            for (prop in obj)\n            {\n                if (prop.indexOf('S') < 5)\n                { // Avoid FF3 bug (local/sessionStorage)\n                    try\n                    {\n                        result.push(flatten(obj[prop], depth - 1));\n                    }\n                    catch (e)\n                    {}\n                }\n            }\n        }\n        return (result.length ? result : obj + (typ != 'string' ? '\\0' : ''));\n    }\n\n    //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n    /** @param {number=} smear \n     * @param {number=} j */\n\n    function mixkey(seed, key, smear, j)\n    {\n        seed += ''; // Ensure the seed is a string\n        smear = 0;\n        for (j = 0; j < seed.length; j++)\n        {\n            key[lowbits(j)] = lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));\n        }\n        seed = '';\n        for (j in key)\n        {\n            seed += String.fromCharCode(key[j]);\n        }\n        return seed;\n    }\n\n    //\n    // lowbits()\n    // A quick \"n mod width\" for width a power of 2.\n    //\n\n\n    function lowbits(n)\n    {\n        return n & (width - 1);\n    }\n\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    startdenom = math.pow(width, chunks);\n    significance = math.pow(2, significance);\n    overflow = significance * 2;\n\n    //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to intefere with determinstic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n    mixkey(math.random(), pool);\n\n    // End anonymous scope, and pass initial values.\n})([], // pool: entropy pool starts empty\nMath, // math: package containing random, pow, and seedrandom\n256, // width: each RC4 output is 0 <= x < 256\n6, // chunks: at least six RC4 outputs for each double\n52 // significance: there are 52 significant digits in a double\n);\n\n\n// This is not really a random number generator object, and two SeededRandom\n// objects will conflict with one another, but it's good enough for generating \n// the rsa key.\nfunction SeededRandom(){}\n\nfunction SRnextBytes(ba)\n{\n    var i;\n    for(i = 0; i < ba.length; i++)\n    {\n        ba[i] = Math.floor(Math.random() * 256);\n    }\n}\n\nSeededRandom.prototype.nextBytes = SRnextBytes;\n\n// prng4.js - uses Arcfour as a PRNG\n\nfunction Arcfour() {\n  this.i = 0;\n  this.j = 0;\n  this.S = new Array();\n}\n\n// Initialize arcfour context from key, an array of ints, each from [0..255]\nfunction ARC4init(key) {\n  var i, j, t;\n  for(i = 0; i < 256; ++i)\n    this.S[i] = i;\n  j = 0;\n  for(i = 0; i < 256; ++i) {\n    j = (j + this.S[i] + key[i % key.length]) & 255;\n    t = this.S[i];\n    this.S[i] = this.S[j];\n    this.S[j] = t;\n  }\n  this.i = 0;\n  this.j = 0;\n}\n\nfunction ARC4next() {\n  var t;\n  this.i = (this.i + 1) & 255;\n  this.j = (this.j + this.S[this.i]) & 255;\n  t = this.S[this.i];\n  this.S[this.i] = this.S[this.j];\n  this.S[this.j] = t;\n  return this.S[(t + this.S[this.i]) & 255];\n}\n\nArcfour.prototype.init = ARC4init;\nArcfour.prototype.next = ARC4next;\n\n// Plug in your RNG constructor here\nfunction prng_newstate() {\n  return new Arcfour();\n}\n\n// Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\nvar rng_psize = 256;\n\n// Random number generator - requires a PRNG backend, e.g. prng4.js\n\n// For best results, put code like\n// <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>\n// in your main HTML document.\n\nvar rng_state;\nvar rng_pool;\nvar rng_pptr;\n\n// Mix in a 32-bit integer into the pool\nfunction rng_seed_int(x) {\n  rng_pool[rng_pptr++] ^= x & 255;\n  rng_pool[rng_pptr++] ^= (x >> 8) & 255;\n  rng_pool[rng_pptr++] ^= (x >> 16) & 255;\n  rng_pool[rng_pptr++] ^= (x >> 24) & 255;\n  if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n}\n\n// Mix in the current time (w/milliseconds) into the pool\nfunction rng_seed_time() {\n  rng_seed_int(new Date().getTime());\n}\n\n// Initialize the pool with junk if needed.\nif(rng_pool == null) {\n  rng_pool = new Array();\n  rng_pptr = 0;\n  var t;\n  while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()\n    t = Math.floor(65536 * Math.random());\n    rng_pool[rng_pptr++] = t >>> 8;\n    rng_pool[rng_pptr++] = t & 255;\n  }\n  rng_pptr = 0;\n  rng_seed_time();\n  //rng_seed_int(window.screenX);\n  //rng_seed_int(window.screenY);\n}\n\nfunction rng_get_byte() {\n  if(rng_state == null) {\n    rng_seed_time();\n    rng_state = prng_newstate();\n    rng_state.init(rng_pool);\n    for(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n      rng_pool[rng_pptr] = 0;\n    rng_pptr = 0;\n    //rng_pool = null;\n  }\n  // TODO: allow reseeding after first request\n  return rng_state.next();\n}\n\nfunction rng_get_bytes(ba) {\n  var i;\n  for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n}\n\nfunction SecureRandom() {}\n\nSecureRandom.prototype.nextBytes = rng_get_bytes;/**\n*\n*  Secure Hash Algorithm (SHA256)\n*  http://www.webtoolkit.info/\n*\n*  Original code by Angel Marin, Paul Johnston.\n*\n**/\n\nvar crypto = require('crypto');\n \nfunction SHA256(s){\n\treturn crypto.createHash('sha256').update(s, 'utf8').digest('hex');\n}\n\nvar sha256 = {}\nsha256.hex = function(s)\n{\n    return SHA256(s);\n}\n\n/**\n*\n*  Secure Hash Algorithm (SHA1)\n*  http://www.webtoolkit.info/\n*\n**/\n \nfunction SHA1 (msg) {\n\treturn crypto.createHash('sha1').update(msg, 'utf8').digest('hex'); \n}\n\nvar sha1 = {}\nsha1.hex = function(s)\n{\n    return SHA1(s);\n}\n\n/**\n*\n*  MD5 (Message-Digest Algorithm)\n*  http://www.webtoolkit.info/\n*\n**/\n \nvar MD5 = function (string) {\n\treturn crypto.createHash('md5').update(string, 'utf8').digest('hex');\n}// Depends on jsbn.js and rng.js\n// Version 1.1: support utf-8 encoding in pkcs1pad2\n// convert a (hex) string to a bignum object\n\n\nfunction parseBigInt(str, r)\n{\n    return new BigInteger(str, r);\n}\n\nfunction linebrk(s, n)\n{\n    var ret = \"\";\n    var i = 0;\n    while (i + n < s.length)\n    {\n        ret += s.substring(i, i + n) + \"\\n\";\n        i += n;\n    }\n    return ret + s.substring(i, s.length);\n}\n\nfunction byte2Hex(b)\n{\n    if (b < 0x10) return \"0\" + b.toString(16);\n    else return b.toString(16);\n}\n\n// PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint\n\n\nfunction pkcs1pad2(s, n)\n{\n    if (n < s.length + 11)\n    { // TODO: fix for utf-8\n        //alert(\"Message too long for RSA (n=\" + n + \", l=\" + s.length + \")\");\n        //return null;\n        throw \"Message too long for RSA (n=\" + n + \", l=\" + s.length + \")\";\n    }\n    var ba = new Array();\n    var i = s.length - 1;\n    while (i >= 0 && n > 0)\n    {\n        var c = s.charCodeAt(i--);\n        if (c < 128)\n        { // encode using utf-8\n            ba[--n] = c;\n        }\n        else if ((c > 127) && (c < 2048))\n        {\n            ba[--n] = (c & 63) | 128;\n            ba[--n] = (c >> 6) | 192;\n        }\n        else\n        {\n            ba[--n] = (c & 63) | 128;\n            ba[--n] = ((c >> 6) & 63) | 128;\n            ba[--n] = (c >> 12) | 224;\n        }\n    }\n    ba[--n] = 0;\n    var rng = new SecureRandom();\n    var x = new Array();\n    while (n > 2)\n    { // random non-zero pad\n        x[0] = 0;\n        while (x[0] == 0) rng.nextBytes(x);\n        ba[--n] = x[0];\n    }\n    ba[--n] = 2;\n    ba[--n] = 0;\n    return new BigInteger(ba);\n}\n\n// \"empty\" RSA key constructor\n\n\nfunction RSAKey()\n{\n    this.n = null;\n    this.e = 0;\n    this.d = null;\n    this.p = null;\n    this.q = null;\n    this.dmp1 = null;\n    this.dmq1 = null;\n    this.coeff = null;\n}\n// Set the public key fields N and e from hex strings\n\n\nfunction RSASetPublic(N, E)\n{\n    if (N != null && E != null && N.length > 0 && E.length > 0)\n    {\n        this.n = parseBigInt(N, 16);\n        this.e = parseInt(E, 16);\n    }\n    else alert(\"Invalid RSA public key\");\n}\n\n// Perform raw public operation on \"x\": return x^e (mod n)\n\n\nfunction RSADoPublic(x)\n{\n    return x.modPowInt(this.e, this.n);\n}\n\n// Return the PKCS#1 RSA encryption of \"text\" as an even-length hex string\n\n\nfunction RSAEncrypt(text)\n{\n    var m = pkcs1pad2(text, (this.n.bitLength() + 7) >> 3);\n    if (m == null) return null;\n    var c = this.doPublic(m);\n    if (c == null) return null;\n    var h = c.toString(16);\n    if ((h.length & 1) == 0) return h;\n    else return \"0\" + h;\n}\n\nfunction RSAToJSON()\n{\n    return {\n        coeff: this.coeff.toString(16),\n        d: this.d.toString(16),\n        dmp1: this.dmp1.toString(16),\n        dmq1: this.dmq1.toString(16),\n        e: this.e.toString(16),\n        n: this.n.toString(16),\n        p: this.p.toString(16),\n        q: this.q.toString(16),\n    }\n}\n\nfunction RSAParse(rsaString) {\n    var json = JSON.parse(rsaString);\n    var rsa = new RSAKey();\n\n    rsa.setPrivateEx(json.n, json.e, json.d, json.p, json.q, json.dmp1, json.dmq1, json.coeff);\n\n    return rsa;\n}\n\n// Return the PKCS#1 RSA encryption of \"text\" as a Base64-encoded string\n//function RSAEncryptB64(text) {\n//  var h = this.encrypt(text);\n//  if(h) return hex2b64(h); else return null;\n//}\n// protected\nRSAKey.prototype.doPublic = RSADoPublic;\n\n// public\nRSAKey.prototype.setPublic = RSASetPublic;\nRSAKey.prototype.encrypt = RSAEncrypt;\nRSAKey.prototype.toJSON = RSAToJSON;\nRSAKey.parse = RSAParse;\n\n// Version 1.1: support utf-8 decoding in pkcs1unpad2\n// Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext\n\nfunction pkcs1unpad2(d, n)\n{\n    var b = d.toByteArray();\n    var i = 0;\n    while (i < b.length && b[i] == 0)++i;\n    if (b.length - i != n - 1 || b[i] != 2) return null;\n    ++i;\n    while (b[i] != 0)\n    if (++i >= b.length) return null;\n    var ret = \"\";\n    while (++i < b.length)\n    {\n        var c = b[i] & 255;\n        if (c < 128)\n        { // utf-8 decode\n            ret += String.fromCharCode(c);\n        }\n        else if ((c > 191) && (c < 224))\n        {\n            ret += String.fromCharCode(((c & 31) << 6) | (b[i + 1] & 63));\n            ++i;\n        }\n        else\n        {\n            ret += String.fromCharCode(((c & 15) << 12) | ((b[i + 1] & 63) << 6) | (b[i + 2] & 63));\n            i += 2;\n        }\n    }\n    return ret;\n}\n\n// Set the private key fields N, e, and d from hex strings\nfunction RSASetPrivate(N, E, D)\n{\n    if (N != null && E != null && N.length > 0 && E.length > 0)\n    {\n        this.n = parseBigInt(N, 16);\n        this.e = parseInt(E, 16);\n        this.d = parseBigInt(D, 16);\n    }\n    else alert(\"Invalid RSA private key\");\n}\n\n// Set the private key fields N, e, d and CRT params from hex strings\nfunction RSASetPrivateEx(N, E, D, P, Q, DP, DQ, C)\n{\n    if (N != null && E != null && N.length > 0 && E.length > 0)\n    {\n        this.n = parseBigInt(N, 16);\n        this.e = parseInt(E, 16);\n        this.d = parseBigInt(D, 16);\n        this.p = parseBigInt(P, 16);\n        this.q = parseBigInt(Q, 16);\n        this.dmp1 = parseBigInt(DP, 16);\n        this.dmq1 = parseBigInt(DQ, 16);\n        this.coeff = parseBigInt(C, 16);\n    }\n    else alert(\"Invalid RSA private key\");\n}\n\n// Generate a new random private key B bits long, using public expt E\nfunction RSAGenerate(B, E)\n{\n    var rng = new SeededRandom();\n    var qs = B >> 1;\n    this.e = parseInt(E, 16);\n    var ee = new BigInteger(E, 16);\n    for (;;)\n    {\n        for (;;)\n        {\n            this.p = new BigInteger(B - qs, 1, rng);\n            if (this.p.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) break;\n        }\n        for (;;)\n        {\n            this.q = new BigInteger(qs, 1, rng);\n            if (this.q.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) break;\n        }\n        if (this.p.compareTo(this.q) <= 0)\n        {\n            var t = this.p;\n            this.p = this.q;\n            this.q = t;\n        }\n        var p1 = this.p.subtract(BigInteger.ONE);\n        var q1 = this.q.subtract(BigInteger.ONE);\n        var phi = p1.multiply(q1);\n        if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0)\n        {\n            this.n = this.p.multiply(this.q);\n            this.d = ee.modInverse(phi);\n            this.dmp1 = this.d.mod(p1);\n            this.dmq1 = this.d.mod(q1);\n            this.coeff = this.q.modInverse(this.p);\n            break;\n        }\n    }\n}\n\n// Perform raw private operation on \"x\": return x^d (mod n)\nfunction RSADoPrivate(x)\n{\n    if (this.p == null || this.q == null) return x.modPow(this.d, this.n);\n    // TODO: re-calculate any missing CRT params\n    var xp = x.mod(this.p).modPow(this.dmp1, this.p);\n    var xq = x.mod(this.q).modPow(this.dmq1, this.q);\n    while (xp.compareTo(xq) < 0)\n    xp = xp.add(this.p);\n    return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);\n}\n\n// Return the PKCS#1 RSA decryption of \"ctext\".\n// \"ctext\" is an even-length hex string and the output is a plain string.\nfunction RSADecrypt(ctext)\n{\n    var c = parseBigInt(ctext, 16);\n    var m = this.doPrivate(c);\n    if (m == null) return null;\n    return pkcs1unpad2(m, (this.n.bitLength() + 7) >> 3);\n}\n\n// protected\nRSAKey.prototype.doPrivate = RSADoPrivate;\n\n// public\nRSAKey.prototype.setPrivate = RSASetPrivate;\nRSAKey.prototype.setPrivateEx = RSASetPrivateEx;\nRSAKey.prototype.generate = RSAGenerate;\nRSAKey.prototype.decrypt = RSADecrypt;\n\n\n//\n// rsa-sign.js - adding signing functions to RSAKey class.\n//\n//\n// version: 1.0 (2010-Jun-03)\n//\n// Copyright (c) 2010 Kenji Urushima (kenji.urushima@gmail.com)\n//\n// This software is licensed under the terms of the MIT License.\n// http://www.opensource.org/licenses/mit-license.php\n//\n// The above copyright and license notice shall be \n// included in all copies or substantial portions of the Software.\n//\n// Depends on:\n//   function sha1.hex(s) of sha1.js\n//   jsbn.js\n//   jsbn2.js\n//   rsa.js\n//   rsa2.js\n//\n// keysize / pmstrlen\n//  512 /  128\n// 1024 /  256\n// 2048 /  512\n// 4096 / 1024\n// As for _RSASGIN_DIHEAD values for each hash algorithm, see PKCS#1 v2.1 spec (p38).\nvar _RSASIGN_DIHEAD = [];\n_RSASIGN_DIHEAD['sha1'] = \"3021300906052b0e03021a05000414\";\n_RSASIGN_DIHEAD['sha256'] = \"3031300d060960864801650304020105000420\";\n//_RSASIGN_DIHEAD['md2'] = \"3020300c06082a864886f70d020205000410\";\n//_RSASIGN_DIHEAD['md5'] = \"3020300c06082a864886f70d020505000410\";\n//_RSASIGN_DIHEAD['sha384'] = \"3041300d060960864801650304020205000430\";\n//_RSASIGN_DIHEAD['sha512'] = \"3051300d060960864801650304020305000440\";\nvar _RSASIGN_HASHHEXFUNC = [];\n_RSASIGN_HASHHEXFUNC['sha1'] = sha1.hex;\n_RSASIGN_HASHHEXFUNC['sha256'] = sha256.hex;\n\n// ========================================================================\n// Signature Generation\n// ========================================================================\n\nfunction _rsasign_getHexPaddedDigestInfoForString(s, keySize, hashAlg)\n{\n    var pmStrLen = keySize / 4;\n    var hashFunc = _RSASIGN_HASHHEXFUNC[hashAlg];\n    var sHashHex = hashFunc(s);\n\n    var sHead = \"0001\";\n    var sTail = \"00\" + _RSASIGN_DIHEAD[hashAlg] + sHashHex;\n    var sMid = \"\";\n    var fLen = pmStrLen - sHead.length - sTail.length;\n    for (var i = 0; i < fLen; i += 2)\n    {\n        sMid += \"ff\";\n    }\n    sPaddedMessageHex = sHead + sMid + sTail;\n    return sPaddedMessageHex;\n}\n\nfunction _rsasign_signString(s, hashAlg)\n{\n    var hPM = _rsasign_getHexPaddedDigestInfoForString(s, this.n.bitLength(), hashAlg);\n    var biPaddedMessage = parseBigInt(hPM, 16);\n    var biSign = this.doPrivate(biPaddedMessage);\n    var hexSign = biSign.toString(16);\n    return hexSign;\n}\n\nfunction _rsasign_signStringWithSHA1(s)\n{\n    var hPM = _rsasign_getHexPaddedDigestInfoForString(s, this.n.bitLength(), 'sha1');\n    var biPaddedMessage = parseBigInt(hPM, 16);\n    var biSign = this.doPrivate(biPaddedMessage);\n    var hexSign = biSign.toString(16);\n    return hexSign;\n}\n\nfunction _rsasign_signStringWithSHA256(s)\n{\n    var hPM = _rsasign_getHexPaddedDigestInfoForString(s, this.n.bitLength(), 'sha256');\n    var biPaddedMessage = parseBigInt(hPM, 16);\n    var biSign = this.doPrivate(biPaddedMessage);\n    var hexSign = biSign.toString(16);\n    return hexSign;\n}\n\n// ========================================================================\n// Signature Verification\n// ========================================================================\n\nfunction _rsasign_getDecryptSignatureBI(biSig, hN, hE)\n{\n    var rsa = new RSAKey();\n    rsa.setPublic(hN, hE);\n    var biDecryptedSig = rsa.doPublic(biSig);\n    return biDecryptedSig;\n}\n\nfunction _rsasign_getHexDigestInfoFromSig(biSig, hN, hE)\n{\n    var biDecryptedSig = _rsasign_getDecryptSignatureBI(biSig, hN, hE);\n    var hDigestInfo = biDecryptedSig.toString(16).replace(/^1f+00/, '');\n    return hDigestInfo;\n}\n\nfunction _rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo)\n{\n    for (var algName in _RSASIGN_DIHEAD)\n    {\n        var head = _RSASIGN_DIHEAD[algName];\n        var len = head.length;\n        if (hDigestInfo.substring(0, len) == head)\n        {\n            var a = [algName, hDigestInfo.substring(len)];\n            return a;\n        }\n    }\n    return [];\n}\n\nfunction _rsasign_verifySignatureWithArgs(sMsg, biSig, hN, hE)\n{\n    var hDigestInfo = _rsasign_getHexDigestInfoFromSig(biSig, hN, hE);\n    var digestInfoAry = _rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo);\n    if (digestInfoAry.length == 0) return false;\n    var algName = digestInfoAry[0];\n    var diHashValue = digestInfoAry[1];\n    var ff = _RSASIGN_HASHHEXFUNC[algName];\n    var msgHashValue = ff(sMsg);\n    return (diHashValue == msgHashValue);\n}\n\nfunction _rsasign_verifyHexSignatureForMessage(hSig, sMsg)\n{\n    var biSig = parseBigInt(hSig, 16);\n    var result = _rsasign_verifySignatureWithArgs(sMsg, biSig, this.n.toString(16), this.e.toString(16));\n    return result;\n}\n\nfunction _rsasign_verifyString(sMsg, hSig)\n{\n    hSig = hSig.replace(/[ \\n]+/g, \"\");\n    var biSig = parseBigInt(hSig, 16);\n    var biDecryptedSig = this.doPublic(biSig);\n    var hDigestInfo = biDecryptedSig.toString(16).replace(/^1f+00/, '');\n    var digestInfoAry = _rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo);\n\n    if (digestInfoAry.length == 0) return false;\n    var algName = digestInfoAry[0];\n    var diHashValue = digestInfoAry[1];\n    var ff = _RSASIGN_HASHHEXFUNC[algName];\n    var msgHashValue = ff(sMsg);\n    return (diHashValue == msgHashValue);\n}\n\nRSAKey.prototype.signString = _rsasign_signString;\nRSAKey.prototype.signStringWithSHA1 = _rsasign_signStringWithSHA1;\nRSAKey.prototype.signStringWithSHA256 = _rsasign_signStringWithSHA256;\n\nRSAKey.prototype.verifyString = _rsasign_verifyString;\nRSAKey.prototype.verifyHexSignatureForMessage = _rsasign_verifyHexSignatureForMessage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n *  jsaes version 0.1  -  Copyright 2006 B. Poettering\n *\n *  This program is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU General Public License as\n *  published by the Free Software Foundation; either version 2 of the\n *  License, or (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n *  02111-1307 USA\n */\n \n // later modifications by wwwtyro@github\n \nvar aes = (function () {\n\n    var my = {};\n\n    my.Sbox = new Array(99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22);\n\n    my.ShiftRowTab = new Array(0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12, 1, 6, 11);\n\n    my.Init = function () {\n        my.Sbox_Inv = new Array(256);\n        for (var i = 0; i < 256; i++)\n        my.Sbox_Inv[my.Sbox[i]] = i;\n\n        my.ShiftRowTab_Inv = new Array(16);\n        for (var i = 0; i < 16; i++)\n        my.ShiftRowTab_Inv[my.ShiftRowTab[i]] = i;\n\n        my.xtime = new Array(256);\n        for (var i = 0; i < 128; i++) {\n            my.xtime[i] = i << 1;\n            my.xtime[128 + i] = (i << 1) ^ 0x1b;\n        }\n    }\n\n    my.Done = function () {\n        delete my.Sbox_Inv;\n        delete my.ShiftRowTab_Inv;\n        delete my.xtime;\n    }\n\n    my.ExpandKey = function (key) {\n        var kl = key.length,\n            ks, Rcon = 1;\n        switch (kl) {\n        case 16:\n            ks = 16 * (10 + 1);\n            break;\n        case 24:\n            ks = 16 * (12 + 1);\n            break;\n        case 32:\n            ks = 16 * (14 + 1);\n            break;\n        default:\n            alert(\"my.ExpandKey: Only key lengths of 16, 24 or 32 bytes allowed!\");\n        }\n        for (var i = kl; i < ks; i += 4) {\n            var temp = key.slice(i - 4, i);\n            if (i % kl == 0) {\n                temp = new Array(my.Sbox[temp[1]] ^ Rcon, my.Sbox[temp[2]], my.Sbox[temp[3]], my.Sbox[temp[0]]);\n                if ((Rcon <<= 1) >= 256) Rcon ^= 0x11b;\n            }\n            else if ((kl > 24) && (i % kl == 16)) temp = new Array(my.Sbox[temp[0]], my.Sbox[temp[1]], my.Sbox[temp[2]], my.Sbox[temp[3]]);\n            for (var j = 0; j < 4; j++)\n            key[i + j] = key[i + j - kl] ^ temp[j];\n        }\n    }\n\n    my.Encrypt = function (block, key) {\n        var l = key.length;\n        my.AddRoundKey(block, key.slice(0, 16));\n        for (var i = 16; i < l - 16; i += 16) {\n            my.SubBytes(block, my.Sbox);\n            my.ShiftRows(block, my.ShiftRowTab);\n            my.MixColumns(block);\n            my.AddRoundKey(block, key.slice(i, i + 16));\n        }\n        my.SubBytes(block, my.Sbox);\n        my.ShiftRows(block, my.ShiftRowTab);\n        my.AddRoundKey(block, key.slice(i, l));\n    }\n\n    my.Decrypt = function (block, key) {\n        var l = key.length;\n        my.AddRoundKey(block, key.slice(l - 16, l));\n        my.ShiftRows(block, my.ShiftRowTab_Inv);\n        my.SubBytes(block, my.Sbox_Inv);\n        for (var i = l - 32; i >= 16; i -= 16) {\n            my.AddRoundKey(block, key.slice(i, i + 16));\n            my.MixColumns_Inv(block);\n            my.ShiftRows(block, my.ShiftRowTab_Inv);\n            my.SubBytes(block, my.Sbox_Inv);\n        }\n        my.AddRoundKey(block, key.slice(0, 16));\n    }\n\n    my.SubBytes = function (state, sbox) {\n        for (var i = 0; i < 16; i++)\n        state[i] = sbox[state[i]];\n    }\n\n    my.AddRoundKey = function (state, rkey) {\n        for (var i = 0; i < 16; i++)\n        state[i] ^= rkey[i];\n    }\n\n    my.ShiftRows = function (state, shifttab) {\n        var h = new Array().concat(state);\n        for (var i = 0; i < 16; i++)\n        state[i] = h[shifttab[i]];\n    }\n\n    my.MixColumns = function (state) {\n        for (var i = 0; i < 16; i += 4) {\n            var s0 = state[i + 0],\n                s1 = state[i + 1];\n            var s2 = state[i + 2],\n                s3 = state[i + 3];\n            var h = s0 ^ s1 ^ s2 ^ s3;\n            state[i + 0] ^= h ^ my.xtime[s0 ^ s1];\n            state[i + 1] ^= h ^ my.xtime[s1 ^ s2];\n            state[i + 2] ^= h ^ my.xtime[s2 ^ s3];\n            state[i + 3] ^= h ^ my.xtime[s3 ^ s0];\n        }\n    }\n\n    my.MixColumns_Inv = function (state) {\n        for (var i = 0; i < 16; i += 4) {\n            var s0 = state[i + 0],\n                s1 = state[i + 1];\n            var s2 = state[i + 2],\n                s3 = state[i + 3];\n            var h = s0 ^ s1 ^ s2 ^ s3;\n            var xh = my.xtime[h];\n            var h1 = my.xtime[my.xtime[xh ^ s0 ^ s2]] ^ h;\n            var h2 = my.xtime[my.xtime[xh ^ s1 ^ s3]] ^ h;\n            state[i + 0] ^= h1 ^ my.xtime[s0 ^ s1];\n            state[i + 1] ^= h2 ^ my.xtime[s1 ^ s2];\n            state[i + 2] ^= h1 ^ my.xtime[s2 ^ s3];\n            state[i + 3] ^= h2 ^ my.xtime[s3 ^ s0];\n        }\n    }\n\n    return my;\n\n}());var cryptico = module.exports = (function() {\n\n    var my = {};\n\n    aes.Init();\n\n    var base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    my.b256to64 = function(t) {\n        var a, c, n;\n        var r = '', l = 0, s = 0;\n        var tl = t.length;\n        for (n = 0; n < tl; n++)\n        {\n            c = t.charCodeAt(n);\n            if (s == 0)\n            {\n                r += base64Chars.charAt((c >> 2) & 63);\n                a = (c & 3) << 4;\n            }\n            else if (s == 1)\n            {\n                r += base64Chars.charAt((a | (c >> 4) & 15));\n                a = (c & 15) << 2;\n            }\n            else if (s == 2)\n            {\n                r += base64Chars.charAt(a | ((c >> 6) & 3));\n                l += 1;\n                r += base64Chars.charAt(c & 63);\n            }\n            l += 1;\n            s += 1;\n            if (s == 3) s = 0;\n        }\n        if (s > 0)\n        {\n            r += base64Chars.charAt(a);\n            l += 1;\n            r += '=';\n            l += 1;\n        }\n        if (s == 1)\n        {\n            r += '=';\n        }\n        return r;\n    }\n\n    my.b64to256 = function(t) \n    {\n        var c, n;\n        var r = '', s = 0, a = 0;\n        var tl = t.length;\n        for (n = 0; n < tl; n++)\n        {\n            c = base64Chars.indexOf(t.charAt(n));\n            if (c >= 0)\n            {\n                if (s) r += String.fromCharCode(a | (c >> (6 - s)) & 255);\n                s = (s + 2) & 7;\n                a = (c << s) & 255;\n            }\n        }\n        return r;\n    }    \n\n    my.b16to64 = function(h) {\n        var i;\n        var c;\n        var ret = \"\";\n        if(h.length % 2 == 1)\n        {\n            h = \"0\" + h;\n        }\n        for (i = 0; i + 3 <= h.length; i += 3)\n        {\n            c = parseInt(h.substring(i, i + 3), 16);\n            ret += base64Chars.charAt(c >> 6) + base64Chars.charAt(c & 63);\n        }\n        if (i + 1 == h.length)\n        {\n            c = parseInt(h.substring(i, i + 1), 16);\n            ret += base64Chars.charAt(c << 2);\n        }\n        else if (i + 2 == h.length)\n        {\n            c = parseInt(h.substring(i, i + 2), 16);\n            ret += base64Chars.charAt(c >> 2) + base64Chars.charAt((c & 3) << 4);\n        }\n        while ((ret.length & 3) > 0) ret += \"=\";\n        return ret;\n    }\n\n    my.b64to16 = function(s) {\n        var ret = \"\";\n        var i;\n        var k = 0;\n        var slop;\n        for (i = 0; i < s.length; ++i)\n        {\n            if (s.charAt(i) == \"=\") break;\n            v = base64Chars.indexOf(s.charAt(i));\n            if (v < 0) continue;\n            if (k == 0)\n            {\n                ret += int2char(v >> 2);\n                slop = v & 3;\n                k = 1;\n            }\n            else if (k == 1)\n            {\n                ret += int2char((slop << 2) | (v >> 4));\n                slop = v & 0xf;\n                k = 2;\n            }\n            else if (k == 2)\n            {\n                ret += int2char(slop);\n                ret += int2char(v >> 2);\n                slop = v & 3;\n                k = 3;\n            }\n            else\n            {\n                ret += int2char((slop << 2) | (v >> 4));\n                ret += int2char(v & 0xf);\n                k = 0;\n            }\n        }\n        if (k == 1) ret += int2char(slop << 2);\n        return ret;\n    }\n    \n    // Converts a string to a byte array.\n    my.string2bytes = function(string)\n    {\n        var bytes = new Array();\n        for(var i = 0; i < string.length; i++) \n        {\n            bytes.push(string.charCodeAt(i));\n        }\n        return bytes;\n    }\n\n    // Converts a byte array to a string.\n    my.bytes2string = function(bytes)\n    {\n        var string = \"\";\n        for(var i = 0; i < bytes.length; i++)\n        {\n            string += String.fromCharCode(bytes[i]);\n        }   \n        return string;\n    }\n    \n    // Returns a XOR b, where a and b are 16-byte byte arrays.\n    my.blockXOR = function(a, b)\n    {\n        var xor = new Array(16);\n        for(var i = 0; i < 16; i++)\n        {\n            xor[i] = a[i] ^ b[i];\n        }\n        return xor;\n    }\n    \n    // Returns a 16-byte initialization vector.\n    my.blockIV = function()\n    {\n        var r = new SecureRandom();\n        var IV = new Array(16);\n        r.nextBytes(IV);\n        return IV;\n    }\n    \n    // Returns a copy of bytes with zeros appended to the end\n    // so that the (length of bytes) % 16 == 0.\n    my.pad16 = function(bytes)\n    {\n        var newBytes = bytes.slice(0);\n        var padding = (16 - (bytes.length % 16)) % 16;\n        for(i = bytes.length; i < bytes.length + padding; i++)\n        {\n            newBytes.push(0);\n        }\n        return newBytes;\n    }\n    \n    // Removes trailing zeros from a byte array.\n    my.depad = function(bytes)\n    {\n        var newBytes = bytes.slice(0);\n        while(newBytes[newBytes.length - 1] == 0)\n        {\n            newBytes = newBytes.slice(0, newBytes.length - 1);\n        }\n        return newBytes;\n    }\n    \n    // AES CBC Encryption.\n    my.encryptAESCBC = function(plaintext, key)\n    {\n        var exkey = key.slice(0);\n        aes.ExpandKey(exkey);\n        var blocks = my.string2bytes(plaintext);\n        blocks = my.pad16(blocks);\n        var encryptedBlocks = my.blockIV();\n        for(var i = 0; i < blocks.length/16; i++)\n        {\n            var tempBlock = blocks.slice(i * 16, i * 16 + 16);\n            var prevBlock = encryptedBlocks.slice((i) * 16, (i) * 16 + 16);\n            tempBlock = my.blockXOR(prevBlock, tempBlock);\n            aes.Encrypt(tempBlock, exkey);\n            encryptedBlocks = encryptedBlocks.concat(tempBlock);\n        }\n        var ciphertext = my.bytes2string(encryptedBlocks);\n        return my.b256to64(ciphertext)\n    }\n\n    // AES CBC Decryption.\n    my.decryptAESCBC = function(encryptedText, key)\n    {\n        var exkey = key.slice(0);\n        aes.ExpandKey(exkey);\n        var encryptedText = my.b64to256(encryptedText);\n        var encryptedBlocks = my.string2bytes(encryptedText);\n        var decryptedBlocks = new Array();\n        for(var i = 1; i < encryptedBlocks.length/16; i++)\n        {\n            var tempBlock = encryptedBlocks.slice(i * 16, i * 16 + 16);\n            var prevBlock = encryptedBlocks.slice((i-1) * 16, (i-1) * 16 + 16);\n            aes.Decrypt(tempBlock, exkey);\n            tempBlock = my.blockXOR(prevBlock, tempBlock);\n            decryptedBlocks = decryptedBlocks.concat(tempBlock);\n        }\n        decryptedBlocks = my.depad(decryptedBlocks);\n        return my.bytes2string(decryptedBlocks);\n    }\n    \n    // Wraps a string to 60 characters.\n    my.wrap60 = function(string) \n    {\n        var outstr = \"\";\n        for(var i = 0; i < string.length; i++) {\n            if(i % 60 == 0 && i != 0) outstr += \"\\n\";\n            outstr += string[i]; }\n        return outstr; \n    }\n\n    // Generate a random key for the AES-encrypted message.\n    my.generateAESKey = function()\n    {\n        var key = new Array(32);\n        var r = new SecureRandom();\n        r.nextBytes(key);\n        return key;\n    }\n\n    // Generates an RSA key from a passphrase.\n    my.generateRSAKey = function(passphrase, bitlength)\n    {\n        Math.seedrandom(sha256.hex(passphrase));\n        var rsa = new RSAKey();\n        rsa.generate(bitlength, \"03\");\n        return rsa;\n    }\n\n    // Returns the ascii-armored version of the public key.\n    my.publicKeyString = function(rsakey) \n    {\n        pubkey = my.b16to64(rsakey.n.toString(16));\n        return pubkey; \n    }\n    \n    // Returns an MD5 sum of a publicKeyString for easier identification.\n    my.publicKeyID = function(publicKeyString)\n    {\n        return MD5(publicKeyString);\n    }\n    \n    my.publicKeyFromString = function(string)\n    {\n        var N = my.b64to16(string.split(\"|\")[0]);\n        var E = \"03\";\n        var rsa = new RSAKey();\n        rsa.setPublic(N, E);\n        return rsa\n    }\n    \n    my.encrypt = function(plaintext, publickeystring, signingkey)\n    {\n        var cipherblock = \"\";\n        var aeskey = my.generateAESKey();\n        try\n        {\n            var publickey = my.publicKeyFromString(publickeystring);\n            cipherblock += my.b16to64(publickey.encrypt(my.bytes2string(aeskey))) + \"?\";\n        }\n        catch(err)\n        {\n            return {status: \"Invalid public key\"};\n        }\n        if(signingkey)\n        {\n            signString = cryptico.b16to64(signingkey.signString(plaintext, \"sha256\"));\n            plaintext += \"::52cee64bb3a38f6403386519a39ac91c::\";\n            plaintext += cryptico.publicKeyString(signingkey);\n            plaintext += \"::52cee64bb3a38f6403386519a39ac91c::\";\n            plaintext += signString;\n        }\n        cipherblock += my.encryptAESCBC(plaintext, aeskey);    \n        return {status: \"success\", cipher: cipherblock};\n    }\n\n    my.decrypt = function(ciphertext, key)\n    {\n        var cipherblock = ciphertext.split(\"?\");\n        var aeskey = key.decrypt(my.b64to16(cipherblock[0]));\n        if(aeskey == null)\n        {\n            return {status: \"failure\"};\n        }\n        aeskey = my.string2bytes(aeskey);\n        var plaintext = my.decryptAESCBC(cipherblock[1], aeskey).split(\"::52cee64bb3a38f6403386519a39ac91c::\");\n        if(plaintext.length == 3)\n        {\n            var publickey = my.publicKeyFromString(plaintext[1]);\n            var signature = my.b64to16(plaintext[2]);\n            if(publickey.verifyString(plaintext[0], signature))\n            {\n                return {status: \"success\", \n                        plaintext: plaintext[0], \n                        signature: \"verified\", \n                        publicKeyString: my.publicKeyString(publickey)};\n            }\n            else\n            {\n                return {status: \"success\", \n                        plaintext: plaintext[0], \n                        signature: \"forged\", \n                        publicKeyString: my.publicKeyString(publickey)};\n            }\n        }\n        else\n        {\n            return {status: \"success\", plaintext: plaintext[0], signature: \"unsigned\"};\n        }\n    }\n\n    return my;\n\n}());\n\nmodule.exports.RSAKey = RSAKey;"]},"metadata":{},"sourceType":"script"}