/**
 * index.js
 */
export declare const encrypt: (msg: Uint8Array, key: Uint8Array, { name, iv, additionalData, tagLength }: import("./params").cipherOptions) => Promise<Uint8Array>;
export declare const decrypt: (data: Uint8Array, key: Uint8Array, { name, iv, additionalData, tagLength }: import("./params").cipherOptions) => Promise<Uint8Array>;
export declare const wrapKey: (keyToBeWrapped: Uint8Array, wrappingKey: Uint8Array, { name }: {
    name: "AES-KW";
}) => Promise<Uint8Array>;
export declare const unwrapKey: (wrappedKey: Uint8Array, wrappingKey: Uint8Array, { name }: {
    name: "AES-KW";
}) => Promise<Uint8Array>;
declare const _default: {
    encrypt: (msg: Uint8Array, key: Uint8Array, { name, iv, additionalData, tagLength }: import("./params").cipherOptions) => Promise<Uint8Array>;
    decrypt: (data: Uint8Array, key: Uint8Array, { name, iv, additionalData, tagLength }: import("./params").cipherOptions) => Promise<Uint8Array>;
    wrapKey: (keyToBeWrapped: Uint8Array, wrappingKey: Uint8Array, { name }: {
        name: "AES-KW";
    }) => Promise<Uint8Array>;
    unwrapKey: (wrappedKey: Uint8Array, wrappingKey: Uint8Array, { name }: {
        name: "AES-KW";
    }) => Promise<Uint8Array>;
};
export default _default;
