{"version":3,"sources":["hooks/useLocalStorage.js","services/wallet/createWallet.js","services/wallet/isReceivingTransaction.js","services/blockchain/getAccountTransactions.js","services/blockchain/postTransaction.js","services/wallet/updateWalletTransactions.js","services/strAb.js","services/wallet/sign.js","services/wallet/getOpenTransactionBalance.js","services/wallet/findFormer.js","services/wallet/getReferenceTransactions.js","services/blockchain/getOpenTransaction.js","services/wallet/createTransaction.js","config/index.js","components/wallet.js","services/wallet/calculateBalance.js","services/wallet/isLoopTransaction.js","components/transaction.js","App.js","serviceWorker.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","createWallet","a","rsa","generateKey","keyutils","Key","publicKey","export","pem_pub_key","privateKey","pem_pri_key","transactions","isReceivingTransaction","wallet","transaction","rcv","getAccountTransactions","endpoint","account_key","url","axios","post","response","data","postTransaction","Axios","updateWalletTransactions","str2ab","str","buf","ArrayBuffer","length","bufView","Uint16Array","i","strLen","charCodeAt","sign","name","saltLength","sig","verify","getOpenTransactionBalance","amt","filter","t","frm","map","reduce","total","x","findFormer","amount","Object","values","rest","former","openTransactionBalance","val","Math","min","getReferenceTransactions","openTransaction","reference","lot","entries","isValid","getLastOpenTransaction","push","getOpenTransaction","get","buildTransactionString","sender","receiver","refered","keys","f","former_string","refered_string","r","addSig","transactionString","buffer","Array","prototype","call","Uint8Array","toString","slice","join","Wallet","setTransaction","setWallet","setLoadingTransactions","setAmount","setReceiver","loadTransactions","className","snd","isLoopTransaction","calculateBalance","split","p","Form","Field","placeholder","onChange","e","target","TextArea","Button","type","primary","onClick","createTransaction","Transaction","icon","Icon","Table","celled","Header","Row","HeaderCell","Body","t_k","Cell","App","setEndpoint","Input","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b24fd6d.chunk.js","sourcesContent":["import { useState } from \"react\";\n\n// Hook\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import rsa from \"js-crypto-rsa\";\nimport keyutils from \"js-crypto-key-utils\";\n\nexport default async function createWallet() {\n  const key = await rsa.generateKey(2048);\n  let pem_pub_key = await new keyutils.Key(\"jwk\", key.publicKey).export(\"pem\");\n  let pem_pri_key = await new keyutils.Key(\"jwk\", key.privateKey).export(\"pem\");\n\n  return {\n    publicKey: key.publicKey,\n    transactions: [],\n    privateKey: key.privateKey,\n    pem_pub_key,\n    pem_pri_key\n  };\n}\n","export default function isReceivingTransaction(wallet, transaction) {\n  return wallet.pem_pub_key === transaction.rcv;\n}\n","import axios from \"axios\";\n\nexport default async function getAccountTransactions(endpoint, account_key) {\n  const url = endpoint + \"/accounts/transactions\";\n  const response = await axios.post(url, {\n    account_key\n  });\n  return response.data;\n}\n","import Axios from \"axios\";\n\nexport default async function postTransaction(endpoint, transaction) {\n  if (!transaction) {\n    console.log(\"No valid transaction provided.\");\n    return;\n  }\n  const url = endpoint + \"/transactions\";\n  const response = await Axios.post(url, { transaction });\n  console.log(response);\n  return response.data;\n}\n","import { getAccountTransactions } from \"../blockchain\";\n\nexport default async function updateWalletTransactions(endpoint, wallet) {\n  const transactions = await getAccountTransactions(\n    endpoint,\n    wallet.pem_pub_key\n  );\n  if (transactions) {\n    wallet[\"transactions\"] = transactions;\n  }\n  return wallet;\n}\n","export function ab2str(buf) {\n  return String.fromCharCode.apply(null, new Uint16Array(buf));\n}\n\nexport function str2ab(str) {\n  var buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  var bufView = new Uint16Array(buf);\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\nexport function buf2hex(buffer) {\n  // buffer is an ArrayBuffer\n  return Array.prototype.map\n    .call(new Uint8Array(buffer), x => (\"00\" + x.toString(16)).slice(-2))\n    .join(\"\");\n}\n","import rsa from \"js-crypto-rsa\"; // for npm\nimport { str2ab } from \"../strAb\";\nexport default async function(transaction, wallet) {\n  const sig = await rsa.sign(\n    str2ab(transaction),\n    wallet.privateKey,\n    \"SHA-256\",\n    {\n      name: \"RSASSA-PKCS1-v1_5\", // default. 'RSASSA-PKCS1-v1_5' is also available.\n      saltLength: 64\n    }\n  );\n\n  const valid = await rsa.verify(\n    str2ab(transaction),\n    sig,\n    wallet.publicKey,\n    \"SHA-256\",\n    { name: \"RSA-PSS\", saltLength: 64 }\n  );\n  return sig;\n}\n","export default function getOpenTransactionBalance(transactions, transaction) {\n  console.log(transaction);\n  return (\n    transaction.amt -\n    transactions\n      .filter(t => {\n        return !!t.frm[transaction.sig];\n      })\n      .map(t => {\n        return t.amt;\n      })\n      .reduce((total, x) => {\n        return total + x;\n      }, 0)\n  );\n}\n","import getOpenTransactionBalance from \"./getOpenTransactionBalance\";\n\nexport default function findFormer(wallet, amount) {\n  const transactions = Object.values(wallet.transactions);\n  let rest = amount;\n  let former = {};\n  for (let i in transactions) {\n    let t = transactions[i];\n    const openTransactionBalance = getOpenTransactionBalance(transactions, t);\n    console.log(openTransactionBalance);\n    if (openTransactionBalance > 0) {\n      let val = Math.min(rest, openTransactionBalance);\n      former[t.sig] = val;\n      rest -= val;\n    }\n    if (rest <= 0) {\n      return former;\n    }\n    console.log(former, rest);\n  }\n  return null;\n}\n","function getLastOpenTransaction(wallet) {\n  for (let t of Object.entries(wallet.transactions)) {\n    if (!t[1].isValid) {\n      return t[0];\n    }\n  }\n}\n\nexport default function getReferenceTransactions(wallet, openTransaction) {\n  const reference = [];\n  const lot = getLastOpenTransaction(wallet);\n  console.log(lot, openTransaction);\n  if (lot) {\n    reference.push(lot);\n  }\n  if (openTransaction) {\n    reference.push(openTransaction.sig);\n  }\n  return reference;\n}\n","import Axios from \"axios\";\n\nexport default async function getOpenTransaction(endpoint) {\n  const url = endpoint + \"/transactions/open/one\";\n  const response = await Axios.get(url);\n  return response.data;\n}\n","import sign from \"./sign\";\nimport { buf2hex, str2ab } from \"../strAb\";\nimport { ARR_SEPERATOR, SEPERATOR } from \"../../config\";\nimport findFormer from \"./findFormer\";\nimport getReferenceTransactions from \"./getReferenceTransactions\";\nimport getOpenTransaction from \"../blockchain/getOpenTransaction\";\n\n/***/\nfunction buildTransactionString({ sender, receiver, amount, former, refered }) {\n  return (\n    \"frm:\" +\n    Object.keys(former)\n      .map(f => f + \"-\" + former[f])\n      .reduce(\n        (former_string, f) =>\n          former_string == \"\" ? f : former_string + ARR_SEPERATOR + f,\n        \"\"\n      ) +\n    SEPERATOR +\n    \"snd:\" +\n    sender +\n    SEPERATOR +\n    \"rcv:\" +\n    receiver +\n    SEPERATOR +\n    \"amt:\" +\n    amount +\n    SEPERATOR +\n    \"ref:\" +\n    refered.reduce(\n      (refered_string, r) =>\n        refered_string == \"\" ? r : refered_string + ARR_SEPERATOR + r,\n      \"\"\n    ) +\n    SEPERATOR\n  );\n}\n\nfunction addSig(transactionString, sig) {\n  return transactionString + \"sig:\" + buf2hex(sig);\n}\n\nexport default async function(amount, receiver, wallet, endpoint) {\n  let former = findFormer(wallet, amount);\n  if (!former) {\n    console.log(\"Not enough balance apparently!\");\n    return null;\n  }\n  let refered = getReferenceTransactions(\n    wallet,\n    await getOpenTransaction(endpoint)\n  );\n  console.log(refered);\n  let transactionString = buildTransactionString({\n    amount,\n    receiver,\n    former,\n    sender: wallet.pem_pub_key,\n    refered\n  });\n  const sig = await sign(transactionString, wallet);\n  transactionString = addSig(transactionString, sig);\n  return transactionString;\n}\n","export const KEY_BITS = 2048;\nexport const SEPERATOR = \"3241klfhaue\";\nexport const ARR_SEPERATOR = \"xmru382mu8m3p9421\";\n","import React, { useState } from \"react\";\nimport { postTransaction } from \"../services/blockchain\";\nimport {\n  calculateBalance,\n  updateWalletTransactions,\n  createTransaction,\n  stringToHex\n} from \"../services\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\n\nexport default function Wallet({\n  wallet,\n  setTransaction,\n  setWallet,\n  endpoint\n}) {\n  const [loadingTransactions, setLoadingTransactions] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const loadTransactions = async () => {\n    setLoadingTransactions(true);\n    setWallet(await updateWalletTransactions(endpoint, wallet));\n    setLoadingTransactions(false);\n  };\n\n  return (\n    <div>\n      <div className=\"clbc-wallet-container\">\n        <div>\n          <div className=\"clbc-balance-wrapper\">\n            <h3>Balance</h3>\n            <p>{calculateBalance(wallet)}</p>\n          </div>\n          <div className=\"clbc-public-key-wrapper\">\n            <h3>Public Key</h3>\n            <p>\n              {wallet.pem_pub_key.split(\"\\n\").map(p => (\n                <>\n                  {p}\n                  <br />\n                </>\n              ))}\n            </p>\n          </div>\n        </div>\n        <div>\n          <div className=\"clbc-create-transaction-wrapper\">\n            <h3>Send</h3>\n            <Form>\n              <Form.Field>\n                <label>Amount</label>\n                <input\n                  placeholder=\"Amount\"\n                  value={amount}\n                  onChange={e => setAmount(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Receiver Key</label>\n                <TextArea\n                  placeholder=\"Receiver Key\"\n                  value={receiver}\n                  onChange={e => {\n                    setReceiver(e.target.value);\n                  }}\n                />\n              </Form.Field>\n              <Button\n                type=\"button\"\n                primary\n                onClick={async () => {\n                  await postTransaction(\n                    endpoint,\n                    await createTransaction(amount, receiver, wallet, endpoint)\n                  );\n                  loadTransactions();\n                  setReceiver(\"\");\n                  setAmount(\"\");\n                }}\n              >\n                Submit\n              </Button>\n            </Form>\n          </div>\n          <div className=\"clbc-create-transaction-history-wrapper\">\n            <h3>History</h3>\n            <Button primary onClick={loadTransactions}>\n              Reload\n            </Button>\n            <ul>\n              {Object.values(wallet.transactions).map(t => (\n                <li onClick={() => setTransaction(t)}>\n                  {t.sig.slice(0, 30) + \"...\"}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { isReceivingTransaction, isLoopTransaction } from \"..\";\n\nexport default function calculateBalance(wallet) {\n  return Object.values(wallet.transactions)\n    .filter(\n      t =>\n        (t.val || !isReceivingTransaction(wallet, t)) && !isLoopTransaction(t)\n    )\n    .map(t => (isReceivingTransaction(wallet, t) ? t.amt : -t.amt))\n    .reduce((t, total) => t + total, 0);\n}\n","export default function isLoopTransaction(t) {\n  return t.snd == t.rcv;\n}\n","import React from \"react\";\nimport { Button, Icon, Table } from \"semantic-ui-react\";\nimport { stringToHex } from \"../services\";\n\nexport default function Transaction({ transaction, setTransaction }) {\n  return (\n    <div>\n      <Button icon onClick={() => setTransaction()}>\n        <Icon name=\"arrow left\" />\n      </Button>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Key</Table.HeaderCell>\n            <Table.HeaderCell>Value</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {Object.keys(transaction).map(t_k => (\n            <Table.Row>\n              <Table.Cell>{t_k}</Table.Cell>\n              <Table.Cell>\n                {t_k === \"sig\" && (\n                  <div className=\"clbc-transaction-table-value\">\n                    {transaction[t_k]}\n                  </div>\n                )}\n                {t_k === \"ref\" && (\n                  <div className=\"clbc-transaction-table-value\">\n                    {JSON.stringify(transaction[t_k])}\n                  </div>\n                )}\n                {t_k === \"frm\" && (\n                  <div className=\"clbc-transaction-table-value\">\n                    {JSON.stringify(transaction[t_k])}\n                  </div>\n                )}\n                {t_k === \"amt\" && transaction[t_k]}\n                {t_k === \"val\" && \"\" + transaction[t_k]}\n                {t_k === \"snd\" && (\n                  <div className=\"clbc-transaction-table-value\">\n                    {transaction[t_k]}\n                  </div>\n                )}\n                {t_k === \"rcv\" && (\n                  <div className=\"clbc-transaction-table-value\">\n                    {transaction[t_k]}\n                  </div>\n                )}\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { createWallet } from \"./services\";\nimport \"./App.css\";\nimport { Button, Input } from \"semantic-ui-react\";\nimport { Transaction, Wallet } from \"./components\";\n\nfunction App() {\n  const [wallet, setWallet] = useLocalStorage(\"wallet\");\n  const [transaction, setTransaction] = useState();\n  const [endpoint, setEndpoint] = useState(\"http://localhost:5000\");\n\n  return (\n    <div className=\"clbc-container\">\n      <h1>Consensusless Blockchain</h1>\n      {wallet ? (\n        transaction ? (\n          <Transaction\n            transaction={transaction}\n            setTransaction={setTransaction}\n          />\n        ) : (\n          <Wallet\n            wallet={wallet}\n            setTransaction={setTransaction}\n            endpoint={endpoint}\n            setWallet={setWallet}\n          />\n        )\n      ) : (\n        <div className=\"clbc-no-wallet-container\">\n          <h2>>No wallet found</h2>\n          <p>To interact with the blockchain you need to create a wallet.</p>\n          <Button primary onClick={async () => setWallet(await createWallet())}>\n            Create New Wallet\n          </Button>\n        </div>\n      )}\n      <div>\n        <h2>Use Node</h2>\n        <Input value={endpoint} onChange={e => setEndpoint(e.target.value)} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}